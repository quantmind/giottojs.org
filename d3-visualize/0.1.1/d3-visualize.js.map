{"version":3,"file":"d3-visualize.js","sources":["../src/utils/randompath.js","../src/data/array.js","../src/data/warn.js","../src/utils/isurl.js","../src/data/remote.js","../src/data/composite.js","../src/data/expression.js","../src/utils/accessor.js","../src/data/dataframe.js","../src/utils/warn.js","../src/transforms/filter.js","../src/utils/fillarray.js","../src/transforms/aggregate.js","../src/transforms/crossfilter.js","../src/transforms/timeseries.js","../src/core/options.js","../src/transforms/mapfields.js","../src/transforms/base.js","../src/utils/minmax.js","../src/transforms/moving-average.js","../src/transforms/index.js","../src/data/sources.js","../src/data/store.js","../src/data/locale.js","../src/utils/round.js","../src/utils/size.js","../src/core/base.js","../src/core/visual.js","../src/utils/camelfunction.js","../src/core/chart.js","../src/core/paper.js","../src/plugins/menu.js","../src/utils/format.js","../src/plugins/data.js","../src/plugins/responsive.js","../src/plugins/title.js","../src/plugins/margin.js","../src/plugins/axis.js","../src/plugins/color.js","../src/plugins/legend.js","../src/plugins/clusterize.js","../src/plugins/paginate.js","../src/plugins/bootstrap.js","../src/plugins/index.js","../src/core/container.js","../src/components/dashboard.js","../src/components/visual.js","../src/data/formatters.js","../src/utils/columns.js","../src/components/tabular.js","../src/components/index.js","../src/utils/constant.js","../src/utils/descending.js","../src/utils/identity.js","../src/transforms/pyramid.js","../src/charts/line.js","../src/charts/bar.js","../src/charts/box.js","../src/charts/area.js","../src/charts/pie.js","../src/utils/polygon.js","../src/charts/pyramid.js","../src/charts/treemap.js","../src/charts/text.js","../index.js"],"sourcesContent":["import assign from 'object-assign';\nimport {range} from 'd3-array';\nimport {randomNormal} from 'd3-random';\n\n\nconst defaults = {\n    sigma: 0.1,\n    drift: 0\n};\n\n\nexport default function (size, options) {\n    options = assign({}, defaults, options);\n    var t = range(0, +size, 1),\n        S = options.sigma,\n        drift = options.drift,\n        data = [{x: 0, y: 0}],\n        norm = randomNormal(0, 1),\n        dx;\n\n    for (var i = 1; i < t.length; i++) {\n        dx = drift + S * norm();\n        data[i] = {\n            x: i,\n            y: data[i - 1].y + dx\n        };\n    }\n\n    return data;\n}\n","import {isArray, isObject} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\n//\n//  Array DataSource\n//  ====================\n//\n//  Data is given in an array, pkain & simple\nexport default {\n\n    initialise (config) {\n        this._data = config.data;\n    },\n\n    getConfig (config) {\n        if (isArray(config)) return {data: config};\n        else if (isObject(config) && isArray(config.data)) return config;\n    },\n\n    getData () {\n        return resolvedPromise(this.asFrame(this._data));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-data-source]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import {isString} from 'd3-let';\n\n\nconst schemes = ['http', 'https', 'ws', 'wss'];\n\n\nexport default function (value) {\n    return isString(value) && schemes.indexOf(value.split('://')[0]) > -1;\n}\n","import {csvParse} from 'd3-dsv';\nimport {isObject} from 'd3-let';\nimport {viewProviders, resolvedPromise} from 'd3-view';\n\nimport warn from './warn';\nimport isUrl from '../utils/isurl';\n\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isUrl(config)) return {url: config};\n        else if (isObject(config) && config.url)\n            return config;\n    },\n\n    initialise (config) {\n        this.url = config.url;\n    },\n\n    getData () {\n        var fetch = viewProviders.fetch,\n            self = this;\n        if (!fetch) {\n            warn('fetch provider not available, cannot submit');\n            return resolvedPromise([]);\n        }\n        return fetch(this.url).then(parse).then((data) => self.asFrame(data));\n    }\n};\n\n\nfunction parse (response) {\n    var ct = (response.headers.get('content-type') || '').split(';')[0];\n    if (ct === 'text/plain' || ct === 'text/csv')\n        return response.text().then(csvParse);\n    else if (ct === 'application/json')\n        return response.json();\n    else {\n        warn(`Cannot load content type '${ct}'`);\n        return [];\n    }\n}\n","import {isArray, isObject} from 'd3-let';\n//\n//  A composite dataSource\n//  ===================\n//\n//  A composite data source has the source attribute with the name of one\n//  or more data sets to use as the source for this data set.\n//  The source property is useful in combination with a transform pipeline\n//  to derive new data.\n//  If string-valued, indicates the name of the source data set.\n//  If array-valued, specifies a collection of data source names that\n//  should be merged (unioned) together.\nexport default {\n\n    initialise (config) {\n        this.source = config.source;\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.source) {\n            if (!isArray(config.source)) config.source = [config.source];\n            return config;\n        }\n    },\n\n    getData () {\n        var store = this.store,\n            self = this;\n        let frame;\n        return Promise.all(this.source.map(source => {\n             return store.getData(source);\n        })).then(frames => {\n            if (frames.length === 1) frame = frames[0];\n            else frame = self.mergeFrames(frames);\n            return self.asFrame(frame);\n        });\n    },\n\n    // TODO: implement frame merging\n    mergeFrames (frames) {\n        return frames[0];\n    }\n};\n","import {isObject} from 'd3-let';\nimport {viewExpression, resolvedPromise} from 'd3-view';\n\n\nexport default {\n\n    initialise (config) {\n        this.expression = viewExpression(config.expression);\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.expression)\n            return config;\n    },\n\n    getData () {\n        var self = this,\n            model = this.store.model;\n        return resolvedPromise(this.expression.eval(model)).then((data) => self.asFrame(data));\n    }\n};\n","export default function (field) {\n    return function (d) {\n        return d[field];\n    };\n}\n","import {isArray} from 'd3-let';\nimport {map} from 'd3-collection';\nimport crossfilter from 'crossfilter';\n\nimport accessor from '../utils/accessor';\n\n\nexport default function DataFrame (data, serie, store) {\n    if (isArray(data)) data = {\n        store: store,\n        data: data,\n        dimensions: {},\n        series: map()\n    };\n    Object.defineProperties(this, {\n        _inner: {\n            get () {\n                return data;\n            }\n        },\n        store: {\n            get () {\n                return data.store;\n            }\n        },\n        data: {\n            get () {\n                return data.data;\n            }\n        },\n        dimensions: {\n            get () {\n                return data.dimensions;\n            }\n        },\n        series: {\n            get () {\n                return data.series;\n            }\n        }\n    });\n    this.serie = serie;\n}\n\n\nDataFrame.prototype = {\n\n    size () {\n        return this.data.length;\n    },\n\n    new (serie) {\n        if (isArray(serie)) return new DataFrame(serie, null, this.store);\n        else return new DataFrame(this._inner, serie);\n    },\n\n    cf () {\n        if (!this._inner.cf) this._inner.cf = crossfilter(this.data);\n        return this._inner.cf;\n    },\n\n    //  Create and return a crossfilter dimension\n    //  If value is not specified, keepExisting is by default true, and any\n    //  existing dimension name is recycled.\n    dimension (name, value, keepExisting) {\n        if (arguments.length === 1) keepExisting = true;\n        var current = this.dimensions[name];\n        if (current) {\n            if (keepExisting) return current;\n            current.dispose();\n        }\n        if (!value) value = accessor(name);\n        this.dimensions[name] = this.cf().dimension(value);\n        return this.dimensions[name];\n    },\n\n    //  Sort a dataframe by name and return the top values or all of them if\n    //  top is not defined. The name can be a function.\n    sortby (name, top) {\n        return this.new(this.dimension(name).top(top || Infinity));\n    },\n\n    // return a new dataframe by pivoting values for field name\n    pivot (dimension, key, value, total) {\n        var group = this.dimension(dimension).group();\n        if (!total) total = 'total';\n        return this.new(group.reduce(pivoter(1), pivoter(-1), Object).all().map(d => d.value));\n\n        function pivoter (m) {\n            let pk, pv;\n            return function (o, record) {\n                pk = ''+record[key];\n                pv = m*record[value];\n                o[dimension] = record[dimension];\n                if (pk in o) o[pk] += pv;\n                else o[pk] = pv;\n                if (total in o) o[total] += pv;\n                else o[total] = pv;\n                return o;\n            };\n        }\n    },\n\n    add () {\n        //this._inner.cf.add(data);\n    },\n\n    map (mapper) {\n        return this.new(this.data.map(mapper));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-visualize]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var dimension = config.dimension;\n\n    if (!dimension) warn('Filter transform requires a \"dimenstion\" entry');\n\n    return filter;\n\n    function filter (frame) {\n        if (dimension) {\n            var d = frame.dimension(dimension);\n            return frame.new(d.group());\n        }\n    }\n}\n","export default function (size, value) {\n    var a = new Array(size);\n    a.fill(value);\n    return a;\n}\n","import {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {max, min, sum, mean, median, variance, deviation} from 'd3-array';\n\nimport warn from '../utils/warn';\nimport fillArray from '../utils/fillarray';\n\nexport const operations = map({\n    count,\n    max,\n    min,\n    sum,\n    mean,\n    median,\n    variance,\n    deviation\n});\n\nexport const scalar_operations = map({\n    count (agg) {return agg + 1;},\n    sum (agg, v) {return agg + v;},\n    max: Math.max,\n    min: Math.min\n});\n\n\nfunction count (array, accessor) {\n    return array.reduce((v, d) => {\n        if (accessor(d) !== undefined) v += 1;\n        return v;\n    });\n}\n//\n// The aggregate transform groups and summarizes an imput data stream to\n// produce a derived output data stream. Aggregate transforms can be used\n// to compute counts, sums, averages and other descriptive statistics over\n// groups of data objects.\nexport default function (config) {\n    let fields = config.fields,\n        ops = config.ops,\n        as = config.as,\n        groupby = config.groupby;\n\n    if (!fields && !ops) return countAll;\n\n    if (!isArray(fields)) return warn('Aggregate transforms expect an array of fields');\n    if (!ops) ops = 'count';\n    if (isString(ops)) ops = fillArray(fields.length, ops);\n    if (!isArray(ops)) return warn('Aggregate transform expects an array of ops');\n    if (ops.length < fields.length) warn('Aggregate transforms expects an ops array with same length as fields');\n    if (!as) as = [];\n    if (!isArray(as)) return warn('Aggregate transform expects an array of as fields');\n    return aggregate;\n\n\n    function countAll (frame) {\n        let key;\n        return frame.data.reduce((o, d) => {\n            for (key in d) {\n                if (key in o) o[key] += 1;\n                else o[key] = 1;\n            }\n            return o;\n        }, {});\n    }\n\n    function aggregate (frame) {\n        var data = [],\n            name, op;\n\n        if (groupby) return group(frame);\n\n        fields.forEach((field, index) => {\n            name = ops[index];\n            op = count;\n            if (name) {\n                op = operations.get(name);\n                if (!op) {\n                    op = count;\n                    warn(`Operation ${ops[index]} is not supported, use count`);\n                }\n            }\n            data.push({\n                label: as[index] || field,\n                data: op(frame.data, d => d[field])\n            });\n        });\n        return data;\n    }\n\n    //\n    //  Perform aggregation with a set of data fields to group by\n    function group (frame) {\n        let v, name, op;\n        const entries = fields.map((field, index) => {\n            name = ops[index];\n            op = scalar_operations.get('count');\n            if (name) {\n                op = scalar_operations.get(name);\n                if (!op) {\n                    op = scalar_operations.get('count');\n                    warn(`Operation ${name} is not supported, use count`);\n                }\n            }\n            return {\n                field: field,\n                as: as[index] || field,\n                op: op\n            };\n        });\n\n        return frame.dimension(groupby).group().reduce((o, record) => {\n            return entries.reduce((oo, entry) => {\n                v = 0;\n                if (entry.as in oo) v = oo[entry.as];\n                oo[entry.as] = entry.op(v, record[entry.field]);\n                return oo;\n            }, o);\n        }, null, Object).all().map(d => {\n            d.value[groupby] = d.key;\n            return d.value;\n        });\n    }\n}\n","import {isArray, isString} from 'd3-let';\nimport warn from '../utils/warn';\n\n//\n// Apply a cross filter to an array of fields\nexport default function (config) {\n    let fields = config.fields,\n        query = config.query;\n\n    if (!isArray(fields)) return warn('crossfilter transform expects an array of fields');\n    if (!isArray(query)) return warn('crossfilter transform expects an array of query');\n    if (query.length != fields.length) return warn('crossfilter transform expects an query array with same length as fields');\n\n    return crossfilter;\n\n    function crossfilter (frame) {\n        let dim, q;\n        return fields.reduce((df, field, index) => {\n            q = query[index];\n            if (isString(q)) q = frame.store.eval(q);\n            if (q) {\n                dim = df.dimension(field).filterAll();\n                df = df.new(dim.filter(q).top(Infinity));\n            }\n            return df;\n        }, frame);\n    }\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var sortby = config.sortby,\n        groupby = config.groupby;\n\n    if (!sortby) warn('timeseries transform requires a \"sortby\" entry');\n\n    return timeseries;\n\n    function timeseries (frame) {\n        if (sortby) {\n            if (groupby) {\n                var dim = frame.dimension(groupby),\n                    groups = dim.group().top(Infinity),\n                    newframe = frame.new([]),\n                    tmp;\n                groups.forEach(group => {\n                    tmp = frame.new(dim.filterExact(group.key).top(Infinity)).dimension(sortby).group().top(Infinity);\n                    newframe.series.set(group.key, frame.new(tmp).dimension('key').top(Infinity));\n                });\n                return newframe;\n            } else {\n                return frame.new(frame.dimension(sortby).top(Infinity));\n            }\n        }\n        return frame;\n    }\n}\n","//\n//  Global options for visuals\n//  ============================\n//\nexport default {\n    // visual data source\n    dataSource: null,\n    //\n    size: {\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    }\n};\n","//\n//  Map Fields Transform\n//  ========================\n//\n//  Convert a set af fields to a different data type\n//\nimport assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {isString} from 'd3-let';\nimport {utcParse} from 'd3-time-format';\n\nimport warn from '../utils/warn';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.dateFormat = '%d-%b-%y';\n\n\nconst converters = {\n    date (entry) {\n        return utcParse(entry.dateFormat || globalOptions.dateFormat);\n    },\n    number () {\n        return parseFloat;\n    }\n};\n\n\n//\nexport default function (config) {\n    config = assign({}, globalOptions.dateFormat, config);\n    var fields = map(config.fields);\n    let i, converter;\n\n    return mapfields;\n\n    function mapfields (frame) {\n        var mappers = [];\n\n        fields.each((entry, key) => {\n            if (isString(entry)) entry = {type: entry};\n            converter = converters[entry.type];\n            if (!converter) warn(`Cannot convert field ${key} to type ${entry.type}`);\n            else mappers.push([key, converter(entry)]);\n        });\n\n        if (mappers.length)\n            frame = frame.map(d => {\n                for (i=0; i<mappers.length; ++i)\n                    d[mappers[i][0]] = mappers[i][1](d[mappers[i][0]]);\n                return d;\n            });\n\n        return frame;\n    }\n}\n","import {viewProviders} from 'd3-view';\n\n\nexport default function (options) {\n    const\n        transform = options.transform,\n        schema = options.schema || {},\n        jsonValidator = viewProviders.jsonValidator ? viewProviders.jsonValidator(options.schema) : dummyValidator;\n    if (!schema.type) schema.type = 'object';\n\n    function transformFactory (config) {\n        const valid = jsonValidator.validate(config);\n\n        if (!valid) return jsonValidator.logError();\n\n        return doTransform;\n\n        function doTransform (frame) {\n            return transform(frame, config);\n        }\n    }\n\n    transformFactory.schema = schema;\n\n    return transformFactory;\n}\n\n\nconst dummyValidator = {\n    validate () {\n        return true;\n    }\n};\n","export default function (value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n","import transformFactory from './base';\nimport minmax from '../utils/minmax';\n\nconst\n    DEFAULT_METHOD = 'ema',   // or sma simple moving average\n    DEFAULT_PERIOD = 10,\n    DEFAULT_ALPHA = 0.5,\n    MAXALPHA = 0.999999;\n\n//\n// Exponential moving average transform\n// Useful for smoothing out volatile timeseries\nexport default transformFactory({\n    shema: {\n        description: \"Create moving average series from existing one. The new series override the existing one unless the as array is provided\",\n        properties: {\n            method: {\n                type: \"string\"\n            },\n            alpha: {\n                type: \"number\"\n            },\n            period: {\n                type: \"number\"\n            },\n            fields: {\n                type: \"array\",\n                items: {\n                    type: \"string\"\n                }\n            },\n            as: {\n                type: \"array\",\n                items: {\n                    type: \"string\"\n                }\n            }\n        },\n        required: [\"fields\"]\n    },\n    transform (frame, config) {\n        const as = config.as || [],\n            method = config.method || DEFAULT_METHOD;\n        let fieldto, y, s;\n\n        config.fields.forEach((field, index) => {\n            fieldto = as[index] || field;\n            //\n            // Simple Moving Average\n            if (method === 'sma') {\n                const period = Math.max(config.period || DEFAULT_PERIOD, 1),\n                    cumulate = [],\n                    buffer = [];\n                frame.data.forEach((d, index) => {\n                    y = d[field];\n                    if (cumulate.length === period) y -= buffer.splice(0, 1)[0];\n                    buffer.push(y);\n                    if (index) y += cumulate[cumulate.length-1];\n                    cumulate.push(y);\n                    d[fieldto] = y/cumulate.length;\n                });\n            //\n            // Exponential moving average\n            } else {\n                const alpha = minmax(config.alpha || DEFAULT_ALPHA, 1-MAXALPHA, MAXALPHA);\n\n                frame.data.forEach((d, index) => {\n                    y = d[field];\n                    if (!index) s = y;\n                    else s = alpha*s + (1-alpha)*y;\n                    d[fieldto] = s;\n                });\n            }\n        });\n    }\n});\n","// Collection of transforms\nimport {map} from 'd3-collection';\nimport {isArray} from 'd3-let';\n\nimport filter from './filter';\nimport aggregate from './aggregate';\nimport crossfilter from './crossfilter';\nimport timeseries from './timeseries';\nimport mapfields from './mapfields';\nimport movingaverage from './moving-average';\n\n//\n//  transforms Store\nexport default map({\n    filter,\n    aggregate,\n    mapfields,\n    timeseries,\n    crossfilter,\n    movingaverage\n});\n\n\n// Apply data transforms to a series\nexport function applyTransforms (frame, transforms) {\n    let ts;\n    if (!transforms) return frame;\n    transforms.forEach(transform => {\n        if (transform) {\n            ts = transform(frame);\n            if (isArray(ts)) frame = frame.new(ts);\n            else if (ts) frame = ts;\n        }\n    });\n    return frame;\n}\n","import assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {pop, isArray} from 'd3-let';\n\nimport DataFrame from './dataframe';\nimport transformStore, {applyTransforms} from '../transforms/index';\nimport warn from '../utils/warn';\n\nconst dataEvents = dispatch('init', 'data');\n\n\n//\n//  DataSource prototype\n//  ======================\nconst dataSourcePrototype = {\n\n    // get the config object-assign// This method is used by the prototype\n    // to check if the config object is a valid one\n    getConfig () {},\n\n    // initialise the data source with a config object\n    initialise () {},\n\n    getData () {},\n\n    //\n    addTransforms (transforms) {\n        var self = this;\n        let t;\n        if (!transforms) return;\n        if (!isArray(transforms)) transforms = [transforms];\n        transforms.forEach(transform => {\n            t = transformStore.get(transform.type);\n            if (!t) warn(`Transform \"${transform.type}\" not known`);\n            else self.transforms.push(t(transform));\n        });\n    },\n    //\n    // given a data object returns a Cross filter object\n    asFrame (data) {\n        if (isArray(data)) {\n            data = data.map(entry => {\n                if (entry.constructor !== Object) entry = {data: entry};\n                return entry;\n            });\n            data = new DataFrame(data, null, this.store);\n        }\n        return applyTransforms(data, this.transforms);\n    }\n};\n\n\n// DataSource container\nexport default assign(map(), {\n    events: dataEvents,\n\n    add (type, source) {\n\n        // DataSource constructor\n        function DataSource (config, store) {\n            initDataSource(this, type, config, store);\n        }\n\n        DataSource.prototype = assign({}, dataSourcePrototype, source);\n\n        this.set(type, DataSource);\n        return DataSource;\n    },\n\n    // Create a new DataSource\n    create (config, store) {\n        var sources = this.values(),\n            cfg;\n        for (var i=0; i<sources.length; ++i) {\n            cfg = sources[i].prototype.getConfig(config);\n            if (cfg) return new sources[i](cfg, store);\n        }\n    }\n});\n\n\nfunction initDataSource(dataSource, type, config, store) {\n\n    var name = store.dataName(pop(config, 'name')),\n        transforms = [];\n\n    // store.natural = cf.dimension(d => d._id);\n\n    Object.defineProperties(dataSource, {\n        name: {\n            get () {\n                return name;\n            }\n        },\n        store: {\n            get () {\n                return store;\n            }\n        },\n        type: {\n            get () {\n                return type;\n            }\n        },\n        // transforms to apply to data\n        transforms: {\n            get () {\n                return transforms;\n            }\n        },\n        config: {\n            get () {\n                return config;\n            }\n        }\n    });\n\n    dataSource.initialise(config);\n    dataSource.addTransforms(pop(config, 'transforms'));\n    store.sources.set(name, dataSource);\n    dataEvents.call('init', undefined, dataSource);\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {resolvedPromise, viewExpression} from 'd3-view';\n\nimport array from './array';\nimport remote from './remote';\nimport composite from './composite';\nimport expression from './expression';\nimport dataSources from './sources';\nimport transformStore from '../transforms/index';\n\n\ndataSources.add('array', array);\ndataSources.add('remote', remote);\ndataSources.add('composite', composite);\ndataSources.add('expression', expression);\n\n//\n//  DataStore\n//  ==============\n//\n//  Map names to datasets\n//  Individual data sets are assumed to contain a collection of records\n//  (or “rows”), which may contain any number of named data\n//  attributes (fields, or “columns”).\n//  Records are modeled using standard JavaScript objects.\nexport default function DataStore(model) {\n    var sources = map();\n\n    Object.defineProperties(this, {\n        sources: {\n            get () {\n                return sources;\n            }\n        }\n    });\n\n    // transforms function\n    this.transforms = assign({}, transformStore);\n    this.dataCount = 0;\n    this.model = model;\n}\n\n\nDataStore.prototype = {\n    size () {\n        return this.sources.size();\n    },\n\n    // Add a new serie from a data source\n    addSources (config) {\n        //\n        // data is a string, it must be already registered with store\n        if (isString(config)) config = {source: config};\n\n        if (isArray(config)) {\n            var self = this;\n            return config.map(cfg => {\n                return dataSources.create(cfg, self);\n            });\n        } else if (config) {\n            return dataSources.create(config, this);\n        }\n    },\n\n    addTransforms (transforms) {\n        assign(this.transforms, transforms);\n    },\n\n    // set, get or remove a data source\n    source (name, source) {\n        if (arguments.length === 1) return this.sources.get(name);\n        if (source === null) {\n            var p = this.sources.get(name);\n            this.sources.remove(name);\n            return p;\n        }\n        this.sources.set(name, source);\n        return this;\n    },\n\n    clearCache () {\n        this.sources.each(ds => {\n            delete ds.cachedFrame;\n        });\n    },\n\n    // get data from a source\n    getData (source) {\n        var ds = this.sources.get(source);\n        if (!ds) throw new Error(`Data source ${source} not available`);\n        if (ds.cachedFrame) return resolvedPromise(ds.cachedFrame);\n        return ds.getData().then(frame => {\n            if (ds.config.cache) ds.cachedFrame = frame;\n            return frame;\n        });\n    },\n\n    eval (expr, context) {\n        let ctx = this.model;\n        if (context) ctx = ctx.$child(context);\n        return viewExpression(expr).safeEval(ctx);\n    },\n\n    dataName (name) {\n        this.dataCount++;\n        if (name) return '' + name;\n        var def = this.source('default');\n        if (!def) return 'default';\n        return `source${this.dataCount}`;\n    }\n};\n","// utility to load and set locale\nimport {formatDefaultLocale} from 'd3-format';\nimport {timeFormatDefaultLocale, timeFormat} from 'd3-time-format';\n\nimport dataSources from './sources';\n\n//\n// manage locale\nexport default {\n    formatDate: timeFormat('%d/%m/%Y'),\n\n    formatDateTime: timeFormat('%a %e %b %X %Y'),\n\n    load (symbol) {\n        var locales = this,\n            source1 = dataSources.create(`https://unpkg.com/d3-format/locale/${symbol}.json`),\n            source2 = dataSources.create(`https://unpkg.com/d3-time-format/locale/${symbol}.json`);\n\n        return Promise.all([\n            source1.load().then(\n                locale => {\n                    locales.symbol = symbol;\n                    locales.number = locale;\n                    formatDefaultLocale(locale);\n                }\n            ),\n            source2.load().then(\n                locale => {\n                    locales.time = locale;\n                    locales.formatDate = timeFormat(locale.date);\n                    locales.formatDateTime = timeFormat(locale.dateTime);\n                    timeFormatDefaultLocale(locale);\n                }\n            )\n        ]);\n    }\n};\n","export default function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n}\n","import {select} from 'd3-selection';\n\nimport round from './round';\n\n\nconst WIDTH = 400;\nconst HEIGHT = '75%';\n\n\nexport function sizeValue (value, size) {\n    if (typeof(value) === \"string\" && value.indexOf('%') === value.length-1)\n        return round(0.01*parseFloat(value)*size);\n    return +value;\n}\n\n// Internal function for evaluating paper dom size\nexport function getSize (element, options) {\n    var size = {\n        width: options.width,\n        height: options.height\n    };\n\n    if (!size.width) {\n        size.width = getWidth(element);\n        if (size.width)\n            size.widthElement = getWidthElement(element);\n        else\n            size.width = WIDTH;\n    }\n\n    if (!size.height) {\n        size.height = getHeight(element);\n        if (size.height)\n            size.heightElement = getHeightElement(element);\n        else\n            size.height = HEIGHT;\n    }\n\n    // Allow to specify height as a percentage of width\n    size.height = sizeValue(size.height, size.width);\n    return size;\n}\n\n\nexport function getWidth (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementWidth(el);\n}\n\n\nexport function getHeight (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementHeight(el);\n}\n\n\nexport function getWidthElement (element) {\n    return getParentElementRect(element, 'width');\n}\n\n\nexport function getHeightElement (element) {\n    return getParentElementRect(element, 'height');\n}\n\n\nfunction elementWidth (el) {\n    var w = el.getBoundingClientRect()['width'],\n        s = select(el),\n        left = padding(s.style('padding-left')),\n        right = padding(s.style('padding-right'));\n    return w - left - right;\n}\n\n\nfunction elementHeight (el) {\n    var w = el.getBoundingClientRect()['height'],\n        s = select(el),\n        top = padding(s.style('padding-top')),\n        bottom = padding(s.style('padding-bottom'));\n    return w - top - bottom;\n}\n\n\nfunction getParentElementRect (element, key) {\n    let parent = element.node ? element.node() : element,\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        v = parent.getBoundingClientRect()[key];\n        if (v)\n            return parent;\n        parent = parent.parentNode;\n    }\n}\n\n\nfunction padding (value) {\n    if (value && value.substring(value.length-2) == 'px')\n        return +value.substring(0, value.length-2);\n    return 0;\n}\n\n\nexport function boundingBox (size) {\n    var w = size.widthElement ? getWidth(size.widthElement) : size.width,\n        h;\n    if (size.heightPercentage)\n        h = round(w*size.heightPercentage, 0);\n    else\n        h = size.heightElement ? getHeight(size.heightElement) : size.height;\n    if (size.minHeight)\n        h = Math.max(h, size.minHeight);\n    return [round(w), round(h)];\n}\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\nimport {dispatch} from 'd3-dispatch';\nimport {select} from 'd3-selection';\nimport {viewBase, viewModel} from 'd3-view';\nimport 'd3-transition';\n\nimport globalOptions from './options';\nimport {sizeValue} from '../utils/size';\n\n\nconst CONTAINERS = ['visual', 'container'];\n\n//\n//  Gloval visuals object\n//  ==========================\n//\n//  Container of\n//  * live visuals\n//  * visual types\n//  * paper types\n//  * visual events\nexport const visuals = {\n    live: [],\n    types: {},\n    papers: {},\n    options: globalOptions,\n    events: dispatch(\n        'before-init',\n        'after-init',\n        'before-draw',\n        'after-draw'\n    )\n};\n\n//\n//  Visual Interface\n//  ====================\n//\n//  Base prototype object for visuals\n//\nexport const visualPrototype = assign({}, {\n\n    // initialise the visual with options\n    initialise () {\n\n    },\n\n    // draw this visual\n    draw () {},\n\n    // redraw the visual\n    // this is the method that should be invoked by applications\n    redraw () {\n        if (this.drawing) {\n            var self = this,\n                event = `after-draw.${this.toString()}`;\n            visuals.events.on(event, () => {\n                // remove callback\n                visuals.events.on(event, null);\n                self.redraw();\n            });\n        } else\n            this.drawing = this.draw();\n        return this.drawing;\n    },\n\n    select (el) {\n        return select(el);\n    },\n\n    // destroy the visual\n    destroy () {\n\n    },\n\n    toString () {\n        return `${this.visualType}-${this.model.uid}`;\n    },\n\n    // get a reactive model for type\n    getModel (type) {\n        if (!type) type = this.visualType;\n        var model = this.model[type];\n        if (!model && type in globalOptions) {\n            var options = pop(this.options, type),\n                self = this;\n            if (this.visualParent)\n                model = this.visualParent.getModel(type).$child(options);\n            else {\n                model = this.model.$new(globalOptions[type]);\n                model.$update(options);\n            }\n            this.model[type] = model;\n            model.$on(() => self.draw());\n        }\n        return model;\n    },\n\n    dim (size, refSize, minSize, maxSize) {\n        size = Math.max(sizeValue(size, refSize), minSize || 0);\n        if (maxSize) {\n            maxSize = Math.max(maxSize, minSize || 0);\n            size = Math.min(size, maxSize);\n        }\n        return size;\n    },\n\n    pop (container) {\n        if (container) {\n            var idx = container.live.indexOf(this);\n            if (idx > -1) container.live.splice(idx, 1);\n        }\n    }\n}, viewBase);\n\n//\n//  Create a new Visual Constructor\nexport default function (type, proto) {\n    const opts = pop(proto, 'options');\n    if (opts)\n        globalOptions[type] = opts;\n\n    function Visual(element, options, parent, model) {\n        Object.defineProperties(this, {\n            visualType: {\n                get () {\n                    return type;\n                }\n            },\n            isViz: {\n                get () {\n                    return CONTAINERS.indexOf(type) === -1;\n                }\n            }\n        });\n        this.visualParent = parent;\n        this.model = parent ? parent.model.$new() : (model || viewModel());\n        this.options = options || {};\n        this.drawing = false;\n        visuals.events.call('before-init', undefined, this);\n        this.initialise(element);\n        visuals.events.call('after-init', undefined, this);\n    }\n\n    Visual.prototype = assign({}, visualPrototype, proto);\n    visuals.types[type] = Visual;\n    return Visual;\n}\n","import {pop, inBrowser} from 'd3-let';\nimport {select} from 'd3-selection';\nimport {viewDebug} from 'd3-view';\n\nimport createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\nimport {getSize} from '../utils/size';\n\n//\n//  Visual\n//  =============\n//\n//  A Visual is a a container of visual layers and it is\n//  associated with an HTML element\n//\n//  Usually a Visual contains one layer only, however it is possible to\n//  have more than one by combining several layers together. Importantly,\n//  layers in one visual generate HTMLElements which are children of the visual\n//  element and inherit both the width and height.\n//\n//  A visual register itself with the visuals.live array\n//\nexport default createVisual('visual', {\n\n    options: {\n        render: 'svg',\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%',\n        // heightElement - selector for an element from wich to obtain height\n        heightElement: null\n    },\n\n    initialise (element) {\n        if (!element) throw new Error('HTMLElement required by visual group');\n        if (this.visualParent && this.visualParent.visualType !== 'container')\n            throw new Error('Visual parent can be a container only');\n        if (!this.select(element).select('.paper').node())\n            this.select(element).append('div').classed('paper', true);\n\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            paper : {\n                get () {\n                    return this.sel.select('.paper');\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            size: {\n                get () {\n                    return [this.width, this.height];\n                }\n            }\n        });\n\n        this.sel.classed('d3-visual', true);\n        // list of layers which define the visual\n        this.layers = [];\n        this.drawCount = 0;\n        visuals.live.push(this);\n        element.__visual__ = this;\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    toString () {\n        return `visual ${this.model.uid}`;\n    },\n\n    // Draw the visual\n    draw() {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        else if (!this.drawCount) {\n            this.drawCount = 1;\n            this.fit();\n        } else {\n            this.drawCount++;\n            this.clear();\n        }\n        var self = this;\n        visuals.events.call('before-draw', undefined, this);\n        return Promise.all(this.layers.map(visual => visual.redraw()))\n            .then(() => {\n                delete self.drawing;\n                visuals.events.call('after-draw', undefined, self);\n            }, err => {\n                delete self.drawing;\n                warn(`Could not draw ${self.toString()}: ${err}`);\n            });\n    },\n\n    clear () {},\n\n    // Add a new visual to this group\n    addVisual (options) {\n        var type = pop(options, 'type');\n        var VisualClass = visuals.types[type];\n        if (!VisualClass)\n            warn(`Cannot add visual ${options.type}`);\n        else\n            return new VisualClass(this.element, options, this);\n    },\n    //\n    // Fit the root element to the size of the parent element\n    fit () {\n        this.resize(null, true);\n    },\n\n    resize (size, fit) {\n        if (!size) size = getSize(this.element.parentNode || this.element, this.getModel());\n        var currentSize = this.size;\n\n        if (fit || (currentSize[0] !== size.width || currentSize[1] !== size.height)) {\n            if (!fit) viewDebug(`Resizing \"${this.toString()}\"`);\n            this.width = size.width;\n            this.height = size.height;\n            this.paper.style('width', this.width + 'px').style('height', this.height + 'px');\n            if (!fit) this.draw();\n        }\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n        this.pop(visuals);\n    }\n});\n\n\nif (inBrowser) {\n    // DOM observer\n    // Check for changes in the DOM that leads to visual actions\n    const observer = new MutationObserver(visualManager);\n    observer.observe(document.documentElement, {\n        childList: true,\n        subtree: true\n    });\n}\n\n//\n//  Clears visualisation going out of scope\nfunction visualManager (records) {\n    records.forEach(record => {\n        var nodes = record.removedNodes;\n        if (!nodes || !nodes.length) return;  // phantomJs hack\n        nodes.forEach(node => {\n            if (node.nodeName !== '#text') {\n                if (!node.__visual__)\n                    select(node).selectAll('.d3-visual').each(destroy);\n                else\n                    destroy.call(node);\n            }\n        });\n    });\n}\n\n\nfunction destroy () {\n    var viz = this.__visual__;\n    if (viz) {\n        viz.destroy();\n        viewDebug(`Removed \"${viz.toString()}\" from DOM, ${visuals.live.length} live visuals left`);\n    }\n    else warn('d3-visual without __visual__ object');\n}\n","export default function (o, prefix, name, objectOnly) {\n    if (name.substring(0, prefix.length) !== prefix)\n        name = `${prefix}${name[0].toUpperCase()}${name.substring(1)}`;\n    return objectOnly ? o[name] : o[name]();\n}\n","import assign from 'object-assign';\nimport {isFunction} from 'd3-let';\nimport * as d3_scale from 'd3-scale';\n\nimport createVisual, {visuals} from './base';\nimport Visual from './visual';\nimport camelFunction from '../utils/camelfunction';\nimport warn from '../utils/warn';\n\n//\n//  crateChart\n//\n//  A chart is a drawing of series data in two dimensional\nexport default function (type) {\n    var protos = [{}, vizPrototype, chartPrototype];\n    for (var i=1; i<arguments.length; ++i) protos.push(arguments[i]);\n    return createVisual(type, assign.apply(undefined, protos));\n}\n\n\n//  Viz Prototype\n//  =================\nexport const vizPrototype = {\n\n    initialise (element) {\n        // No visual parent, create the visual\n        var visual = this.visualParent;\n        if (!visual) {\n            this.visualParent = visual = new Visual(element, this.options, null, this.model);\n            this.model = visual.model.$new();\n            this.options = {};\n        } else if (visual.visualType !== 'visual')\n            throw new Error(`visual parent of ${this.visualType} can only be \"visual\"`);\n        visual.layers.push(this);\n    },\n\n    //\n    // paper object for this visualisation\n    paper () {\n        var visual = this.getModel('visual'),\n            paper = this._paper;\n        if (paper && paper.paperType === visual.render) return paper;\n        var PaperType = visuals.papers[visual.render];\n        if (!PaperType) throw new Error(`Unknown paper ${visual.render}`);\n        paper = new PaperType(this);\n        this._paper = paper;\n        return paper;\n    },\n\n    translate (x, y) {\n        if (isFunction(x)) {\n            return function (d) {\n                var xt = x(d) || 0,\n                    yt = y(d) || 0;\n                return `translate(${xt}, ${yt})`;\n            };\n        } else return `translate(${x}, ${y})`;\n    },\n\n    getScale (name) {\n        return camelFunction(d3_scale, 'scale', name);\n    },\n\n    displayError () {}\n};\n\n\nexport const chartPrototype = {\n\n    //  override draw method\n    draw () {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        var self = this;\n        visuals.events.call('before-draw', undefined, this);\n        this.getData().then(frame => {\n            delete self.drawing;\n            if (frame) {\n                this.doDraw(frame);\n                visuals.events.call('after-draw', undefined, self);\n            }\n        }, err => {\n            delete self.drawing;\n            warn(`Could not draw ${self.toString()}: ${err}`);\n            this.displayError(err);\n        });\n    }\n};\n","import assign from 'object-assign';\nimport {select} from 'd3-selection';\n\nimport {visuals} from './base';\n\n\nexport default function createPaper (type, proto) {\n\n    function Paper (viz) {\n        var element = this.initialise(viz);\n        Object.defineProperties(this, {\n            element: {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            paperType: {\n                get () {\n                    return type;\n                }\n            }\n        });\n    }\n\n    Paper.prototype = assign({}, paperPrototype, proto);\n\n    visuals.papers[type] = Paper;\n    return Paper;\n}\n\n\nconst paperPrototype = {\n\n    initialise () {},\n    transition () {},\n    size (box) {\n        this.sel\n            .attr('width', box.width)\n            .attr('height', box.height);\n        return this;\n    },\n\n    group (cname) {\n        if (!cname) cname = 'main';\n        var sel = this.sel;\n        sel\n            .selectAll(`.${cname}`)\n            .data([0]).enter()\n            .append('g').classed(cname, true);\n        return sel.select(`.${cname}`);\n    },\n\n    dim (value) {\n        return value;\n    }\n};\n\n\nexport const Svg = createPaper('svg', {\n\n    initialise (viz) {\n        var svg = viz.visualParent.paper.append('svg')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true);\n        return svg.node();\n    }\n});\n","//\n//  Add a menu buttom to a visual\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\n\n\nglobalOptions.menu = {\n    display: false,\n    height: '8%',\n    maxHeight: 50,\n    minHeight: 20\n};\n\n\nvisuals.events.on('after-init.menu', viz => {\n    if (viz.visualType === 'visual') {\n        var menu = viz.getModel('menu');\n        if (menu.display) {\n            viz.menu = viz.sel.insert('nav', ':first-child').classed('d3-nav navbar p-1', true);\n            viz.menu.append('h4').classed('title', true);\n        }\n    }\n});\n\nvisuals.events.on('before-draw.menu', viz => {\n    if (viz && viz.menu) {\n        refreshMenu(viz);\n    }\n});\n\n\nfunction refreshMenu(viz) {\n    var menu = viz.getModel('menu'),\n        height = viz.dim(menu.height, viz.height, menu.minHeight, menu.maxHeight);\n    viz.menu.style('height', `${height}px`);\n}\n","import {format} from 'd3-format';\nimport {map} from 'd3-collection';\n\nconst formats = map();\n\nexport default function (specifier, value) {\n    var fmt = formats.get(specifier);\n    if (!fmt) {\n        fmt = format(specifier);\n        formats.set(specifier, fmt);\n    }\n    return fmt(value);\n}\n","//\n//  dataStore integration with visuals\nimport {isString, pop} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport {visuals} from '../core/base';\nimport DataStore from '../data/store';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\nimport cachedFormat from '../utils/format';\n\n//\n// Visual Data Context\nvisuals.options.dataContext = {\n    $format: cachedFormat\n};\n\n//  getData method\n//  =====================\n//\n//  Inject a method for easily retrieving data from the datastore\nvizPrototype.getData = function () {\n    var name = this.model.data;\n    if (!name) {\n        warn(`Visual ${this.visualType} without data name, cannot get data`);\n        return resolvedPromise();\n    }\n    return this.dataStore.getData(name);\n};\n\n//\n// Context for expression evaluation\nvizPrototype.getContext = function (context) {\n    return this.dataStore.model.$child(context);\n};\n\n\nvisuals.events.on('before-init.data', viz => {\n    if (!viz.isViz) return;\n    // remove data from options\n    viz.data = pop(viz.options, 'data');\n});\n\n\nvisuals.events.on('after-init.data', viz => {\n    Object.defineProperties(viz, {\n        dataStore : {\n            get () {\n                if (viz.visualParent) return viz.visualParent.dataStore;\n                return viz.model.dataStore;\n            }\n        },\n    });\n    if (viz.isViz) setupLayer(viz);\n    else setupVisual(viz);\n});\n\n\nfunction setupVisual (visual) {\n    var store = visual.dataStore,\n        data = pop(visual.options, 'data');\n    //\n    if (!store) {\n        // create the data store for the visual or container\n        store = new DataStore(visual.getModel('dataContext'));\n        visual.model.dataStore = store;\n    }\n    store.addSources(data);\n}\n\n\nfunction setupLayer (layer) {\n    var store = layer.dataStore,\n        data = pop(layer, 'data');\n    if (!data) return;\n    if (isString(data)) data = {source: data};\n    if (!data.name) data.name = layer.model.uid;\n    data = store.addSources(data);\n    if (data)\n        layer.model.$set('data', data.name);\n    else\n        warn(`Could not create data source ${data.name}`);\n}\n","import {inBrowser} from 'd3-let';\nimport {viewDebounce} from 'd3-view';\nimport {select} from 'd3-selection';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nif (!globalOptions.resizeDelay)\n    globalOptions.resizeDelay = 200;\n\n\nif (inBrowser) {\n    var resize = viewDebounce(() => {\n        visuals.live.forEach(p => p.resize());\n    }, globalOptions.resizeDelay);\n\n    select(window).on('resize.visuals', resize);\n}\n","// Title plot annotation\nimport {isString} from 'd3-let';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.title = {\n    text: null,\n    fontSize: '5%',\n    minFontSize: 15,\n    maxFontSize: 25\n};\n\n\nvisuals.events.on('before-init.title', viz => {\n    var title = viz.options.title;\n    if (isString(title)) viz.options.title = {text: title};\n});\n\n\nvisuals.events.on('before-draw.title', viz => {\n    var title = viz.getModel('title');\n    if (!title.text) return;\n    var visual = viz.isViz ? viz.visualParent : viz;\n    if (visual.visualType === 'visual' && visual.menu) menuTitle(visual, title, viz);\n});\n\n\nfunction menuTitle(visual, title, viz) {\n    var height = number(visual.menu.style('height')),\n        maxSize = title.maxFontSize ? Math.min(height-4, title.maxFontSize) : height-4,\n        size = viz.dim(title.fontSize, visual.width, title.minFontSize, maxSize);\n    visual.menu.select('.title')\n        .html(title.text)\n        .style('font-size', `${size}px`)\n        .style('line-height', `${height}px`);\n}\n\n\nfunction number (px) {\n    return +px.substring(0, px.length-2);\n}\n","import {isObject} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst KEYS = ['top', 'bottom', 'left', 'right'];\nconst LEFTRIGHT = ['left', 'right'];\n\n\n// margin for visual marks\nglobalOptions.margin = {\n    top: 20,\n    bottom: 20,\n    left: 20,\n    right: 20\n};\n// padding for the visual paper\nglobalOptions.padding = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n};\n\n\n//\n//  Bounding box for a viz\n//  ==========================\nvizPrototype.boundingBox = function () {\n    var width = this.visualParent.width,\n        height = this.visualParent.height,\n        margin = calculate(this.getModel('margin'), width, height),\n        padding = calculate(this.getModel('padding'), width, height),\n        total = KEYS.reduce((o, key) => {\n            o[key] = margin[key] + padding[key];\n            return o;\n        }, {});\n    return {\n        width: width,\n        height: height,\n        margin: margin,\n        padding: margin,\n        total: total,\n        innerWidth: width - total.left - total.right,\n        innerHeight: height - total.top - total.bottom\n    };\n};\n\n\nvisuals.events.on('after-init.margin', viz => {\n    viz.margin = margins('margin', viz);\n    viz.padding = margins('padding', viz);\n});\n\n\nfunction margins (name, viz) {\n    var value = viz.options[name];\n\n    if (value !== undefined && !isObject(value)) {\n        var v = value || 0;\n        viz.options[name] = {\n            left: v,\n            right: v,\n            top: v,\n            bottom: v\n        };\n    }\n}\n\n\nfunction calculate (model, width, height) {\n    return KEYS.reduce((o, key) => {\n        o[key] = sizeValue(model[key], LEFTRIGHT.indexOf(key) > -1 ? width : height);\n        return o;\n    }, {});\n}\n","import {map} from 'd3-collection';\nimport {axisTop, axisBottom, axisLeft, axisRight} from 'd3-axis';\n\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\n\nconst axisOrientation = map({\n    top: axisTop,\n    bottom: axisBottom,\n    left: axisLeft,\n    right: axisRight\n});\n\nglobalOptions.xAxis = {\n    location: \"bottom\"\n};\n\nvizPrototype.axis = function (orientation, scale) {\n    return axisOrientation.get(orientation)(scale);\n};\n","import {map} from 'd3-collection';\nimport {range} from 'd3-array';\nimport {isObject} from 'd3-let';\nimport {viewUid} from 'd3-view';\nimport {\n    scaleSequential,\n    interpolateViridis, interpolateInferno, interpolateMagma,\n    interpolatePlasma, interpolateWarm, interpolateCool,\n    interpolateRainbow, interpolateCubehelixDefault\n} from 'd3-scale';\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\nexport const colorScales = map();\n\n\nglobalOptions.color = {\n    scale: 'cool',\n    // Minumim number of colors in a sequantial color scale\n    // This helps in keeping a consistent palette when few colors are used\n    scaleMinPoints: 6,\n    // An offset in the color scale, useful for combined visuals\n    scaleOffset: 0,\n    stroke: '#333',\n    strokeOpacity: 1,\n    fillOpacity: 1,\n};\n\ncolorScales.set('viridis', () =>  scaleSequential(interpolateViridis));\ncolorScales.set('inferno', () =>  scaleSequential(interpolateInferno));\ncolorScales.set('magma', () =>  scaleSequential(interpolateMagma));\ncolorScales.set('plasma', () =>  scaleSequential(interpolatePlasma));\ncolorScales.set('warm', () =>  scaleSequential(interpolateWarm));\ncolorScales.set('cool', () =>  scaleSequential(interpolateCool));\ncolorScales.set('rainbow', () =>  scaleSequential(interpolateRainbow));\ncolorScales.set('cubehelix', () =>  scaleSequential(interpolateCubehelixDefault));\n\n//\n//  Color scale method\n//  ==========================\nvizPrototype.colors = function (n) {\n    var color = this.getModel('color'),\n        scaleDef = colorScales.get(color.scale);\n\n    if (!scaleDef) throw new Error(`Unknown scale ${color.scale}`);\n    if (!isObject(scaleDef)) scaleDef = {scale: scaleDef};\n    if (scaleDef.minPoints === undefined) scaleDef.minPoints = color.scaleMinPoints;\n\n    var offset = color.scaleOffset,\n        npoints = n + offset,\n        points = Math.max(npoints, scaleDef.minPoints),\n        domain = scaleDef.reversed ? [points-1, 0] : [0, points-1],\n        scale = scaleDef.scale().domain(domain);\n    return range(offset, Math.min(npoints, points)).map(v => scale(v));\n};\n\n//\n//  Linear Gradient method\n//  ==========================\n//\n//  Create a monocromatic linear gradient in the visualization box,\n//  either horizontal or vertical\nvizPrototype.linearGradient = function (box, orientation) {\n    var gid = viewUid();\n    var defs = this.paper.select('defs');\n    if (!defs.node()) defs = this.paper.append(defs);\n    const grad = defs\n                    .append('linearGradient')\n                    .attr('id', gid)\n                    .attr('x1', '0%')\n                    .attr('y1', '0%');\n    if (orientation === 'vertical') {\n        grad.attr('x2', '0%').attr('y2', '100%');\n    } else {\n        grad.attr('x2', '100%').attr('y2', '0%');\n    }\n};\n","import {legendColor, legendSize, legendSymbol} from 'd3-svg-legend';\nimport {map} from 'd3-collection';\n\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\nglobalOptions.legend = {\n    location: \"top-right\",\n    orient: \"vertical\",\n    fontSize: '3%',\n    title: '',\n    titleWidth: \"20%\",\n    titleMinWidth: 30,\n    titleMaxWidth: 60,\n    minFontSize: 10,\n    maxFontSize: 20,\n    offsetX: 10,\n    offsetY: 10\n};\n\n\nconst legends = {\n    color: legendColor,\n    size: legendSize,\n    symbol: legendSymbol\n};\n\n\n//\n//  Legend method\n//  ==========================\nvizPrototype.legend = function (cfg, box) {\n    var vizModel = this.getModel(),\n        lgModel = this.getModel('legend'),\n        name = vizModel.legendType,\n        size = this.dim(lgModel.fontSize, box.height, lgModel.minFontSize, lgModel.maxFontSize);\n    if (!name) return;\n    var legend = legends[name];\n    if (!legend) return warn(`Could not load legend ${name}`);\n    legend = legend().orient(lgModel.orient);\n    if (lgModel.title) {\n        var width = this.dim(lgModel.titleWidth, box.width, lgModel.titleMinWidth, lgModel.titleMaxWidth);\n        legend.title(lgModel.title).titleWidth(width);\n    }\n    for (let key in cfg) legend[key](cfg[key]);\n    var g = this.paper()\n            .group('legend')\n            .style('font-size', `${size}px`)\n            .call(legend),\n        bb = locations.get(lgModel.location)(g.node().getBBox(), box, lgModel);\n    g.attr('transform', this.translate(bb.x, bb.y));\n};\n\n\nconst locations = map({\n    top,\n    bottom,\n    right,\n    left,\n    'top-left': topLeft,\n    'top-right': topRight,\n    'bottom-left': bottomLeft,\n    'bottom-right': bottomRight\n});\n\n\nfunction top (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottom (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction right (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: options.offsetY\n    };\n}\n\n\nfunction left (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottomLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction bottomRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n","//\n// Use clusterize.js to render the table\nexport default function (table, options) {\n    return table.require('clusterize.js@0.17.6').then(Clusterize => clusterize(Clusterize, table, options));\n}\n\n\nfunction clusterize(Clusterize) {\n    var cl = new Clusterize();\n    return cl;\n}\n","export default function (table) {\n    return table;\n}\n","//\n//  bootstrap styling for tabular component\n//  ==========================================\n//\nimport assign from 'object-assign';\n\n\nconst defaults = {\n    over: true,\n    small: true,\n    bordered: true,\n    loadingClass: 'table-info',\n    loadingTextClass: 'text-center'\n};\n\n\nexport default function (table, options) {\n    var style = table.model.style;\n    style.$update(assign({}, defaults, options));\n\n    style.tableClass = 'table table-responsive';\n    if (style.striped) style.tableClass += ' table-striped';\n    if (style.over) style.tableClass += ' table-hover';\n    if (style.bordered) style.tableClass += ' table-bordered';\n    if (style.small) style.tableClass += ' table-sm';\n}\n","//\n//  Plugins for visuals and tabular\n//\n// visual plugins\nimport './menu';\nimport './data';\nimport './responsive';\nimport './title';\nimport './margin';\nimport './axis';\nimport './color';\nimport './legend';\n//\n//  This module depends on core but not on components\nimport clusterize from './clusterize';\nimport paginate from './paginate';\nimport bootstrap from './bootstrap';\n\n// plugins add functionalities to a d3 table\n// A plugin is a function accepting two parameters:\n//  * the table component\n//  * object with configuration parameters\nexport default {\n    bootstrap,\n    clusterize,\n    paginate\n};\n","import createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\n\n\nexport default createVisual('container', {\n\n    initialise () {\n        this.live = [];\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    draw() {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        var self = this;\n        visuals.events.call('before-draw', undefined, self);\n        return Promise.all(this.live.map(visual => visual.redraw())).then(() => {\n            delete self.drawing;\n            visuals.events.call('after-draw', undefined, self);\n        });\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n    }\n});\n","import assign from 'object-assign';\nimport {isString, isObject} from 'd3-let';\n\nimport VisualContainer from '../core/container';\n\n//\n//  vizComponent base prototype\n//  =============================\n//\n//  Some common properties and methods for all visualize components\n//\nexport const vizComponent = {\n    props: [\n        'schema',\t    // Schema is a collection of fields to display in the table\n        'datasource',\t// Data source\n        'plugins',      // list of string/objects\n\t],\n\n    render (props, attrs, el) {\n        var self = this,\n            inner = this.select(el).html();\n        //\n        // build\n        return this.getSchema(props.schema, schema => {\n            if (!isObject(schema)) schema = {};\n            return self.build(schema, inner, attrs);\n        });\n    },\n\n    // get the schema from the input schema property\n    getSchema (input, build) {\n        var parent = this.model.visual;\n\n        // allow to specify the schema as an entry of\n        // visuals object in the dashboard schema\n        if (parent && parent !== this.model && isString(input)) {\n            var schema = parent.options.visuals[input];\n            if (schema) input = schema;\n        }\n\n        if (isString(input)) {\n            return this.json(input).then(build);\n        }\n        else return build(input);\n    },\n    //\n    // build the visual component has the schema available\n    build () {}\n};\n//\n//  Dashboard Component\n//  ========================\n//\n//  A collection of visual components arranged according\n//  to a custom layout.\n//\n//  * Dashboard visuals are independent of each other but\n//    interact via the data object\n//  * The Dashboard layout is given by the inner HTML elements\n//  * The configuration is obtained via the schema property which\n//    can be either:\n//      1) an object\n//      2) a url\nexport default assign({}, vizComponent, {\n\n    build (schema, inner, attrs) {\n        var model = this.model,\n            sel = this.createElement('div'),\n            root = model.root;\n        if (attrs.class) sel.attr('class', attrs.class);\n        if (!schema.visuals) schema.visuals = {};\n        model.visual = new VisualContainer(sel.node(), schema, model.visual);\n        if (!root.visualDashboard) root.visualDashboard = model.visual;\n        return this.mountInner(sel, inner);\n    }\n});\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\n\nimport {vizComponent} from './dashboard';\nimport Visual from '../core/visual';\n\n\n//\n//  Visual component\n//  ======================\n//\n//  An element containing a visualization\nexport default assign({}, vizComponent, {\n\n    build (schema) {\n        var sel = this.createElement('div'),\n            type = schema.type || 'visual',\n            model = this.model,\n            options = {},\n            layers;\n\n        if (type === 'visual') {\n            layers = pop(schema, 'layers');\n            options = schema;\n        }\n        else\n            options.visual = pop(schema, 'visual') || {};\n\n        model.visual = new Visual(sel.node(), options, model.visual);\n        if (type !== 'visual') model.visual.addVisual(schema);\n        else if (layers) {\n            layers.forEach(layer => model.visual.addVisual(layer));\n        }\n        return sel;\n    },\n\n    // once the element is mounted in the dom, draw the visual\n    mounted () {\n        this.model.visual.redraw();\n    }\n});\n","import {isoParse} from 'd3-time-format';\n\nimport locale from './locale';\n\n\nexport const parsers = {\n    date: isoParse,\n\n    string (value) {\n        return ''+value;\n    }\n};\n\n// formatters\nexport const formatters = {\n\n    number (value) {\n        return value;\n    },\n\n    date (value) {\n        return locale.formatDate(value);\n    },\n\n    boolean (value) {\n        return value;\n    }\n};\n","import {isObject, isArray} from 'd3-let';\n\nimport {formatters, parsers} from '../data/formatters';\n\n\n//\n// Create table columns from schema\nexport default function (schema) {\n    var columns = [];\n    let col;\n\n\tif (!schema) return columns;\n\n    if (isArray(schema))\n        schema = {properties: schema};\n\n    if (isObject(schema.properties)) {\n        for (let key in schema.properties) {\n            col = schema.properties[key];\n            if (isObject(col)) {\n                if (!col.name) col.name = key;\n                columns.push(col);\n            }\n        }\n    } else\n        Array.prototype.push.apply(columns, schema.properties);\n\n    return columns.map((col) => {\n        if (!isObject(col)) col = {name: col};\n        if (!col.label) col.label = col.name;\n        if (!col.hidden) col.hidden = false;\n        if (!col.$parse) col.$parse = parsers[col.type] || parsers.string;\n        if (!col.$html) col.$html = formatters[col.type] || $html;\n        return col;\n    });\n}\n\n\nfunction $html (value) {\n    return value;\n}\n","// import {timeout} from 'd3-timer';\nimport assign from 'object-assign';\nimport {isString, isArray, isPromise} from 'd3-let';\n\nimport warn from '../utils/warn';\nimport createColumns from '../utils/columns';\nimport tablePlugins from '../plugins/index';\nimport {vizComponent} from './dashboard';\n\n\nconst tableTpl = `<table d3-class=\"[style.tableClass, loadingData ? 'loading' : null]\">\n<thead d3-class=\"style.headerClass\">\n<tr d3-class=\"style.headerRowClass\">\n  <th d3-for=\"col in columns\"\n        d3-html=\"col.label\"\n        d3-if=\"!col.hidden\">\n  </th>\n</tr>\n<tr d3-if=\"loadingData\" d3-class=\"style.loadingClass\">\n    <td d3-attr-colspan=\"columns.length\">\n        <p d3-class=\"style.loadingTextClass\">loading data</p>\n    </td>\n</tr>\n</thead>\n<tbody></tbody>\n</table>`;\n\n\nexport default assign({}, vizComponent, {\n\n\tmodel () {\n        return {\n            header: true,            // show header\n            columns: [],             // table columns\n            loadingData: false,\n            style: {\n                tableClass: null,\n                headerClass: null,\n                headerRowClass: null,\n                loadingClass: 'loading',\n                loadingTextClass: null\n            }\n        };\n\t},\n\n\tbuild (schema) {\n\t\tvar self = this,\n            model = this.model,\n            plugins = schema.plugins || [];\n        // model.allData = crossfilter([]);\n        this.records = {};\n        this.data = [];\n        this.template = tableTpl;\n\n\t\tmodel.columns = createColumns(schema);\n\t\t// if (data.dataurl) model.dataLoader = new DataLoader(data.dataurl);\n\n        if (!isArray(plugins)) {\n            warn('plugins should be an array');\n        } else {\n            var promises = [];\n            let promise;\n            plugins.forEach(plugin => {\n                if (isString(plugin)) plugin = {name: plugin};\n                if (!tablePlugins[plugin.name])\n                    warn(`Unknown table plugin ${plugin.name}`);\n                else {\n                    promise = tablePlugins[plugin.name](self, plugin);\n                    if (isPromise(promise)) promises.push(promise);\n                }\n            });\n            if (promises.length)\n                 return Promise.all(promises).then(() => self.viewElement(self.template));\n        }\n\n\t\treturn this.viewElement(this.template);\n\t},\n\n\tmounted () {\n        var vm = this,\n            model = this.model;\n\t\tif (model.dataLoader) {\n\t\t\tvar p = model.dataLoader.load(model.columns);\n            if (p) {\n                model.loadingData = true;\n                p.then((data) => {\n                    // var allData = model.allData;\n                    model.loadingData = false;\n                    addData(vm, data);\n                }, (err) => {\n                    model.loadingData = false;\n                    return err;\n                });\n            }\n        }\n\t}\n});\n\n// new data to include in the table\nfunction addData (vm, newData) {\n    var records = vm.records,\n        data = vm.data,\n        model = vm.model,\n        delayData = newData;\n\n    let record, value;\n\n    newData = delayData.splice(0, 100);\n\n    newData.forEach((d) => {\n        if (d.id) {\n            record = d.id ? records[d.id] : null;\n            if (record)\n                d = assign(record, d);\n            else {\n                data.push(d);\n                records[d.id] = d;\n            }\n        } else\n            data.push(d);\n        model.columns.forEach((col) => {\n            d[col.name] = col.$parse(d[col.name]);\n        });\n    });\n\n    //if (delayData.length)\n    //    timeout(() => addData(vm, delayData));\n\n    var rows = vm.sel.select('tbody')\n                .selectAll('tr').data(data);\n\n    rows\n        .enter()\n            .append('tr')\n            .attr('scope', 'row')\n            .selectAll('td')\n            .data(model.columns)\n            .enter()\n                .append('td')\n                .style('display', (col) => {\n                    return col.hidden ? 'none' : null;\n                })\n                .html(function (col) {\n                    record = this.parentNode.__data__;\n                    value = record[col.name];\n                    return col.$html(value === undefined ? '' : value);\n                });\n}\n","//\n//  d3-view components\n//  ======================\n//\n//  d3-view plugin for visualization components\n//\nimport tabularPlugins from '../plugins/index';\nimport dashboard from './dashboard';\nimport visual from './visual';\nimport tabular from './tabular';\n\n\n// Visual components plugin\nexport default {\n    tabularPlugins,\n\n    install (vm) {\n        vm.addComponent('dashboard', dashboard);\n        vm.addComponent('visual', visual);\n        vm.addComponent('tabular', tabular);\n    }\n\n};\n","export default function (x) {\n    return function constant() {\n        return x;\n    };\n}\n","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function (d) {\n    return d;\n}\n","import constant from \"../utils/constant\";\nimport descending from \"../utils/descending\";\nimport identity from \"../utils/identity\";\n\n//\n//  Pyramid Shape generator\n//  ============================\nexport default function () {\n    var value = identity,\n        pad = constant(0),\n        height = 1,\n        base = 1;\n\n    function pyramid (data) {\n        let i, j, k, points, fraction,\n            hi, x, y, v0, ph, pj;\n        var n = data.length,\n            r = 0.5*base/height,\n            polygons = new Array(n),\n            index = new Array(n);\n\n        for (i=0; i<n; ++i) {\n            polygons[index[i] = i] = +value(data[i], i, data);\n        }\n\n        // Sort the polygons\n        index.sort((i, j) => {return descending(polygons[i], polygons[j]);});\n\n        // Compute the polygons! They are stored in the original data's order.\n        v0 = polygons[index[0]];\n        hi = null;\n\n        for (i=n-1; i>=0; --i) {\n            points = [];\n            if (hi === null)\n                points.push([0, 0]);\n            else {\n                y = hi + ph;\n                x = y*r;\n                points.push([x, y]);\n                points.push([-x, y]);\n            }\n            j = index[i];\n            k = n - i - 1;\n            fraction = polygons[j]/v0;\n            pj = Math.sqrt(fraction);\n            hi = height*pj;\n            ph = i ? pad(pj, k) : 0;\n            y = hi - ph;\n            x = y*r;\n            points.push([-x, y]);\n            points.push([x, y]);\n            polygons[j] = {\n                index: k,\n                value: polygons[j],\n                fraction: fraction,\n                points: points,\n                data: data[j]\n            };\n        }\n        return polygons;\n    }\n\n    pyramid.value = function(_) {\n        return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pyramid) : value;\n    };\n\n    pyramid.base = function (_) {\n        return arguments.length ? (base = _, pyramid) : base;\n    };\n\n    pyramid.height = function (_) {\n        return arguments.length ? (height = _, pyramid) : height;\n    };\n\n    pyramid.pad = function(_) {\n        return arguments.length ? (pad = typeof _ === \"function\" ? _ : constant(+_), pyramid) : pad;\n    };\n\n    return pyramid;\n}\n","import * as d3_shape from 'd3-shape';\nimport {extent} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport warn from '../utils/warn';\nimport accessor from '../utils/accessor';\nimport camelFunction from '../utils/camelfunction';\n\n\nexport const lineDrawing = {\n\n    // get information about\n    //  * data []\n    //  * range {x: [min, max], y: [min, max]}\n    //  * meta []\n    //      * index\n    //      * label\n    //      * range\n    //\n    getDataInfo (frame) {\n        var model = this.getModel(),\n            range = this.newRange(),\n            nseries = frame.series.size(),\n            data = nseries ? frame.series.values() : [frame.data],\n            keys = nseries ? frame.series.keys() : [model.y],\n            x = accessor(model.x),\n            y = accessor(model.y),\n            self = this;\n        return {\n            data: data,\n            range: range,\n            meta: keys.map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            })\n        };\n    },\n\n    fill (data) {\n        var colors = this.colors(data.length);\n\n        function fill (d, index) {\n            return colors[index];\n        }\n\n        fill.colors = colors;\n\n        return fill;\n    },\n\n    curve (name) {\n        var obj = camelFunction(d3_shape, 'curve', name, true);\n        if (!obj) {\n            warn(`Could not locate curve type \"${name}\"`);\n            obj = camelFunction(d3_shape, 'curve', 'cardinalOpen', true);\n        }\n        return obj;\n    },\n\n    range (data, x, y, agg) {\n        var range = {\n            x: extent(data, x),\n            y: extent(data, y)\n        };\n        if (agg) {\n            Array.prototype.push.apply(agg.x, range.x);\n            Array.prototype.push.apply(agg.y, range.y);\n        }\n    },\n\n    newRange () {\n        return {\n            x: [],\n            y: []\n        };\n    },\n\n    x (box, ranges) {\n        var model = this.getModel(),\n            scale = this.getScale(model.scaleX)\n                .domain(extent(ranges))\n                .range([0, box.innerWidth]);\n        return function (d) {\n            return scale(d[model.x]);\n        };\n    },\n\n    y (box, ranges, value) {\n        var model = this.getModel(),\n            scale = this.getScale(model.scaleY)\n                .domain(extent(ranges))\n                .range([box.innerHeight, 0]);\n        if (arguments.length === 2) value = d => d[model.y];\n        return function (d) {\n            return scale(value(d));\n        };\n    }\n};\n\n//\n//  Line Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('linechart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'cardinalOpen',\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear'\n    },\n\n    doDraw (frame) {\n        var self = this,\n            range = this.newRange(),\n            model = this.getModel(),\n            color = this.getModel('color'),\n            x = accessor(model.x),\n            y = accessor(model.y),\n            data = frame.series.values(),\n            meta = frame.series.keys().map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            }),\n            box = this.boundingBox(),\n            paper = this.paper(),\n            lines = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.line').data(data),\n            strokeColor = this.fill(meta),\n            //merge = paper.transition('update'),\n            line = d3_shape.line()\n                .x(this.x(box, range.x))\n                .y(this.y(box, range.y))\n                .curve(this.curve(model.curve));\n\n        lines\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', model.lineWidth)\n            .merge(lines)\n                //.transition(merge)\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', line);\n\n        lines\n            .exit()\n            .remove();\n    }\n});\n","import {stack} from 'd3-shape';\nimport {max} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport {lineDrawing} from './line';\n//\n//  Bar Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('barchart', lineDrawing, {\n\n    options: {\n        orientation: 'vertical',\n        // stack multiple y series?\n        sortby: null, // specify \"x\" or \"y\"\n        stack: true,\n        normalize: false,\n        scale: 'linear',\n        padding: 0.1,\n        x: 'x',\n        y: 'y',\n        groupby: null,  // group data by a field for staked or grouped bar chart\n        //\n        // legend & tooltip\n        valueformat: '.1f',\n        legendType: 'color',\n        legendLabel: 'label'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            data = frame.data,\n            box = this.boundingBox(),\n            paper = this.paper().size(box),\n            bars = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.group'),\n            x = model.x,\n            y = model.y,\n            groupby = model.groupby,\n            sx = this.getScale('band'),\n            sy = this.getScale(model.scale),\n            sz = this.getScale('ordinal'),\n            stacked = false,\n            width = null,\n            height = null,\n            xrect = x0,\n            yrect = y0,\n            yi = 1,\n            groups,\n            axis;\n\n        if (model.orientation === 'vertical') {\n            sx.rangeRound([0, box.innerWidth]).paddingInner(model.padding);\n            sy.rangeRound([box.innerHeight, 0]);\n            width = sx.bandwidth;\n            height = bardim;\n        } else {\n            sx.rangeRound([0, box.innerHeight]).paddingInner(model.padding);\n            sy.rangeRound([0, box.innerWidth]);\n            yi = 0;\n            width = bardim;\n            height = sx.bandwidth;\n            xrect = y0;\n            yrect = x0;\n        }\n\n        if (groupby) {\n            groups = frame.dimension(groupby).group().top(Infinity).map(g => g['key']);\n            if (groups.length <= 1) groups = null;\n        }\n\n        if (groups) {\n            frame = frame.pivot(x, groupby, y);\n            if (model.sortby === 'y') frame = frame.sortby('total');\n            data = frame.data;\n            sz.domain(groups).range(this.colors(groups.length));\n            if (model.stack) {\n                if (model.normalize)\n                    this.normalize(frame.data);\n                stacked = true;\n            }\n        }\n\n        // set domain for the labels\n        sx.domain(data.map(d => d[x]));\n\n        if (stacked) {\n            sy.domain([0, max(data, d => d.total)]).nice();\n            data = stack().keys(groups)(data);\n            var rects = bars.data(data)\n                            .enter()\n                                .append('g')\n                                .classed('group', true)\n                                .attr('fill', d => sz(d.key))\n                            .merge(bars)\n                                .attr('fill', d => sz(d.key))\n                                .attr('stroke', color.stroke)\n                                .attr('stroke-opacity', color.strokeOpacity)\n                                .attr('fill-opacity', color.fillOpacity)\n                                .selectAll('rect')\n                                .data(d => d);\n            rects.enter()\n                .append('rect')\n                .merge(rects)\n                    .transition()\n                    .attr('x', xrect)\n                    .attr('y', yrect)\n                    .attr('height', height)\n                    .attr('width', width);\n\n        } else {\n            var x1 = self.getScale('band').padding(0.5*model.padding);\n            return x1;\n        }\n\n        if (model.orientation === 'vertical') {\n            axis = this.axis('bottom', sx).tickSizeOuter(0);\n            paper.group('axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top+box.innerHeight))\n                .call(axis);\n        } else {\n            axis = this.axis('left', sx).tickSizeOuter(0);\n            paper.group('axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .call(axis);\n        }\n\n        if (model.legendType && groups) {\n            this.legend({scale: sz}, box);\n        }\n\n        function bardim (d) {\n            return sy(d[1-yi]) - sy(d[yi]);\n        }\n\n        function x0 (d) {\n            return sx(d.data[x]);\n        }\n\n        function y0 (d) {\n            return sy(d[yi]);\n        }\n    }\n});\n","import {ascending, range, extent, quantile} from 'd3-array';\nimport {scaleLinear} from 'd3-scale';\n\nimport createChart from '../core/chart';\nimport accessor from '../utils/accessor';\nimport constant from '../utils/constant';\nimport {lineDrawing} from './line';\n\n//\n//  Box Chart\n//  =============\n//\n//  A box-and-whisker plot uses simple glyphs that summarize a quantitative\n//  distribution with five standard statistics: the smallest value, lower\n//  quartile, median, upper quartile, and largest value.\n//  This summary approach allows the viewer to easily recognize\n//  differences between distributions.\n//\nexport default createChart('boxchart', lineDrawing, {\n\n    options: {\n        orientation: 'vertical',\n        lineWidth: 1,\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear',\n        // area with vertical gradient to zero opacity\n        gradient: true\n    },\n\n    doDraw (frame) {\n        var self = this,\n            model = this.getModel(),\n            //color = this.getModel('color'),\n            info = self.getDataInfo(frame),\n            box = this.boundingBox(),\n            chart = boxplot(),\n            paper = this.paper().size(box),\n            x = accessor(model.x),\n            //y = accessor(model.y),\n            boxes = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.box')\n                .data(info.data),\n            //fill = this.fill(info.meta),\n            groups = frame.groupby(model.x),\n            sx = this.getScale(model.scaleX)\n                .domain(extent(frame.data, x)),\n            //sy = this.getScale(model.scaleY)\n            //    .domain(extent(frame.data, y)),\n            width = box.innerWidth;\n\n        if (model.orientation === 'vertical') {\n            sx.range([0, box.innerWidth]);\n        } else {\n            sx.range([0, box.innerHeight]);\n            width = this.innerHeight;\n        }\n        chart.width(this.dim(model.width, width, width/groups.length - 2));\n\n        boxes\n            .enter()\n                .append('g')\n                    .classed('box', true)\n                    .call(chart);\n    }\n});\n\n\nfunction boxplot () {\n    var width = 1,\n        height = 1,\n        duration = 0,\n        domain = null,\n        value = Number,\n        whiskers = boxWhiskers,\n        quartiles = boxQuartiles,\n        tickFormat = null;\n\n    // For each small multiple\n    function box (g) {\n        g.each((d, i) => {\n            d = d.map(value).sort(ascending);\n\n            const\n                n = d.length,\n                min = d[0],\n                max = d[n - 1],\n                // Compute quartiles. Must return exactly 3 elements.\n                quartileData = d.quartiles = quartiles(d),\n                // Compute whiskers. Must return exactly 2 elements, or null.\n                whiskerIndices = whiskers && whiskers(d),\n                whiskerData = whiskerIndices && whiskerIndices.map(i => d[i]),\n                // Compute outliers. If no whiskers are specified, all data are \"outliers\".\n                // We compute the outliers as indices, so that we can join across transitions!\n                outlierIndices = whiskerIndices\n                    ? range(0, whiskerIndices[0]).concat(range(whiskerIndices[1] + 1, n))\n                    : range(n),\n                // Compute the new x-scale.\n                x1 = scaleLinear()\n                    .domain(domain && domain.call(this, d, i) || [min, max])\n                    .range([height, 0]),\n                // Retrieve the old x-scale, if this is an update.\n                x0 = this.__chart__ || scaleLinear()\n                  .domain([0, Infinity])\n                  .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n            // Note: the box, median, and box tick elements are fixed in number,\n            // so we only have to handle enter and update. In contrast, the outliers\n            // and other elements are variable, so we need to exit them! Variable\n            // elements also fade in and out.\n\n            // Update center line: the vertical line spanning the whiskers.\n            var center = g.selectAll(\"line.center\")\n              .data(whiskerData ? [whiskerData] : []);\n\n            center.enter().insert(\"line\", \"rect\")\n              .attr(\"class\", \"center\")\n              .attr(\"x1\", width / 2)\n              .attr(\"y1\", function(d) { return x0(d[0]); })\n              .attr(\"x2\", width / 2)\n              .attr(\"y2\", function(d) { return x0(d[1]); })\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .style(\"opacity\", 1)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); });\n\n            center.transition()\n              .duration(duration)\n              .style(\"opacity\", 1)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); });\n\n            center.exit().transition()\n              .duration(duration)\n              .style(\"opacity\", 1e-6)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); })\n              .remove();\n\n            // Update innerquartile box.\n            var box = g.selectAll(\"rect.box\")\n              .data([quartileData]);\n\n            box.enter().append(\"rect\")\n              .attr(\"class\", \"box\")\n              .attr(\"x\", 0)\n              .attr(\"y\", function(d) { return x0(d[2]); })\n              .attr(\"width\", width)\n              .attr(\"height\", function(d) { return x0(d[0]) - x0(d[2]); })\n            .transition()\n              .duration(duration)\n              .attr(\"y\", function(d) { return x1(d[2]); })\n              .attr(\"height\", function(d) { return x1(d[0]) - x1(d[2]); });\n\n            box.transition()\n              .duration(duration)\n              .attr(\"y\", function(d) { return x1(d[2]); })\n              .attr(\"height\", function(d) { return x1(d[0]) - x1(d[2]); });\n\n            // Update median line.\n            var medianLine = g.selectAll(\"line.median\")\n              .data([quartileData[1]]);\n\n            medianLine.enter().append(\"line\")\n              .attr(\"class\", \"median\")\n              .attr(\"x1\", 0)\n              .attr(\"y1\", x0)\n              .attr(\"x2\", width)\n              .attr(\"y2\", x0)\n            .transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1);\n\n            medianLine.transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1);\n\n            // Update whiskers.\n            var whisker = g.selectAll(\"line.whisker\")\n              .data(whiskerData || []);\n\n            whisker.enter().insert(\"line\", \"circle, text\")\n              .attr(\"class\", \"whisker\")\n              .attr(\"x1\", 0)\n              .attr(\"y1\", x0)\n              .attr(\"x2\", width)\n              .attr(\"y2\", x0)\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1);\n\n            whisker.transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1);\n\n            whisker.exit().transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1e-6)\n              .remove();\n\n            // Update outliers.\n            var outlier = g.selectAll(\"circle.outlier\")\n              .data(outlierIndices, Number);\n\n            outlier.enter().insert(\"circle\", \"text\")\n              .attr(\"class\", \"outlier\")\n              .attr(\"r\", 5)\n              .attr(\"cx\", width / 2)\n              .attr(\"cy\", function(i) { return x0(d[i]); })\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1);\n\n            outlier.transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1);\n\n            outlier.exit().transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1e-6)\n              .remove();\n\n            // Compute the tick format.\n            var format = tickFormat || x1.tickFormat(8);\n\n            // Update box ticks.\n            var boxTick = g.selectAll(\"text.box\")\n              .data(quartileData);\n\n            boxTick.enter().append(\"text\")\n              .attr(\"class\", \"box\")\n              .attr(\"dy\", \".3em\")\n              .attr(\"dx\", (d, i) => i & 1 ? 6 : -6)\n              .attr(\"x\", (d, i) => i & 1 ? width : 0)\n              .attr(\"y\", x0)\n              .attr(\"text-anchor\", function(d, i) { return i & 1 ? \"start\" : \"end\"; })\n              .text(format)\n            .transition()\n              .duration(duration)\n              .attr(\"y\", x1);\n\n            boxTick.transition()\n              .duration(duration)\n              .text(format)\n              .attr(\"y\", x1);\n\n            // Update whisker ticks. These are handled separately from the box\n            // ticks because they may or may not exist, and we want don't want\n            // to join box ticks pre-transition with whisker ticks post-.\n            var whiskerTick = g.selectAll(\"text.whisker\")\n              .data(whiskerData || []);\n\n            whiskerTick.enter().append(\"text\")\n              .attr(\"class\", \"whisker\")\n              .attr(\"dy\", \".3em\")\n              .attr(\"dx\", 6)\n              .attr(\"x\", width)\n              .attr(\"y\", x0)\n              .text(format)\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"y\", x1)\n              .style(\"opacity\", 1);\n\n            whiskerTick.transition()\n              .duration(duration)\n              .text(format)\n              .attr(\"y\", x1)\n              .style(\"opacity\", 1);\n\n            whiskerTick\n                .exit()\n                .transition()\n                .duration(duration)\n                .attr(\"y\", x1)\n                .style(\"opacity\", 1e-6)\n                .remove();\n        });\n    }\n\n    box.width = function(x) {\n        if (!arguments.length) return width;\n        width = x;\n        return box;\n    };\n\n    box.height = function(x) {\n        if (!arguments.length) return height;\n        height = x;\n        return box;\n    };\n\n    box.tickFormat = function(x) {\n        if (!arguments.length) return tickFormat;\n        tickFormat = x;\n        return box;\n    };\n\n    box.duration = function(x) {\n        if (!arguments.length) return duration;\n        duration = x;\n        return box;\n    };\n\n    box.domain = function(x) {\n        if (!arguments.length) return domain;\n        domain = x === null ? x : constant(x);\n        return box;\n    };\n\n    box.value = function(x) {\n        if (!arguments.length) return value;\n        value = x;\n        return box;\n    };\n\n    box.whiskers = function(x) {\n        if (!arguments.length) return whiskers;\n        whiskers = x;\n        return box;\n    };\n\n    box.quartiles = function(x) {\n        if (!arguments.length) return quartiles;\n        quartiles = x;\n        return box;\n    };\n\n    return box;\n}\n\n\nfunction boxWhiskers (d) {\n    return [0, d.length - 1];\n}\n\n\nfunction boxQuartiles (d) {\n    return [\n        quantile(d, 0.25),\n        quantile(d, 0.5),\n        quantile(d, 0.75)\n    ];\n}\n","import {area, line} from 'd3-shape';\n\nimport createChart from '../core/chart';\nimport constant from '../utils/constant';\nimport {lineDrawing} from './line';\n\n//\n//  Area Chart\n//  =============\nexport default createChart('areachart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'cardinalOpen',\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear',\n        // area with vertical gradient to zero opacity\n        gradient: true\n    },\n\n    doDraw (frame) {\n        var self = this,\n            model = this.getModel(),\n            color = this.getModel('color'),\n            info = self.getDataInfo(frame),\n            box = this.boundingBox(),\n            paper = this.paper().size(box),\n            areas = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.area').data(info.data),\n            lines = paper.group('lines')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.line').data(info.data),\n            fill = this.fill(info.meta),\n            curve = this.curve(model.curve);\n\n        // TODO: fix this hack\n        info.range.y[0] = 0;\n        var line_ = line()\n                .x(this.x(box, info.range.x))\n                .y(this.y(box, info.range.y))\n                .curve(curve),\n            area_ = area()\n                .x(this.x(box, info.range.x))\n                .y1(this.y(box, info.range.y))\n                .y0(this.y(box, info.range.y, constant(0)))\n                .curve(curve);\n\n        lines\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', line_)\n            .merge(lines)\n                .transition()\n                .attr('d', line_)\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('stroke-width', model.lineWidth);\n\n        lines\n            .exit()\n            .remove();\n\n        areas\n            .enter()\n                .append('path')\n                .attr('class', 'area')\n                .attr('fill', fill)\n                .attr('stroke', 'none')\n                .attr('stroke-width', 0)\n                .attr('d', area_)\n            .merge(areas)\n                .transition()\n                .attr('d', area_)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        areas\n            .exit()\n            .remove();\n    }\n});\n","import {pie, arc} from 'd3-shape';\nimport {scaleOrdinal} from 'd3-scale';\nimport {viewExpression} from 'd3-view';\nimport {format} from 'd3-format';\n\nimport createChart from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst pi = Math.PI;\nconst rad = pi/180;\n\n\nexport const proportional = {\n\n    fill (data) {\n        var colors = this.colors(data.length);\n\n        function fill (d, idx) {\n            return colors[idx];\n        }\n\n        fill.colors = colors;\n\n        return fill;\n    },\n\n    proportionalData (frame, field) {\n        return frame.dimension(field).top(Infinity);\n    },\n\n    total (field) {\n        var total = 0;\n\n        function value (d) {\n            total += d[field];\n            return d[field];\n        }\n\n        value.total = () => total;\n        return value;\n    }\n};\n\n//\n//  Pie Chart\n//  =============\n//\nexport default createChart('piechart', proportional, {\n\n    options: {\n        // The data values from this field will be encoded as angular spans.\n        // If omitted, all pie slices will have equal spans\n        field: 'data',\n        label: 'label',\n        startAngle: 0,\n        endAngle: 360,\n        sort: false,\n        innerRadius: 0,\n        padAngle: 0,\n        cornerRadius: 0,\n        lineWidth: 1,\n        //\n        fractionFormat: '.1%',\n        legendType: 'color',\n        legendLabel: \"label + ' - ' + format(fraction)\"\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            field = model.field,\n            box = this.boundingBox(),\n            outerRadius = Math.min(box.innerWidth, box.innerHeight)/2,\n            innerRadius = sizeValue(model.innerRadius, outerRadius),\n            total = this.total(field),\n            angles = pie()\n                .padAngle(rad*model.padAngle)\n                .startAngle(rad*model.startAngle)\n                .endAngle(rad*model.endAngle)\n                .value(total),\n            arcs = arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius)\n                .cornerRadius(model.cornerRadius),\n            paper = this.paper(),\n            //update = paper.transition('update'),\n            data = angles(this.proportionalData(frame, field)),\n            fill = this.fill(data),\n            slices = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                .selectAll('.slice').data(data);\n\n        slices\n            .enter()\n                .append('path')\n                .attr('class', 'slice')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n            .merge(slices)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', arcs)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        slices.exit().remove();\n\n        if (!model.legendType) return;\n        total = total.total();\n        var expr = viewExpression(model.legendLabel),\n            fmt = format(model.fractionFormat),\n            labels = data.map((d, idx) => {\n                return expr.eval({\n                    d: d,\n                    value: d.value,\n                    format: fmt,\n                    total: total,\n                    fraction: d.value/total,\n                    label: d.data[model.label] || idx\n                });\n            });\n        this.legend({\n            scale: scaleOrdinal().domain(labels).range(fill.colors)\n        }, box);\n    }\n});\n","//\n//  Custom Symbol type\n//  =====================\n//\n//  Draw a polygon given an array of points\n//  This can be used as type in a d3-shape symbol\nexport default function (points) {\n\n    return {\n        draw (context) {\n            points.forEach((point, idx) => {\n                if (!idx) context.moveTo(point[0], point[1]);\n                else context.lineTo(point[0], point[1]);\n            });\n            context.closePath();\n        }\n    };\n}\n","import {symbol} from 'd3-shape';\nimport {viewExpression} from 'd3-view';\n\nimport createChart from '../core/chart';\nimport pyramid from '../transforms/pyramid';\nimport polygon from '../utils/polygon';\nimport {proportional} from './pie';\n\n\nexport default createChart('pyramidchart', proportional, {\n\n    options: {\n        field: 'data',\n        label: 'label',\n        pad: 0,\n        lineWidth: 1,\n        inverted: false,\n        legendType: 'color',\n        invereted: false,\n        legendLabel: \"label + ' - ' + format('.1%', fraction)\"\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            field = model.field,\n            color = this.getModel('color'),\n            box = this.boundingBox(),\n            pad = this.dim(model.pad, Math.min(box.innerWidth, box.innerHeight)),\n            polygons = pyramid()\n                .base(box.innerWidth)\n                .height(box.innerHeight)\n                .pad(pad)\n                .value(d => d[field]),\n            data = frame.new(polygons(this.proportionalData(frame, field))).dimension('fraction').bottom(Infinity),\n            marks = symbol().type(d => polygon(d.points)).size(1),\n            fill = this.fill(data),\n            paper = this.paper(),\n            segments = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top))\n                .selectAll('.segment').data(data);\n\n        segments\n            .enter()\n                .append('path')\n                .attr('class', 'segment')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', marks)\n            .merge(segments)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', marks)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        segments.exit().remove();\n\n        if (!model.legendType) return;\n        var expr = viewExpression(model.legendLabel),\n            self = this,\n            labels = data.map((d, idx) => {\n                return expr.eval(self.getContext({\n                    d: d,\n                    value: d.value,\n                    fraction: d.fraction,\n                    label: d.data[model.label] || idx\n                }));\n            });\n        this.legend({\n            scale: this.getScale('ordinal').domain(labels).range(fill.colors)\n        }, box);\n    }\n\n});\n","import createChart from '../core/chart';\n\n//\n//  Treemap\n//  =============\n//\nexport default createChart('treemap', {\n    requires: ['d3-treemap']\n\n});\n","import createChart from '../core/chart';\n\n\nexport default createChart('text', {\n\n    options: {\n        scale: 'linear',\n        field: 'data',\n        label: 'label'\n    },\n\n    doDraw () {\n    }\n});\n","//\nexport {version as visualizeVersion} from './package.json';\n//\nexport {default as randomPath} from './src/utils/randompath';\n//\n// Data layer\nexport {default as DataStore} from './src/data/store';\nexport {default as dataSources} from './src/data/sources';\nexport {default as dataLocale} from './src/data/locale';\n\n//\n//  Core API\nexport {visuals} from './src/core/base';\nexport {default as createChart} from './src/core/chart';\nexport {default as createPaper, Svg} from './src/core/paper';\nexport {default as visualTransforms} from './src/transforms/index';\n//\n//  Components\nexport {default as visualComponents} from './src/components/index';\n\n// utilities\nexport {colorScales} from './src/plugins/color';\nexport {default as pyramid} from './src/transforms/pyramid';\n//\n//  Charts\n//  =========\n//\n//  Last import, important!\nexport {default as Visual} from './src/core/visual';\nexport {default as BarChart} from './src/charts/bar';\nexport {default as BoxChart} from './src/charts/box';\nexport {default as LineChart} from './src/charts/line';\nexport {default as AreaChart} from './src/charts/area';\nexport {default as PieChart} from './src/charts/pie';\nexport {default as PyramidChart} from './src/charts/pyramid';\nexport {default as Treemap} from './src/charts/treemap';\nexport {default as TextChart} from './src/charts/text';\n"],"names":["defaults","size","options","assign","t","range","S","sigma","drift","data","x","y","norm","randomNormal","dx","i","length","config","_data","isArray","isObject","resolvedPromise","asFrame","prefix","msg","logger","warn","schemes","value","isString","indexOf","split","isUrl","url","fetch","viewProviders","self","then","parse","response","ct","headers","get","text","csvParse","json","source","store","frame","Promise","all","map","getData","frames","mergeFrames","expression","viewExpression","model","eval","field","d","DataFrame","serie","defineProperties","dimensions","series","prototype","_inner","cf","crossfilter","name","keepExisting","arguments","current","dispose","accessor","dimension","top","new","Infinity","key","total","group","reduce","pivoter","Object","m","pk","pv","o","record","mapper","filter","a","Array","fill","operations","scalar_operations","agg","v","Math","max","min","count","array","undefined","fields","ops","as","groupby","countAll","fillArray","aggregate","op","forEach","index","push","entries","oo","entry","query","dim","q","df","filterAll","sortby","timeseries","groups","newframe","tmp","filterExact","set","globalOptions","dateFormat","converters","utcParse","parseFloat","converter","mapfields","mappers","each","type","transform","schema","jsonValidator","dummyValidator","transformFactory","valid","validate","logError","doTransform","DEFAULT_METHOD","DEFAULT_PERIOD","DEFAULT_ALPHA","MAXALPHA","method","fieldto","s","period","cumulate","buffer","splice","alpha","minmax","applyTransforms","transforms","ts","dataEvents","dispatch","dataSourcePrototype","transformStore","constructor","DataSource","sources","values","cfg","getConfig","initDataSource","dataSource","dataName","pop","initialise","addTransforms","call","dataSources","add","remote","composite","DataStore","dataCount","create","p","remove","ds","cachedFrame","Error","cache","expr","context","ctx","$child","safeEval","def","timeFormat","symbol","locales","source1","source2","load","number","locale","time","formatDate","date","formatDateTime","dateTime","n","round","pow","WIDTH","HEIGHT","sizeValue","getSize","element","width","height","getWidth","widthElement","getWidthElement","getHeight","heightElement","getHeightElement","el","getParentElementRect","elementWidth","elementHeight","w","getBoundingClientRect","select","left","padding","style","right","bottom","parent","node","tagName","parentNode","substring","CONTAINERS","visuals","visualPrototype","drawing","event","toString","events","on","redraw","draw","visualType","uid","visualParent","getModel","$new","$update","$on","refSize","minSize","maxSize","container","idx","live","viewBase","proto","opts","Visual","viewModel","types","createVisual","append","classed","sel","layers","drawCount","__visual__","fit","clear","visual","err","VisualClass","resize","currentSize","viewDebug","paper","inBrowser","observer","MutationObserver","visualManager","observe","document","documentElement","records","nodes","removedNodes","nodeName","selectAll","destroy","viz","objectOnly","toUpperCase","protos","vizPrototype","chartPrototype","apply","_paper","paperType","render","PaperType","papers","isFunction","xt","yt","camelFunction","d3_scale","doDraw","displayError","createPaper","Paper","paperPrototype","box","attr","cname","enter","Svg","svg","menu","display","insert","refreshMenu","minHeight","maxHeight","formats","specifier","fmt","format","dataContext","cachedFormat","dataStore","getContext","isViz","setupLayer","setupVisual","addSources","layer","$set","resizeDelay","viewDebounce","window","title","menuTitle","maxFontSize","fontSize","minFontSize","html","px","KEYS","LEFTRIGHT","margin","boundingBox","calculate","margins","axisOrientation","axisTop","axisBottom","axisLeft","axisRight","xAxis","axis","orientation","scale","colorScales","color","scaleSequential","interpolateViridis","interpolateInferno","interpolateMagma","interpolatePlasma","interpolateWarm","interpolateCool","interpolateRainbow","interpolateCubehelixDefault","colors","scaleDef","minPoints","scaleMinPoints","offset","scaleOffset","npoints","points","domain","reversed","linearGradient","gid","viewUid","defs","grad","legend","legends","legendColor","legendSize","legendSymbol","vizModel","lgModel","legendType","orient","titleWidth","titleMinWidth","titleMaxWidth","g","bb","locations","location","getBBox","translate","topLeft","topRight","bottomLeft","bottomRight","innerWidth","offsetY","offsetX","table","require","clusterize","Clusterize","cl","tableClass","striped","over","bordered","small","vizComponent","props","attrs","inner","getSchema","build","input","createElement","root","class","VisualContainer","visualDashboard","mountInner","addVisual","parsers","isoParse","formatters","columns","col","properties","label","hidden","$parse","string","$html","tableTpl","plugins","template","createColumns","promises","promise","plugin","tablePlugins","isPromise","viewElement","vm","dataLoader","loadingData","addData","newData","delayData","id","rows","__data__","addComponent","dashboard","tabular","constant","b","NaN","identity","pad","base","pyramid","j","k","fraction","hi","v0","ph","pj","r","polygons","sort","descending","sqrt","_","lineDrawing","newRange","nseries","keys","obj","d3_shape","extent","ranges","getScale","scaleX","scaleY","innerHeight","createChart","meta","lines","strokeColor","curve","lineWidth","merge","strokeOpacity","line","exit","bars","sx","sy","sz","stacked","xrect","x0","yrect","y0","yi","rangeRound","paddingInner","bandwidth","bardim","pivot","stack","normalize","nice","rects","stroke","fillOpacity","transition","x1","tickSizeOuter","getDataInfo","chart","boxplot","info","duration","Number","whiskers","boxWhiskers","quartiles","boxQuartiles","tickFormat","ascending","whiskerData","whiskerIndices","concat","scaleLinear","__chart__","center","quartileData","medianLine","whisker","outlier","outlierIndices","boxTick","whiskerTick","quantile","areas","line_","area_","area","y1","pi","PI","rad","proportional","outerRadius","innerRadius","angles","pie","padAngle","startAngle","endAngle","arcs","arc","cornerRadius","proportionalData","slices","legendLabel","fractionFormat","labels","scaleOrdinal","point","moveTo","lineTo","closePath","marks","polygon","segments"],"mappings":"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"}