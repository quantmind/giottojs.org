{"version":3,"file":"d3-visualize.js","sources":["../src/utils/randompath.js","../src/data/array.js","../src/data/warn.js","../src/utils/isurl.js","../src/data/remote.js","../src/data/composite.js","../src/data/expression.js","../src/data/sources.js","../src/transforms/groupby.js","../src/transforms/index.js","../src/data/store.js","../src/data/locale.js","../src/core/options.js","../src/core/base.js","../src/core/container.js","../src/utils/warn.js","../src/utils/round.js","../src/utils/size.js","../src/core/visual.js","../src/core/chart.js","../src/core/paper.js","../src/components/dashboard.js","../src/components/visual.js","../src/data/formatters.js","../src/utils/columns.js","../src/plugins/data.js","../src/plugins/responsive.js","../src/plugins/title.js","../src/plugins/margin.js","../src/plugins/color.js","../src/plugins/clusterize.js","../src/plugins/paginate.js","../src/plugins/bootstrap.js","../src/plugins/index.js","../src/components/tabular.js","../src/components/index.js","../src/charts/bar.js","../src/charts/line.js","../src/charts/pie.js","../src/charts/treemap.js"],"sourcesContent":["import assign from 'object-assign';\nimport {range} from 'd3-array';\nimport {randomNormal} from 'd3-random';\n\n\nconst defaults = {\n    sigma: 0.1,\n    drift: 0\n};\n\n\nexport default function (size, options) {\n    options = assign({}, defaults, options);\n    var t = range(0, +size, 1),\n        S = options.sigma,\n        drift = options.drift,\n        data = [{x: 0, y: 0}],\n        norm = randomNormal(0, 1),\n        dx;\n\n    for (var i = 1; i < t.length; i++) {\n        dx = drift + S * norm();\n        data[i] = {\n            x: i,\n            y: data[i - 1].y + dx\n        };\n    }\n\n    return data;\n}\n","import {isArray, isObject} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\n//\n//  Array DataSource\n//  ====================\n//\n//  Data is given in an array, pkain & simple\nexport default {\n\n    initialise (config) {\n        this._data = config.data;\n    },\n\n    getConfig (config) {\n        if (isArray(config)) return {data: config};\n        else if (isObject(config) && isArray(config.data)) return config;\n    },\n\n    getData () {\n        return resolvedPromise(this.asFrame(this._data));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-data-source]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import {isString} from 'd3-let';\n\n\nconst schemes = ['http', 'https', 'ws', 'wss'];\n\n\nexport default function (value) {\n    return isString(value) && schemes.indexOf(value.split('://')[0]) > -1;\n}\n","import {csvParse} from 'd3-dsv';\nimport {isObject} from 'd3-let';\nimport {viewProviders} from 'd3-view';\n\nimport warn from './warn';\nimport isUrl from '../utils/isurl';\n\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isUrl(config)) return {url: config};\n        else if (isObject(config) && config.url)\n            return config;\n    },\n\n    getData () {\n        var fetch = viewProviders.fetch;\n        if (!fetch) {\n            warn('fetch provider not available, cannot submit');\n            return;\n        }\n        return fetch(this.url).then(parse);\n    }\n};\n\n\nfunction parse (response) {\n    var ct = (response.headers.get('content-type') || '').split(';')[0];\n    if (ct === 'text/plain' || ct === 'text/csv')\n        return response.text().then(csvParse);\n    else if (ct === 'application/json')\n        return response.json();\n    else {\n        warn(`Cannot load content type '${ct}'`);\n        return [];\n    }\n}\n","import {isArray, isObject} from 'd3-let';\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isObject(config) && config.source) {\n            if (!isArray(config.source)) config.source = [config.source];\n            return config;\n        }\n    },\n\n    getData () {\n        var store = this.store;\n        return Promise.all(this.source.map(source => {\n            return store.getData(source);\n        })).then(frames => {\n            if (frames.length === 1) return frames[0];\n            return frames[0];\n        });\n    }\n};\n","import {isObject} from 'd3-let';\nimport {viewExpression} from 'd3-view';\nimport {resolvedPromise} from 'd3-view';\n\n\nexport default {\n\n    initialise (config) {\n        this.expression = viewExpression(config.expression);\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.expression)\n            return config;\n    },\n\n    getData () {\n        var self = this,\n            model = this.store.model;\n        return resolvedPromise(this.expression.eval(model)).then((data) => self.asFrame(data));\n    }\n};\n","import assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {pop} from 'd3-let';\nimport crossfilter from 'crossfilter';\n\n\nconst dataEvents = dispatch('init', 'data');\n\n\n//\n//  DataSource prototype\n//  ======================\nconst dataSourcePrototype = {\n\n    // get the config object-assign// This method is used by the prototype\n    // to check if the config object is a valid one\n    getConfig () {\n\n    },\n\n    // initialise the data source with a config object\n    initialise (config) {\n        assign(this, config);\n    },\n\n    getData () {},\n\n    //\n    // given a data object returns a Cross filter object\n    asFrame (data) {\n        data = data.map(entry => {\n            if (entry.constructor !== Object) entry = {data: entry};\n            return entry;\n        });\n        return crossfilter(data);\n    }\n};\n\n\n// DataSource container\nexport default assign(map(), {\n    events: dataEvents,\n\n    add (type, source) {\n\n        // DataSource constructor\n        function DataSource (config, store) {\n            initDataSource(this, type, config, store);\n        }\n\n        DataSource.prototype = assign({}, dataSourcePrototype, source);\n\n        this.set(type, DataSource);\n        return DataSource;\n    },\n\n    // Create a new DataSource\n    create (config, store) {\n        var sources = this.values(),\n            cfg;\n        for (var i=0; i<sources.length; ++i) {\n            cfg = sources[i].prototype.getConfig(config);\n            if (cfg) return new sources[i](cfg, store);\n        }\n    }\n});\n\n\nfunction initDataSource(dataSource, type, config, store) {\n\n    var name = store.dataName(pop(config, 'name')),\n        cf = crossfilter();\n\n    // store.natural = cf.dimension(d => d._id);\n\n    Object.defineProperties(dataSource, {\n        cf: {\n            get () {\n                return cf;\n            }\n        },\n        name: {\n            get () {\n                return name;\n            }\n        },\n        store: {\n            get () {\n                return store;\n            }\n        },\n        type: {\n            get () {\n                return type;\n            }\n        },\n        config: {\n            get () {\n                return config;\n            }\n        }\n    });\n\n    dataSource.initialise(config);\n    store.sources.set(name, dataSource);\n    dataEvents.call('init', undefined, dataSource);\n}\n","//\n// Create a groupby transform from a config object\nexport default function (config) {\n    return groupby;\n\n    function groupby (series) {\n        return series.groupby(config.field);\n    }\n}\n","// Collection of transforms\nimport groupby from './groupby';\n\n//\n//  transforms Store\nexport default {\n    groupby\n};\n\n\n// Apply data transforms to a series\nexport function applyTransforms (series, transforms) {\n    let ts;\n    if (!transforms) return series;\n    transforms.forEach(transform => {\n        ts = transform(series);\n        series = ts ? ts : series;\n    });\n    return series;\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport array from './array';\nimport remote from './remote';\nimport composite from './composite';\nimport expression from './expression';\nimport dataSources from './sources';\nimport transformStore from '../transforms/index';\n\n\ndataSources.add('array', array);\ndataSources.add('remote', remote);\ndataSources.add('composite', composite);\ndataSources.add('expression', expression);\n\n//\n//  DataStore\n//  ==============\n//\n//  Map names to datasets\n//  Individual data sets are assumed to contain a collection of records\n//  (or “rows”), which may contain any number of named data\n//  attributes (fields, or “columns”).\n//  Records are modeled using standard JavaScript objects.\nexport default function DataStore(model) {\n    var sources = map();\n\n    Object.defineProperties(this, {\n        sources: {\n            get () {\n                return sources;\n            }\n        }\n    });\n\n    // transforms function\n    this.transforms = assign({}, transformStore);\n    this.dataCount = 0;\n    this.model = model;\n}\n\n\nDataStore.prototype = {\n    size () {\n        return this.sources.size();\n    },\n\n    // Add a new serie from a data source\n    addSources (config) {\n        //\n        // data is a string, it must be already registered with store\n        if (isString(config)) config = {source: config};\n\n        if (isArray(config)) {\n            var self = this;\n            return config.map(cfg => {\n                return dataSources.create(cfg, self);\n            });\n        } else if (config) {\n            return dataSources.create(config, this);\n        }\n    },\n\n    addTransforms (transforms) {\n        assign(this.transforms, transforms);\n    },\n\n    // set, get or remove a data source\n    source (name, source) {\n        if (arguments.length === 1) return this.sources.get(name);\n        if (source === null) {\n            var p = this.sources.get(name);\n            this.sources.remove(name);\n            return p;\n        }\n        this.sources.set(name, source);\n        return this;\n    },\n\n    clearCache () {\n        this.sources.each(ds => {\n            delete ds.cachedFrame;\n        });\n    },\n\n    // get data from a source\n    getData (source) {\n        var ds = this.sources.get(source);\n        if (!ds) throw new Error(`Data source ${source} not available`);\n        if (ds.cachedFrame) return resolvedPromise(ds.cachedFrame);\n        return ds.getData().then(frame => {\n            ds.cachedFrame = frame;\n            return frame;\n        });\n    },\n\n    dataName (name) {\n        this.dataCount++;\n        if (name) return '' + name;\n        var def = this.source('default');\n        if (!def) return 'default';\n        return `source${this.dataCount}`;\n    }\n};\n","// utility to load and set locale\nimport {formatDefaultLocale} from 'd3-format';\nimport {timeFormatDefaultLocale, timeFormat} from 'd3-time-format';\n\nimport dataSources from './sources';\n\n//\n// manage locale\nexport default {\n    formatDate: timeFormat('%d/%m/%Y'),\n\n    formatDateTime: timeFormat('%a %e %b %X %Y'),\n\n    load (symbol) {\n        var locales = this,\n            source1 = dataSources.create(`https://unpkg.com/d3-format/locale/${symbol}.json`),\n            source2 = dataSources.create(`https://unpkg.com/d3-time-format/locale/${symbol}.json`);\n\n        return Promise.all([\n            source1.load().then(\n                locale => {\n                    locales.symbol = symbol;\n                    locales.number = locale;\n                    formatDefaultLocale(locale);\n                }\n            ),\n            source2.load().then(\n                locale => {\n                    locales.time = locale;\n                    locales.formatDate = timeFormat(locale.date);\n                    locales.formatDateTime = timeFormat(locale.dateTime);\n                    timeFormatDefaultLocale(locale);\n                }\n            )\n        ]);\n    }\n};\n","//\n//  Global options for visuals\n//  ============================\n//\nexport default {\n    // visual data source\n    dataSource: null,\n    //\n    size: {\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    }\n};\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\nimport {dispatch} from 'd3-dispatch';\nimport {select} from 'd3-selection';\nimport {viewBase} from 'd3-view';\n\nimport globalOptions from './options';\n\n\nconst CONTAINERS = ['visual', 'container'];\n\n//\n//  Gloval visuals object\n//  ==========================\n//\n//  Container of\n//  * live visuals\n//  * visual types\n//  * paper types\n//  * visual events\nexport const visuals = {\n    live: [],\n    types: {},\n    papers: {},\n    events: dispatch(\n        'before-init',\n        'after-init',\n        'before-draw',\n        'after-draw'\n    )\n};\n\n//\n//  Visual Interface\n//  ====================\n//\n//  Base prototype object for visuals\n//\nconst visualPrototype = assign({}, {\n\n    // initialise the visual with options\n    initialise () {\n\n    },\n\n    // draw this visual\n    draw () {},\n\n    select (el) {\n        return select(el);\n    },\n\n    // destroy the visual\n    destroy () {\n\n    },\n\n    // get a reactive model for type\n    getModel (type) {\n        var model = this.model[type];\n        if (!model && type in globalOptions) {\n            var options = pop(this.options, type);\n            if (this.visualParent)\n                model = this.visualParent.getModel(type).$child(options);\n            else {\n                model = this.model.$new(globalOptions[type]);\n                model.$update(options);\n            }\n            this.model[type] = model;\n        }\n        return model;\n    }\n}, viewBase);\n\n//\n//  Create a new Visual Constructor\nexport default function (type, proto) {\n    const opts = pop(proto, 'options');\n    if (opts)\n        globalOptions[type] = opts;\n\n    function Visual(element, options, model) {\n        Object.defineProperties(this, {\n            visualType : {\n                get () {\n                    return type;\n                }\n            },\n            isViz : {\n                get () {\n                    return CONTAINERS.indexOf(type) === -1;\n                }\n            }\n        });\n        this.options = options || {};\n        visuals.events.call('before-init', undefined, this);\n        this.initialise(element, model);\n        visuals.events.call('after-init', undefined, this);\n    }\n\n    Visual.prototype = assign({}, visualPrototype, proto);\n    visuals.types[type] = Visual;\n    return Visual;\n}\n","import {viewModel} from 'd3-view';\n\nimport createVisual from './base';\n\n\nexport const containerPrototype = {\n\n    initialise (element, model) {\n        if (!model) model = viewModel();\n        this.model = model;\n        this.visualParent = model.visualParent;\n    }\n};\n\n\nexport default createVisual('container', containerPrototype);\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-visualize]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","export default function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n}\n","import {select} from 'd3-selection';\n\nimport round from './round';\n\n\nconst WIDTH = 400;\nconst HEIGHT = '75%';\n\n\nexport function sizeValue (value, size) {\n    if (typeof(value) === \"string\" && value.indexOf('%') === value.length-1)\n        return round(0.01*parseFloat(value)*size);\n    return +value;\n}\n\n// Internal function for evaluating paper dom size\nexport function getSize (element, options) {\n    var size = {\n        width: options.width,\n        height: options.height\n    };\n\n    if (!size.width) {\n        size.width = getWidth(element);\n        if (size.width)\n            size.widthElement = getWidthElement(element);\n        else\n            size.width = WIDTH;\n    }\n\n    if (!size.height) {\n        size.height = getHeight(element);\n        if (size.height)\n            size.heightElement = getHeightElement(element);\n        else\n            size.height = HEIGHT;\n    }\n\n    // Allow to specify height as a percentage of width\n    if (typeof(size.height) === \"string\" && size.height.indexOf('%') === size.height.length-1) {\n        size.heightPercentage = 0.01*parseFloat(size.height);\n        size.height = round(size.heightPercentage*size.width);\n    }\n\n    return size;\n}\n\n\nexport function getWidth (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementWidth(el);\n}\n\n\nexport function getHeight (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementHeight(el);\n}\n\n\nexport function getWidthElement (element) {\n    return getParentElementRect(element, 'width');\n}\n\n\nexport function getHeightElement (element) {\n    return getParentElementRect(element, 'height');\n}\n\n\nfunction elementWidth (el) {\n    var w = el.getBoundingClientRect()['width'],\n        s = select(el),\n        left = padding(s.style('padding-left')),\n        right = padding(s.style('padding-right'));\n    return w - left - right;\n}\n\n\nfunction elementHeight (el) {\n    var w = el.getBoundingClientRect()['height'],\n        s = select(el),\n        top = padding(s.style('padding-top')),\n        bottom = padding(s.style('padding-bottom'));\n    return w - top - bottom;\n}\n\n\nfunction getParentElementRect (element, key) {\n    let parent = element.node ? element.node() : element,\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        v = parent.getBoundingClientRect()[key];\n        if (v)\n            return parent;\n        parent = parent.parentNode;\n    }\n}\n\n\nfunction padding (value) {\n    if (value && value.substring(value.length-2) == 'px')\n        return +value.substring(0, value.length-2);\n    return 0;\n}\n\n\nexport function boundingBox (size) {\n    var w = size.widthElement ? getWidth(size.widthElement) : size.width,\n        h;\n    if (size.heightPercentage)\n        h = round(w*size.heightPercentage, 0);\n    else\n        h = size.heightElement ? getHeight(size.heightElement) : size.height;\n    if (size.minHeight)\n        h = Math.max(h, size.minHeight);\n    return [round(w), round(h)];\n}\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\nimport {select} from 'd3-selection';\nimport {viewDebug} from 'd3-view';\n\nimport createVisual, {visuals} from './base';\nimport {containerPrototype} from './container';\nimport warn from '../utils/warn';\nimport {getSize, boundingBox} from '../utils/size';\n\n//\n//  Visual\n//  =============\n//\n//  A Visual is a a container of visual layers and it is\n//  associated with an HTML element\n//\n//  Usually a Visual contains one layer only, however it is possible to\n//  have more than one by combining several layers together. Importantly,\n//  layers in one visual generate HTMLElements which are children of the visual\n//  element and inherit both the width and height.\n//\n//  A visual register itself with the visuals.live array\n//\nexport default createVisual('visual', assign({}, containerPrototype, {\n\n    options: {\n        render: 'svg',\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    },\n\n    initialise (element, model) {\n        if (!element) throw new Error('HTMLElement required by visual group');\n        this.select(element).classed('d3-visual', true);\n        containerPrototype.initialise.call(this, element, model);\n        // list of layers which define the visual\n        this.layers = [];\n        this.drawCount = 0;\n        visuals.live.push(this);\n\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            size: {\n                get () {\n                    return [this.width, this.height];\n                }\n            }\n        });\n    },\n\n    // Draw the visual\n    draw() {\n        if (!this.drawCount) {\n            this.drawCount = 1;\n            this.fit();\n        } else {\n            this.drawCount++;\n            this.clear();\n        }\n        visuals.events.call('before-draw', undefined, this);\n        this.layers.forEach(visual => {\n            visual.draw();\n        });\n        visuals.events.call('after-draw', undefined, this);\n    },\n\n    clear () {},\n\n    // Add a new visual to this group\n    addVisual (options) {\n        var type = pop(options, 'type');\n        var VisualClass = visuals.types[type];\n        if (!VisualClass)\n            warn(`Cannot add visual ${options.type}`);\n        else {\n            this.model.visualParent = this;\n            return new VisualClass(this.element, this.model);\n        }\n    },\n    // Fit the root element to the size of the parent element\n    fit () {\n        var size = getSize(this.element.parentNode, this.getModel('visual'));\n        this.width = size.width;\n        this.height = size.height;\n        this.sel.style('width', this.width + 'px').style('height', this.height + 'px');\n    },\n\n    resize (size) {\n        if (!size) size = boundingBox(this);\n        var currentSize = this.size;\n\n        if (currentSize[0] !== size[0] || currentSize[1] !== size[1]) {\n            viewDebug(`Resizing visual \"${this.model.uid}\"`);\n            this.width = size[0];\n            this.height = size[1];\n            this.draw();\n        }\n    },\n\n    destroy () {\n        var idx = visuals.live.indexOf(this);\n        if (idx > -1) {\n            visuals.live.splice(idx, 1);\n            this.visuals.forEach(visual => visual.destroy());\n        }\n    }\n}));\n","import assign from 'object-assign';\nimport {isFunction} from 'd3-let';\n\nimport createVisual, {visuals} from './base';\nimport Visual from './visual';\nimport {applyTransforms} from '../transforms/index';\n\n//\n//  crateChart\n//\n//  A chart is a drawing of series data in two dimensional\nexport default function (type, proto) {\n\n    return createVisual(type, assign({}, vizPrototype, chartPrototype, proto));\n}\n\n\n//  Viz Prototype\n//  =================\nexport const vizPrototype = {\n\n    initialise (element, model) {\n        var visual = model ? model.visualParent : null;\n        if (!visual || visual.visuatlType !== 'visual') {\n            visual = new Visual(element, this.options, model);\n            this.options = {};\n        }\n        this.visualParent = visual;\n        this.model = visual.model.$child();\n        visual.layers.push(this);\n    },\n\n    //\n    // paper object for this visualisation\n    paper () {\n        var visual = this.getModel('visual'),\n            paper = this._paper;\n        if (paper && paper.type === visual.render) return paper;\n        var PaperType = visuals.papers[visual.render];\n        if (!PaperType) throw new Error(`Unknown paper ${visual.render}`);\n        paper = new PaperType(this);\n        this._paper = paper;\n        return paper;\n    },\n\n    translate (x, y) {\n        if (isFunction(x)) {\n            return function (d) {\n                var xt = x(d) || 0,\n                    yt = y(d) || 0;\n                return `translate(${xt}, ${yt})`;\n            };\n        } else return `translate(${x}, ${y})`;\n    }\n};\n\n\nexport const chartPrototype = {\n\n    //  override draw method\n    draw () {\n        visuals.events.call('before-draw', undefined, this);\n        var self = this;\n\n        this.getData().then(frame => {\n            if (frame) {\n                frame = applyTransforms(frame, self.transforms);\n                this.doDraw(frame);\n                visuals.events.call('after-draw', undefined, this);\n            }\n        });\n    }\n};\n","import assign from 'object-assign';\nimport {select} from 'd3-selection';\n\nimport {visuals} from './base';\n\n\nexport default function createPaper (type, proto) {\n\n    function Paper (viz) {\n        var element = this.initialise(viz);\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            sel : {\n                get () {\n                    return select(element);\n                }\n            }\n        });\n    }\n\n    Paper.prototype = assign({}, paperPrototype, proto);\n\n    visuals.papers[type] = Paper;\n    return Paper;\n}\n\n\nconst paperPrototype = {\n\n    initialise () {},\n    transition () {},\n    dim (value) {\n        return value;\n    }\n};\n\n\nexport const Svg = createPaper('svg', {\n\n    initialise (viz) {\n        var svg = viz.visualParent.sel.append('svg')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true);\n        return svg.node();\n    }\n});\n","import assign from 'object-assign';\nimport {isString, isObject} from 'd3-let';\n\nimport VisualContainer from '../core/container';\n\n//\n//  vizComponent base prototype\n//  =============================\n//\n//  Some common properties and methods for all visualize components\n//\nexport const vizComponent = {\n    props: [\n        'schema',\t    // Schema is a collection of fields to display in the table\n        'datasource',\t// Data source\n        'plugins',      // list of string/objects\n\t],\n\n    render (props, attrs, el) {\n        var self = this,\n            inner = this.select(el).html();\n        //\n        // build\n        return this.getSchema(props.schema, schema => {\n            if (!isObject(schema)) schema = {};\n            return self.build(schema, inner, attrs);\n        });\n    },\n\n    // get the schema from the input schema property\n    getSchema (input, build) {\n        var parent = this.model.visualParent;\n\n        // allow to specify the schema as an entry of\n        // visuals object in the dashboard schema\n        if (parent && parent !== this.model && isString(input)) {\n            var schema = parent.options.visuals[input];\n            if (schema) input = schema;\n        }\n\n        if (isString(input)) {\n            return this.json(input).then(build);\n        }\n        else return build(input);\n    },\n    //\n    // build the visual component has the schema available\n    build () {}\n};\n//\n//  Dashboard Component\n//  ========================\n//\n//  A collection of visual components arranged according\n//  to a custom layout.\n//\n//  * Dashboard visuals are independent of each other but\n//    interact via the data object\n//  * The Dashboard layout is given by the inner HTML elements\n//  * The configuration is obtained via the schema property which\n//    can be either:\n//      1) an object\n//      2) a url\nexport default assign({}, vizComponent, {\n\n    build (schema, inner, attrs) {\n        var model = this.model;\n        var sel = this.createElement('div');\n        if (attrs.class) sel.attr('class', attrs.class);\n        if (!schema.visuals) schema.visuals = {};\n        model.visualParent = new VisualContainer(sel.node(), schema, model);\n        return this.mountInner(sel, inner);\n    }\n});\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\n\nimport {vizComponent} from './dashboard';\nimport {visuals} from '../core/base';\nimport warn from '../utils/warn';\n\n\n//\n//  Visual component\n//  ======================\n//\n//  An element containing a visualization\nexport default assign({}, vizComponent, {\n\n    build (schema) {\n        var model = this.model,\n            sel = this.createElement('div'),\n            type = pop(schema, 'type') || 'visual',\n            Visual = visuals.types[type];\n        // build the visual object\n        if (Visual) {\n            var visual = new Visual(sel.node(), schema, model);\n            model.visualParent = visual.isViz ? visual.visualParent : visual;\n        }\n        else\n            warn(`Unknown visual ${type}`);\n        return sel;\n    },\n\n    // once the element is mounted in the dom, draw the visual\n    mounted () {\n        if (this.model.visualParent)\n            this.model.visualParent.draw();\n    }\n});\n","import {isoParse} from 'd3-time-format';\n\nimport locale from './locale';\n\n\nexport const parsers = {\n    date: isoParse,\n\n    string (value) {\n        return ''+value;\n    }\n};\n\n// formatters\nexport const formatters = {\n\n    number (value) {\n        return value;\n    },\n\n    date (value) {\n        return locale.formatDate(value);\n    },\n\n    boolean (value) {\n        return value;\n    }\n};\n","import {isObject, isArray} from 'd3-let';\n\nimport {formatters, parsers} from '../data/formatters';\n\n\n//\n// Create table columns from schema\nexport default function (schema) {\n    var columns = [];\n    let col;\n\n\tif (!schema) return columns;\n\n    if (isArray(schema))\n        schema = {properties: schema};\n\n    if (isObject(schema.properties)) {\n        for (let key in schema.properties) {\n            col = schema.properties[key];\n            if (isObject(col)) {\n                if (!col.name) col.name = key;\n                columns.push(col);\n            }\n        }\n    } else\n        Array.prototype.push.apply(columns, schema.properties);\n\n    return columns.map((col) => {\n        if (!isObject(col)) col = {name: col};\n        if (!col.label) col.label = col.name;\n        if (!col.hidden) col.hidden = false;\n        if (!col.$parse) col.$parse = parsers[col.type] || parsers.string;\n        if (!col.$html) col.$html = formatters[col.type] || $html;\n        return col;\n    });\n}\n\n\nfunction $html (value) {\n    return value;\n}\n","//\n//  dataStore integration with visuals\nimport {isString, pop} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport {visuals} from '../core/base';\nimport DataStore from '../data/store';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\nvizPrototype.getData = function () {\n    var name = this.model.data;\n    if (!name) {\n        warn('Visual without data name, cannot get data');\n        return resolvedPromise();\n    }\n    return this.model.dataStore.getData(name);\n};\n\n\nvisuals.events.on('before-init.data', viz => {\n    if (!viz.isViz) return;\n    // remove data from options\n    viz.data = pop(viz.options, 'data');\n});\n\n\nvisuals.events.on('after-init.data', viz => {\n    if (viz.isViz) setupLayer(viz);\n    else setupVisual(viz);\n});\n\n\nfunction setupVisual (visual) {\n    var store = visual.model.dataStore,\n        data = pop(visual.options, 'data');\n    //\n    if (!store) {\n        store = new DataStore(visual.model);\n        visual.model.dataStore = store;\n    }\n    store.addSources(data);\n}\n\n\nfunction setupLayer (layer) {\n    var store = layer.model.dataStore,\n        data = pop(layer, 'data');\n    if (!data) return;\n    if (isString(data)) data = {source: data};\n    if (!data.name) data.name = layer.model.uid;\n    data = store.addSources(data);\n    if (data)\n        layer.model.$set('data', data.name);\n    else\n        warn(`Could not create data source ${data.name}`);\n}\n","import {inBrowser} from 'd3-let';\nimport {viewDebounce} from 'd3-view';\nimport {select} from 'd3-selection';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nif (!globalOptions.resizeDelay)\n    globalOptions.resizeDelay = 200;\n\n\nif (inBrowser) {\n    var resize = viewDebounce(() => {\n        visuals.live.forEach(p => p.resize());\n    }, globalOptions.resizeDelay);\n\n    select(window).on('resize.visuals', resize);\n}\n","// Title plot annotation\nimport {isString} from 'd3-let';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.title = {\n    text: null,\n    fontSize: '10px'\n};\n\n\nvisuals.events.on('after-init.title', viz => {\n    var title = viz.options.title;\n    if (isString(title)) viz.options.title = {text: title};\n});\n","import {isObject} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst KEYS = ['top', 'bottom', 'left', 'right'];\nconst LEFTRIGHT = ['left', 'right'];\n\n\n// margin for visual marks\nglobalOptions.margin = {\n    top: 20,\n    bottom: 20,\n    left: 20,\n    right: 20\n};\n// padding for the visual paper\nglobalOptions.padding = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n};\n\n\n//\n//  Bounding box for a viz\n//  ==========================\nvizPrototype.boundingBox = function () {\n    var width = this.visualParent.width,\n        height = this.visualParent.height,\n        margin = calculate(this.getModel('margin'), width, height),\n        padding = calculate(this.getModel('padding'), width, height),\n        total = KEYS.reduce((o, key) => {\n            o[key] = margin[key] + padding[key];\n            return o;\n        }, {});\n    return {\n        width: width,\n        height: height,\n        margin: margin,\n        padding: margin,\n        total: total,\n        innerWidth: width - total.left - total.right,\n        innerHeight: width - total.top - total.bottom\n    };\n};\n\n\nvisuals.events.on('after-init.margin', viz => {\n    viz.margin = margins('margin', viz);\n    viz.padding = margins('padding', viz);\n});\n\n\nfunction margins (name, viz) {\n    var value = viz.options[name];\n\n    if (value !== undefined && !isObject(value)) {\n        var v = value || 0;\n        viz.options[name] = {\n            left: v,\n            right: v,\n            top: v,\n            bottom: v\n        };\n    }\n}\n\n\nfunction calculate (model, width, height) {\n    return KEYS.reduce((o, key) => {\n        o[key] = sizeValue(model[key], LEFTRIGHT.indexOf(key) > -1 ? width : height);\n        return o;\n    }, {});\n}\n","import globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\n\nglobalOptions.color = {\n    scale: 'cool'\n};\n\n\n//\n//  Color scale method\n//  ==========================\nvizPrototype.colorScale = function () {\n    var color = this.getModel('color');\n    return color;\n};\n","//\n// Use clusterize.js to render the table\nexport default function (table, options) {\n    return table.require('clusterize.js@0.17.6').then(Clusterize => clusterize(Clusterize, table, options));\n}\n\n\nfunction clusterize(Clusterize) {\n    var cl = new Clusterize();\n    return cl;\n}\n","export default function (table) {\n    return table;\n}\n","//\n//  bootstrap styling for tabular component\n//  ==========================================\n//\nimport assign from 'object-assign';\n\n\nconst defaults = {\n    over: true,\n    small: true,\n    bordered: true,\n    loadingClass: 'table-info',\n    loadingTextClass: 'text-center'\n};\n\n\nexport default function (table, options) {\n    var style = table.model.style;\n    style.$update(assign({}, defaults, options));\n\n    style.tableClass = 'table table-responsive';\n    if (style.striped) style.tableClass += ' table-striped';\n    if (style.over) style.tableClass += ' table-hover';\n    if (style.bordered) style.tableClass += ' table-bordered';\n    if (style.small) style.tableClass += ' table-sm';\n}\n","//\n//  Plugins for visuals and tabular\n//\n// visual plugins\nimport './data';\nimport './responsive';\nimport './title';\nimport './margin';\nimport './color';\n//\n//  This module depends on core but not on components\nimport clusterize from './clusterize';\nimport paginate from './paginate';\nimport bootstrap from './bootstrap';\n\n// plugins add functionalities to a d3 table\n// A plugin is a function accepting two parameters:\n//  * the table component\n//  * object with configuration parameters\nexport default {\n    bootstrap,\n    clusterize,\n    paginate\n};\n","// import {timeout} from 'd3-timer';\nimport assign from 'object-assign';\nimport {isString, isArray, isPromise} from 'd3-let';\n\nimport warn from '../utils/warn';\nimport createColumns from '../utils/columns';\nimport tablePlugins from '../plugins/index';\nimport {vizComponent} from './dashboard';\n\n\nconst tableTpl = `<table d3-class=\"[style.tableClass, loadingData ? 'loading' : null]\">\n<thead d3-class=\"style.headerClass\">\n<tr d3-class=\"style.headerRowClass\">\n  <th d3-for=\"col in columns\"\n        d3-html=\"col.label\"\n        d3-if=\"!col.hidden\">\n  </th>\n</tr>\n<tr d3-if=\"loadingData\" d3-class=\"style.loadingClass\">\n    <td d3-attr-colspan=\"columns.length\">\n        <p d3-class=\"style.loadingTextClass\">loading data</p>\n    </td>\n</tr>\n</thead>\n<tbody></tbody>\n</table>`;\n\n\nexport default assign({}, vizComponent, {\n\n\tmodel () {\n        return {\n            header: true,            // show header\n            columns: [],             // table columns\n            loadingData: false,\n            style: {\n                tableClass: null,\n                headerClass: null,\n                headerRowClass: null,\n                loadingClass: 'loading',\n                loadingTextClass: null\n            }\n        };\n\t},\n\n\tbuild (schema) {\n\t\tvar self = this,\n            model = this.model,\n            plugins = schema.plugins || [];\n        // model.allData = crossfilter([]);\n        this.records = {};\n        this.data = [];\n        this.template = tableTpl;\n\n\t\tmodel.columns = createColumns(schema);\n\t\t// if (data.dataurl) model.dataLoader = new DataLoader(data.dataurl);\n\n        if (!isArray(plugins)) {\n            warn('plugins should be an array');\n        } else {\n            var promises = [];\n            let promise;\n            plugins.forEach(plugin => {\n                if (isString(plugin)) plugin = {name: plugin};\n                if (!tablePlugins[plugin.name])\n                    warn(`Unknown table plugin ${plugin.name}`);\n                else {\n                    promise = tablePlugins[plugin.name](self, plugin);\n                    if (isPromise(promise)) promises.push(promise);\n                }\n            });\n            if (promises.length)\n                 return Promise.all(promises).then(() => self.viewElement(self.template));\n        }\n\n\t\treturn this.viewElement(this.template);\n\t},\n\n\tmounted () {\n        var vm = this,\n            model = this.model;\n\t\tif (model.dataLoader) {\n\t\t\tvar p = model.dataLoader.load(model.columns);\n            if (p) {\n                model.loadingData = true;\n                p.then((data) => {\n                    // var allData = model.allData;\n                    model.loadingData = false;\n                    addData(vm, data);\n                }, (err) => {\n                    model.loadingData = false;\n                    return err;\n                });\n            }\n        }\n\t}\n});\n\n// new data to include in the table\nfunction addData (vm, newData) {\n    var records = vm.records,\n        data = vm.data,\n        model = vm.model,\n        delayData = newData;\n\n    let record, value;\n\n    newData = delayData.splice(0, 100);\n\n    newData.forEach((d) => {\n        if (d.id) {\n            record = d.id ? records[d.id] : null;\n            if (record)\n                d = assign(record, d);\n            else {\n                data.push(d);\n                records[d.id] = d;\n            }\n        } else\n            data.push(d);\n        model.columns.forEach((col) => {\n            d[col.name] = col.$parse(d[col.name]);\n        });\n    });\n\n    //if (delayData.length)\n    //    timeout(() => addData(vm, delayData));\n\n    var rows = vm.sel.select('tbody')\n                .selectAll('tr').data(data);\n\n    rows\n        .enter()\n            .append('tr')\n            .attr('scope', 'row')\n            .selectAll('td')\n            .data(model.columns)\n            .enter()\n                .append('td')\n                .style('display', (col) => {\n                    return col.hidden ? 'none' : null;\n                })\n                .html(function (col) {\n                    record = this.parentNode.__data__;\n                    value = record[col.name];\n                    return col.$html(value === undefined ? '' : value);\n                });\n}\n","//\n//  d3-view components\n//  ======================\n//\n//  d3-view plugin for visualization components\n//\nimport dashboard from './dashboard';\nimport visual from './visual';\nimport tabular from './tabular';\nimport tabularPlugins from '../plugins/index';\n\n\n// Visual components plugin\nexport default {\n    tabularPlugins,\n\n    install (vm) {\n        vm.addComponent('dashboard', dashboard);\n        vm.addComponent('visual', visual);\n        vm.addComponent('tabular', tabular);\n    }\n\n};\n","import createChart from '../core/chart';\n\n//\n//  Bar Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('barchart', {\n\n    options: {\n        orientation: 'vertical',\n        // stack multiple y series?\n        stack: false\n    },\n\n    doDraw () {\n\n    }\n});\n","import * as d3_shape from 'd3-shape';\n\nimport createChart from '../core/chart';\nimport warn from '../utils/warn';\n\n\n//\n//  Line Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('linechart', {\n\n    options: {\n        lineWidth: 1,\n        colorOpacity: 1,\n        curve: 'cardinalOpen'\n    },\n\n    doDraw () {\n        var data = this.series,\n            aesthetics = this.aesthetics,\n            path = this.plot.path(this).data([data]),\n            x = this.scaled(this.mapping.x, this.plot, data),\n            y = this.scaled(this.mapping.y, this.plot, data),\n            line = d3_shape.line().x(x).y(y).curve(curve(this, aesthetics.curve)),\n            width = this.plot.dim(aesthetics.lineWidth),\n            merge = this.plot.transition('update');\n\n        path\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', aesthetics.color)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', width)\n            .merge(path)\n                .transition(merge)\n                .attr('stroke', aesthetics.color)\n                .attr('stroke-opacity', aesthetics.colorOpacity)\n                .attr('stroke-width', width)\n                .attr('d', line);\n\n        path\n            .exit()\n            .remove();\n    }\n});\n\n\nexport function curve (layer, name) {\n    var obj = d3_shape[curveName(name)];\n    if (!obj) {\n        warn(`Could not locate curve type \"${name}\"`);\n        name = curveName(layer.defaults().curveName);\n        obj = d3_shape[name];\n    }\n    return obj;\n}\n\n\nfunction curveName (name) {\n    if (name.substring(0, 5) !== 'curve')\n        name = 'curve' + name[0].toUpperCase() + name.substring(1);\n    return name;\n}\n","import {pie, arc} from 'd3-shape';\n\nimport createChart from '../core/chart';\n\nconst pi = Math.PI;\nconst rad = pi/180;\n\n//\n//  Pie Chart\n//  =============\n//\nexport default createChart('piechart', {\n\n    options: {\n        // The data values from this field will be encoded as angular spans.\n        // If omitted, all pie slices will have equal spans\n        field: null,\n        startAngle: 0,\n        endAngle: 360,\n        sort: false,\n        innerRadius: 0,\n        padAngle: 0,\n        cornerRadius: 0,\n        //\n        color: null,\n        lineWidth: 1,\n        colorOpacity: 1,\n        fillOpacity: 1\n    },\n\n    doDraw (frame) {\n        var model = this.model,\n            cscale = model.colorScale,\n            box = this.boundingBox(),\n            outerRadius = box.innerWidth/2,\n            innerRadius = model.innerRadius*outerRadius,\n            angles = pie()\n                .padAngle(rad*model.padAngle)\n                .startAngle(rad*model.startAngle),\n            arcs = arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius)\n                .cornerRadius(model.cornerRadius),\n            paper = this.paper(),\n            update = paper.transition('update'),\n            fill = this.scaled(this.accessor(model.field), cscale),\n            slices = paper\n                .sel\n                .attr(\"transforms\", this.translate(box.shift.left+outerRadius, box.shift.top+outerRadius))\n                .selectAll('.slice').data(angles(frame));\n\n        slices\n            .enter()\n                .append('path')\n                .attr('class', 'slice')\n                .attr('stroke', model.color)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', paper.dim(model.lineWidth))\n            .merge(slices)\n                .transition(update)\n                .attr('stroke', model.color)\n                .attr('stroke-opacity', model.colorOpacity)\n                .attr('d', arcs)\n                .attr('fill', fill)\n                .attr('fill-opacity', model.fillOpacity);\n\n        slices.exit().remove();\n    }\n});\n","import createChart from '../core/chart';\n\n//\n//  Treemap\n//  =============\n//\nexport default createChart('treemap', {\n    requires: ['d3-treemap']\n\n});\n"],"names":["defaults","size","options","assign","t","range","S","sigma","drift","data","x","y","norm","randomNormal","dx","i","length","config","_data","isArray","isObject","resolvedPromise","asFrame","prefix","msg","logger","warn","schemes","value","isString","indexOf","split","isUrl","url","fetch","viewProviders","then","parse","response","ct","headers","get","text","csvParse","json","source","store","Promise","all","map","getData","frames","expression","viewExpression","self","model","eval","dataEvents","dispatch","dataSourcePrototype","entry","constructor","Object","crossfilter","type","DataSource","prototype","set","sources","values","cfg","getConfig","initDataSource","dataSource","name","dataName","pop","cf","defineProperties","initialise","call","undefined","groupby","series","field","applyTransforms","transforms","ts","forEach","transform","dataSources","add","array","remote","composite","DataStore","transformStore","dataCount","create","arguments","p","remove","each","ds","cachedFrame","Error","frame","def","timeFormat","symbol","locales","source1","source2","load","number","locale","time","formatDate","date","formatDateTime","dateTime","CONTAINERS","visuals","visualPrototype","el","select","globalOptions","visualParent","getModel","$child","$new","$update","viewBase","proto","opts","Visual","element","events","types","containerPrototype","viewModel","createVisual","n","Math","round","pow","WIDTH","HEIGHT","sizeValue","parseFloat","getSize","width","height","getWidth","widthElement","getWidthElement","getHeight","heightElement","getHeightElement","heightPercentage","getParentElementRect","elementWidth","elementHeight","w","getBoundingClientRect","s","left","padding","style","right","top","bottom","key","parent","node","v","tagName","parentNode","substring","boundingBox","h","minHeight","max","classed","layers","drawCount","live","push","fit","clear","draw","VisualClass","sel","currentSize","uid","idx","splice","visual","destroy","vizPrototype","chartPrototype","visuatlType","paper","_paper","render","PaperType","papers","isFunction","d","xt","yt","doDraw","createPaper","Paper","viz","paperPrototype","Svg","svg","append","attr","visualType","vizComponent","props","attrs","inner","html","getSchema","schema","build","input","createElement","class","VisualContainer","mountInner","isViz","parsers","isoParse","formatters","columns","col","properties","Array","apply","label","hidden","$parse","string","$html","dataStore","on","setupLayer","setupVisual","addSources","layer","$set","resizeDelay","inBrowser","resize","viewDebounce","window","title","KEYS","LEFTRIGHT","margin","calculate","total","reduce","o","margins","color","colorScale","table","require","clusterize","Clusterize","cl","tableClass","striped","over","bordered","small","tableTpl","plugins","records","template","createColumns","promises","promise","plugin","tablePlugins","isPromise","viewElement","vm","dataLoader","loadingData","err","addData","newData","delayData","record","id","rows","selectAll","enter","__data__","addComponent","dashboard","tabular","createChart","aesthetics","path","plot","scaled","mapping","line","d3_shape","curve","dim","lineWidth","merge","transition","colorOpacity","exit","obj","curveName","toUpperCase","pi","PI","rad","cscale","box","outerRadius","innerWidth","innerRadius","angles","pie","padAngle","startAngle","arcs","arc","cornerRadius","update","fill","accessor","slices","translate","shift","fillOpacity"],"mappings":"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"}