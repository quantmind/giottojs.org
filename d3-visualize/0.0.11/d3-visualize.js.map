{"version":3,"file":"d3-visualize.js","sources":["../src/utils/randompath.js","../src/data/array.js","../src/data/warn.js","../src/utils/isurl.js","../src/data/remote.js","../src/data/composite.js","../src/data/expression.js","../src/utils/accessor.js","../src/data/dataframe.js","../src/utils/warn.js","../src/transforms/filter.js","../src/transforms/timeseries.js","../src/core/options.js","../src/transforms/mapfields.js","../src/transforms/index.js","../src/data/sources.js","../src/data/store.js","../src/data/locale.js","../src/core/base.js","../src/utils/round.js","../src/utils/size.js","../src/core/visual.js","../src/core/chart.js","../src/core/paper.js","../src/core/container.js","../src/components/dashboard.js","../src/components/visual.js","../src/data/formatters.js","../src/utils/columns.js","../src/plugins/data.js","../src/plugins/responsive.js","../src/plugins/title.js","../src/plugins/margin.js","../src/plugins/color.js","../src/plugins/clusterize.js","../src/plugins/paginate.js","../src/plugins/bootstrap.js","../src/plugins/index.js","../src/components/tabular.js","../src/components/index.js","../src/utils/constant.js","../src/utils/descending.js","../src/utils/identity.js","../src/transforms/pyramid.js","../src/charts/bar.js","../src/charts/line.js","../src/charts/pie.js","../src/utils/polygon.js","../src/charts/pyramid.js","../src/charts/treemap.js"],"sourcesContent":["import assign from 'object-assign';\nimport {range} from 'd3-array';\nimport {randomNormal} from 'd3-random';\n\n\nconst defaults = {\n    sigma: 0.1,\n    drift: 0\n};\n\n\nexport default function (size, options) {\n    options = assign({}, defaults, options);\n    var t = range(0, +size, 1),\n        S = options.sigma,\n        drift = options.drift,\n        data = [{x: 0, y: 0}],\n        norm = randomNormal(0, 1),\n        dx;\n\n    for (var i = 1; i < t.length; i++) {\n        dx = drift + S * norm();\n        data[i] = {\n            x: i,\n            y: data[i - 1].y + dx\n        };\n    }\n\n    return data;\n}\n","import {isArray, isObject} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\n//\n//  Array DataSource\n//  ====================\n//\n//  Data is given in an array, pkain & simple\nexport default {\n\n    initialise (config) {\n        this._data = config.data;\n    },\n\n    getConfig (config) {\n        if (isArray(config)) return {data: config};\n        else if (isObject(config) && isArray(config.data)) return config;\n    },\n\n    getData () {\n        return resolvedPromise(this.asFrame(this._data));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-data-source]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import {isString} from 'd3-let';\n\n\nconst schemes = ['http', 'https', 'ws', 'wss'];\n\n\nexport default function (value) {\n    return isString(value) && schemes.indexOf(value.split('://')[0]) > -1;\n}\n","import {csvParse} from 'd3-dsv';\nimport {isObject} from 'd3-let';\nimport {viewProviders, resolvedPromise} from 'd3-view';\n\nimport warn from './warn';\nimport isUrl from '../utils/isurl';\n\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isUrl(config)) return {url: config};\n        else if (isObject(config) && config.url)\n            return config;\n    },\n\n    initialise (config) {\n        this.url = config.url;\n    },\n\n    getData () {\n        var fetch = viewProviders.fetch,\n            self = this;\n        if (!fetch) {\n            warn('fetch provider not available, cannot submit');\n            return resolvedPromise([]);\n        }\n        return fetch(this.url).then(parse).then((data) => self.asFrame(data));\n    }\n};\n\n\nfunction parse (response) {\n    var ct = (response.headers.get('content-type') || '').split(';')[0];\n    if (ct === 'text/plain' || ct === 'text/csv')\n        return response.text().then(csvParse);\n    else if (ct === 'application/json')\n        return response.json();\n    else {\n        warn(`Cannot load content type '${ct}'`);\n        return [];\n    }\n}\n","import {isArray, isObject} from 'd3-let';\n//\n//  A composite dataSource\n//  ===================\n//\n//  A composite data source has the source attribute with the name of one\n//  or more data sets to use as the source for this data set.\n//  The source property is useful in combination with a transform pipeline\n//  to derive new data.\n//  If string-valued, indicates the name of the source data set.\n//  If array-valued, specifies a collection of data source names that\n//  should be merged (unioned) together.\nexport default {\n\n    initialise (config) {\n        this.source = config.source;\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.source) {\n            if (!isArray(config.source)) config.source = [config.source];\n            return config;\n        }\n    },\n\n    getData () {\n        var store = this.store,\n            self = this;\n        let frame;\n        return Promise.all(this.source.map(source => {\n             return store.getData(source);\n        })).then(frames => {\n            if (frames.length === 1) frame = frames[0];\n            else frame = self.mergeFrames(frames);\n            return self.asFrame(frame);\n        });\n    },\n\n    // TODO: implement frame merging\n    mergeFrames (frames) {\n        return frames[0];\n    }\n};\n","import {isObject} from 'd3-let';\nimport {viewExpression, resolvedPromise} from 'd3-view';\n\n\nexport default {\n\n    initialise (config) {\n        this.expression = viewExpression(config.expression);\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.expression)\n            return config;\n    },\n\n    getData () {\n        var self = this,\n            model = this.store.model;\n        return resolvedPromise(this.expression.eval(model)).then((data) => self.asFrame(data));\n    }\n};\n","export default function (field) {\n    return function (d) {\n        return d[field];\n    };\n}\n","import {isArray} from 'd3-let';\nimport {map} from 'd3-collection';\nimport crossfilter from 'crossfilter';\n\nimport accessor from '../utils/accessor';\n\n\nexport default function DataFrame (data, serie, store) {\n    if (isArray(data)) data = {\n        store: store,\n        data: data,\n        dimensions: {},\n        series: map()\n    };\n    Object.defineProperties(this, {\n        _inner: {\n            get () {\n                return data;\n            }\n        },\n        store: {\n            get () {\n                return data.store;\n            }\n        },\n        data: {\n            get () {\n                return data.data;\n            }\n        },\n        dimensions: {\n            get () {\n                return data.dimensions;\n            }\n        },\n        series: {\n            get () {\n                return data.series;\n            }\n        }\n    });\n    this.serie = serie;\n}\n\n\nDataFrame.prototype = {\n\n    size () {\n        return this.data.length;\n    },\n    \n    new (serie) {\n        if (isArray(serie)) return new DataFrame(serie, null, this.store);\n        else return new DataFrame(this._inner, serie);\n    },\n\n    cf () {\n        if (!this._inner.cf) this._inner.cf = crossfilter(this.data);\n        return this._inner.cf;\n    },\n\n    dimension (name, value, keepExisting) {\n        if (arguments.length === 1) keepExisting = true;\n        var current = this.dimensions[name];\n        if (current) {\n            if (keepExisting) return current;\n            current.dispose();\n        }\n        if (!value) value = accessor(name);\n        this.dimensions[name] = this.cf().dimension(value);\n        return this.dimensions[name];\n    },\n\n    add () {\n        //this._inner.cf.add(data);\n    },\n\n    map (mapper) {\n        return this.new(this.data.map(mapper));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-visualize]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var dimension = config.dimension;\n\n    if (!dimension) warn('Filter transform requires a \"dimenstion\" entry');\n\n    return filter;\n\n    function filter (frame) {\n        if (dimension) {\n            var d = frame.dimension(dimension);\n            return frame.new(d.group());\n        }\n    }\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var sortby = config.sortby,\n        groupby = config.groupby;\n\n    if (!sortby) warn('timeseries transform requires a \"sortby\" entry');\n\n    return timeseries;\n\n    function timeseries (frame) {\n        if (sortby) {\n            if (groupby) {\n                var dim = frame.dimension(groupby),\n                    groups = dim.group().top(Infinity),\n                    newframe = frame.new([]),\n                    tmp;\n                groups.forEach(group => {\n                    tmp = frame.new(dim.filterExact(group.key).top(Infinity)).dimension(sortby).group().top(Infinity);\n                    newframe.series.set(group.key, frame.new(tmp).dimension('key').top(Infinity));\n                });\n                return newframe;\n            } else {\n                return frame.new(frame.dimension(sortby).top(Infinity));\n            }\n        }\n        return frame;\n    }\n}\n","//\n//  Global options for visuals\n//  ============================\n//\nexport default {\n    // visual data source\n    dataSource: null,\n    //\n    size: {\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    }\n};\n","//\n//  Map Fields Transform\n//  ========================\n//\n//  Convert a set af fields to a different data type\n//\nimport assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {isString} from 'd3-let';\nimport {utcParse} from 'd3-time-format';\n\nimport warn from '../utils/warn';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.dateFormat = '%d-%b-%y';\n\n\nconst converters = {\n    date (entry) {\n        return utcParse(entry.dateFormat || globalOptions.dateFormat);\n    },\n    number () {\n        return parseFloat;\n    }\n};\n\n\n//\nexport default function (config) {\n    config = assign({}, globalOptions.dateFormat, config);\n    var fields = map(config.fields);\n    let i, converter;\n\n    return mapfields;\n\n    function mapfields (frame) {\n        var mappers = [];\n\n        fields.each((entry, key) => {\n            if (isString(entry)) entry = {type: entry};\n            converter = converters[entry.type];\n            if (!converter) warn(`Cannot convert field ${key} to type ${entry.type}`);\n            else mappers.push([key, converter(entry)]);\n        });\n\n        if (mappers.length)\n            frame = frame.map(d => {\n                for (i=0; i<mappers.length; ++i)\n                    d[mappers[i][0]] = mappers[i][1](d[mappers[i][0]]);\n                return d;\n            });\n\n        return frame;\n    }\n}\n","// Collection of transforms\nimport {map} from 'd3-collection';\nimport filter from './filter';\nimport timeseries from './timeseries';\nimport mapfields from './mapfields';\n\n//\n//  transforms Store\nexport default map({\n    filter,\n    mapfields,\n    timeseries\n});\n\n\n// Apply data transforms to a series\nexport function applyTransforms (frame, transforms) {\n    let ts;\n    if (!transforms) return frame;\n    transforms.forEach(transform => {\n        ts = transform(frame);\n        frame = ts ? ts : frame;\n    });\n    return frame;\n}\n","import assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {pop, isArray} from 'd3-let';\n\nimport DataFrame from './dataframe';\nimport transformStore, {applyTransforms} from '../transforms/index';\nimport warn from '../utils/warn';\n\nconst dataEvents = dispatch('init', 'data');\n\n\n//\n//  DataSource prototype\n//  ======================\nconst dataSourcePrototype = {\n\n    // get the config object-assign// This method is used by the prototype\n    // to check if the config object is a valid one\n    getConfig () {},\n\n    // initialise the data source with a config object\n    initialise () {},\n\n    getData () {},\n\n    //\n    addTransforms (transforms) {\n        var self = this;\n        let t;\n        if (!transforms) return;\n        if (!isArray(transforms)) transforms = [transforms];\n        transforms.forEach(transform => {\n            t = transformStore.get(transform.type);\n            if (!t) warn(`Transform \"${transform.type}\" not known`);\n            else self.transforms.push(t(transform));\n        });\n    },\n    //\n    // given a data object returns a Cross filter object\n    asFrame (data) {\n        if (isArray(data)) {\n            data = data.map(entry => {\n                if (entry.constructor !== Object) entry = {data: entry};\n                return entry;\n            });\n            data = new DataFrame(data, null, this.store);\n        }\n        return applyTransforms(data, this.transforms);\n    }\n};\n\n\n// DataSource container\nexport default assign(map(), {\n    events: dataEvents,\n\n    add (type, source) {\n\n        // DataSource constructor\n        function DataSource (config, store) {\n            initDataSource(this, type, config, store);\n        }\n\n        DataSource.prototype = assign({}, dataSourcePrototype, source);\n\n        this.set(type, DataSource);\n        return DataSource;\n    },\n\n    // Create a new DataSource\n    create (config, store) {\n        var sources = this.values(),\n            cfg;\n        for (var i=0; i<sources.length; ++i) {\n            cfg = sources[i].prototype.getConfig(config);\n            if (cfg) return new sources[i](cfg, store);\n        }\n    }\n});\n\n\nfunction initDataSource(dataSource, type, config, store) {\n\n    var name = store.dataName(pop(config, 'name')),\n        transforms = [];\n\n    // store.natural = cf.dimension(d => d._id);\n\n    Object.defineProperties(dataSource, {\n        name: {\n            get () {\n                return name;\n            }\n        },\n        store: {\n            get () {\n                return store;\n            }\n        },\n        type: {\n            get () {\n                return type;\n            }\n        },\n        // transforms to apply to data\n        transforms: {\n            get () {\n                return transforms;\n            }\n        },\n        config: {\n            get () {\n                return config;\n            }\n        }\n    });\n\n    dataSource.initialise(config);\n    dataSource.addTransforms(pop(config, 'transforms'));\n    store.sources.set(name, dataSource);\n    dataEvents.call('init', undefined, dataSource);\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport array from './array';\nimport remote from './remote';\nimport composite from './composite';\nimport expression from './expression';\nimport dataSources from './sources';\nimport transformStore from '../transforms/index';\n\n\ndataSources.add('array', array);\ndataSources.add('remote', remote);\ndataSources.add('composite', composite);\ndataSources.add('expression', expression);\n\n//\n//  DataStore\n//  ==============\n//\n//  Map names to datasets\n//  Individual data sets are assumed to contain a collection of records\n//  (or “rows”), which may contain any number of named data\n//  attributes (fields, or “columns”).\n//  Records are modeled using standard JavaScript objects.\nexport default function DataStore(model) {\n    var sources = map();\n\n    Object.defineProperties(this, {\n        sources: {\n            get () {\n                return sources;\n            }\n        }\n    });\n\n    // transforms function\n    this.transforms = assign({}, transformStore);\n    this.dataCount = 0;\n    this.model = model;\n}\n\n\nDataStore.prototype = {\n    size () {\n        return this.sources.size();\n    },\n\n    // Add a new serie from a data source\n    addSources (config) {\n        //\n        // data is a string, it must be already registered with store\n        if (isString(config)) config = {source: config};\n\n        if (isArray(config)) {\n            var self = this;\n            return config.map(cfg => {\n                return dataSources.create(cfg, self);\n            });\n        } else if (config) {\n            return dataSources.create(config, this);\n        }\n    },\n\n    addTransforms (transforms) {\n        assign(this.transforms, transforms);\n    },\n\n    // set, get or remove a data source\n    source (name, source) {\n        if (arguments.length === 1) return this.sources.get(name);\n        if (source === null) {\n            var p = this.sources.get(name);\n            this.sources.remove(name);\n            return p;\n        }\n        this.sources.set(name, source);\n        return this;\n    },\n\n    clearCache () {\n        this.sources.each(ds => {\n            delete ds.cachedFrame;\n        });\n    },\n\n    // get data from a source\n    getData (source) {\n        var ds = this.sources.get(source);\n        if (!ds) throw new Error(`Data source ${source} not available`);\n        if (ds.cachedFrame) return resolvedPromise(ds.cachedFrame);\n        return ds.getData().then(frame => {\n            ds.cachedFrame = frame;\n            return frame;\n        });\n    },\n\n    dataName (name) {\n        this.dataCount++;\n        if (name) return '' + name;\n        var def = this.source('default');\n        if (!def) return 'default';\n        return `source${this.dataCount}`;\n    }\n};\n","// utility to load and set locale\nimport {formatDefaultLocale} from 'd3-format';\nimport {timeFormatDefaultLocale, timeFormat} from 'd3-time-format';\n\nimport dataSources from './sources';\n\n//\n// manage locale\nexport default {\n    formatDate: timeFormat('%d/%m/%Y'),\n\n    formatDateTime: timeFormat('%a %e %b %X %Y'),\n\n    load (symbol) {\n        var locales = this,\n            source1 = dataSources.create(`https://unpkg.com/d3-format/locale/${symbol}.json`),\n            source2 = dataSources.create(`https://unpkg.com/d3-time-format/locale/${symbol}.json`);\n\n        return Promise.all([\n            source1.load().then(\n                locale => {\n                    locales.symbol = symbol;\n                    locales.number = locale;\n                    formatDefaultLocale(locale);\n                }\n            ),\n            source2.load().then(\n                locale => {\n                    locales.time = locale;\n                    locales.formatDate = timeFormat(locale.date);\n                    locales.formatDateTime = timeFormat(locale.dateTime);\n                    timeFormatDefaultLocale(locale);\n                }\n            )\n        ]);\n    }\n};\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\nimport {dispatch} from 'd3-dispatch';\nimport {select} from 'd3-selection';\nimport {viewBase, viewModel} from 'd3-view';\n\nimport globalOptions from './options';\n\n\nconst CONTAINERS = ['visual', 'container'];\n\n//\n//  Gloval visuals object\n//  ==========================\n//\n//  Container of\n//  * live visuals\n//  * visual types\n//  * paper types\n//  * visual events\nexport const visuals = {\n    live: [],\n    types: {},\n    papers: {},\n    events: dispatch(\n        'before-init',\n        'after-init',\n        'before-draw',\n        'after-draw'\n    )\n};\n\n//\n//  Visual Interface\n//  ====================\n//\n//  Base prototype object for visuals\n//\nconst visualPrototype = assign({}, {\n\n    // initialise the visual with options\n    initialise () {\n\n    },\n\n    // draw this visual\n    draw () {},\n\n    select (el) {\n        return select(el);\n    },\n\n    // destroy the visual\n    destroy () {\n\n    },\n\n    // get a reactive model for type\n    getModel (type) {\n        if (!type) type = this.visualType;\n        var model = this.model[type];\n        if (!model && type in globalOptions) {\n            var options = pop(this.options, type);\n            if (this.visualParent)\n                model = this.visualParent.getModel(type).$child(options);\n            else {\n                model = this.model.$new(globalOptions[type]);\n                model.$update(options);\n            }\n            this.model[type] = model;\n        }\n        return model;\n    }\n}, viewBase);\n\n//\n//  Create a new Visual Constructor\nexport default function (type, proto) {\n    const opts = pop(proto, 'options');\n    if (opts)\n        globalOptions[type] = opts;\n\n    function Visual(element, options, parent, model) {\n        Object.defineProperties(this, {\n            visualType: {\n                get () {\n                    return type;\n                }\n            },\n            isViz: {\n                get () {\n                    return CONTAINERS.indexOf(type) === -1;\n                }\n            }\n        });\n        this.visualParent = parent;\n        this.model = parent ? parent.model.$new() : (model || viewModel());\n        this.options = options || {};\n        visuals.events.call('before-init', undefined, this);\n        this.initialise(element);\n        visuals.events.call('after-init', undefined, this);\n    }\n\n    Visual.prototype = assign({}, visualPrototype, proto);\n    visuals.types[type] = Visual;\n    return Visual;\n}\n","export default function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n}\n","import {select} from 'd3-selection';\n\nimport round from './round';\n\n\nconst WIDTH = 400;\nconst HEIGHT = '75%';\n\n\nexport function sizeValue (value, size) {\n    if (typeof(value) === \"string\" && value.indexOf('%') === value.length-1)\n        return round(0.01*parseFloat(value)*size);\n    return +value;\n}\n\n// Internal function for evaluating paper dom size\nexport function getSize (element, options) {\n    var size = {\n        width: options.width,\n        height: options.height\n    };\n\n    if (!size.width) {\n        size.width = getWidth(element);\n        if (size.width)\n            size.widthElement = getWidthElement(element);\n        else\n            size.width = WIDTH;\n    }\n\n    if (!size.height) {\n        size.height = getHeight(element);\n        if (size.height)\n            size.heightElement = getHeightElement(element);\n        else\n            size.height = HEIGHT;\n    }\n\n    // Allow to specify height as a percentage of width\n    size.height = sizeValue(size.height, size.width);\n    return size;\n}\n\n\nexport function getWidth (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementWidth(el);\n}\n\n\nexport function getHeight (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementHeight(el);\n}\n\n\nexport function getWidthElement (element) {\n    return getParentElementRect(element, 'width');\n}\n\n\nexport function getHeightElement (element) {\n    return getParentElementRect(element, 'height');\n}\n\n\nfunction elementWidth (el) {\n    var w = el.getBoundingClientRect()['width'],\n        s = select(el),\n        left = padding(s.style('padding-left')),\n        right = padding(s.style('padding-right'));\n    return w - left - right;\n}\n\n\nfunction elementHeight (el) {\n    var w = el.getBoundingClientRect()['height'],\n        s = select(el),\n        top = padding(s.style('padding-top')),\n        bottom = padding(s.style('padding-bottom'));\n    return w - top - bottom;\n}\n\n\nfunction getParentElementRect (element, key) {\n    let parent = element.node ? element.node() : element,\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        v = parent.getBoundingClientRect()[key];\n        if (v)\n            return parent;\n        parent = parent.parentNode;\n    }\n}\n\n\nfunction padding (value) {\n    if (value && value.substring(value.length-2) == 'px')\n        return +value.substring(0, value.length-2);\n    return 0;\n}\n\n\nexport function boundingBox (size) {\n    var w = size.widthElement ? getWidth(size.widthElement) : size.width,\n        h;\n    if (size.heightPercentage)\n        h = round(w*size.heightPercentage, 0);\n    else\n        h = size.heightElement ? getHeight(size.heightElement) : size.height;\n    if (size.minHeight)\n        h = Math.max(h, size.minHeight);\n    return [round(w), round(h)];\n}\n","import {pop, inBrowser} from 'd3-let';\nimport {select} from 'd3-selection';\nimport {viewDebug} from 'd3-view';\n\nimport createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\nimport {getSize} from '../utils/size';\n\n//\n//  Visual\n//  =============\n//\n//  A Visual is a a container of visual layers and it is\n//  associated with an HTML element\n//\n//  Usually a Visual contains one layer only, however it is possible to\n//  have more than one by combining several layers together. Importantly,\n//  layers in one visual generate HTMLElements which are children of the visual\n//  element and inherit both the width and height.\n//\n//  A visual register itself with the visuals.live array\n//\nexport default createVisual('visual', {\n\n    options: {\n        render: 'svg',\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%',\n        // heightElement - selector for an element from wich to obtain height\n        heightElement: null\n    },\n\n    initialise (element) {\n        if (!element) throw new Error('HTMLElement required by visual group');\n        if (this.visualParent && this.visualParent.visualType !== 'container')\n            throw new Error('Visual parent can be a container only');\n\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            size: {\n                get () {\n                    return [this.width, this.height];\n                }\n            }\n        });\n\n        this.sel.classed('d3-visual', true);\n        // list of layers which define the visual\n        this.layers = [];\n        this.drawCount = 0;\n        visuals.live.push(this);\n        element.__visual__ = this;\n    },\n\n    toString () {\n        return `visual ${this.model.uid}`;\n    },\n\n    // Draw the visual\n    draw() {\n        if (!this.drawCount) {\n            this.drawCount = 1;\n            this.fit();\n        } else {\n            this.drawCount++;\n            this.clear();\n        }\n        visuals.events.call('before-draw', undefined, this);\n        this.layers.forEach(visual => {\n            visual.draw();\n        });\n        visuals.events.call('after-draw', undefined, this);\n    },\n\n    clear () {},\n\n    // Add a new visual to this group\n    addVisual (options) {\n        var type = pop(options, 'type');\n        var VisualClass = visuals.types[type];\n        if (!VisualClass)\n            warn(`Cannot add visual ${options.type}`);\n        else\n            return new VisualClass(this.element, options, this);\n    },\n    //\n    // Fit the root element to the size of the parent element\n    fit () {\n        var size = getSize(this.element.parentNode, this.getModel());\n        this.width = size.width;\n        this.height = size.height;\n        this.sel.style('width', this.width + 'px').style('height', this.height + 'px');\n    },\n\n    resize (size) {\n        if (!size) size = getSize(this.element.parentNode, this.getModel());\n        var currentSize = this.size;\n\n        if (currentSize[0] !== size.width || currentSize[1] !== size.height) {\n            viewDebug(`Resizing \"${this.toString()}\"`);\n            this.width = size.width;\n            this.height = size.height;\n            this.sel.style('width', this.width + 'px').style('height', this.height + 'px');\n            this.draw();\n        }\n    },\n\n    destroy () {\n        var idx = visuals.live.indexOf(this);\n        if (idx > -1) visuals.live.splice(idx, 1);\n    }\n});\n\n\nif (inBrowser) {\n    // DOM observer\n    // Check for changes in the DOM that leads to visual actions\n    const observer = new MutationObserver(visualManager);\n    observer.observe(document.documentElement, {\n        childList: true,\n        subtree: true\n    });\n}\n\n//\n//  Clears visualisation going out of scope\nfunction visualManager (records) {\n    records.forEach(record => {\n        var nodes = record.removedNodes;\n        if (!nodes || !nodes.length) return;  // phantomJs hack\n        nodes.forEach(node => {\n            if (node.nodeName !== '#text') {\n                if (!node.__visual__)\n                    select(node).selectAll('.d3-visual').each(destroy);\n                else\n                    destroy.call(node);\n            }\n        });\n    });\n}\n\n\nfunction destroy () {\n    var viz = this.__visual__;\n    if (viz) {\n        viz.destroy();\n        viewDebug(`Removed \"${viz.toString()}\" from DOM, ${visuals.live.length} live visuals left`);\n    }\n    else warn('d3-visual without __visual__ object');\n}\n","import assign from 'object-assign';\nimport {isFunction} from 'd3-let';\n\nimport createVisual, {visuals} from './base';\nimport Visual from './visual';\n\n//\n//  crateChart\n//\n//  A chart is a drawing of series data in two dimensional\nexport default function (type) {\n    var protos = [{}, vizPrototype, chartPrototype];\n    for (var i=1; i<arguments.length; ++i) protos.push(arguments[i]);\n    return createVisual(type, assign.apply(undefined, protos));\n}\n\n\n//  Viz Prototype\n//  =================\nexport const vizPrototype = {\n\n    initialise (element) {\n        // No visual parent, create the visual\n        var visual = this.visualParent;\n        if (!visual) {\n            this.visualParent = visual = new Visual(element, this.options, null, this.model);\n            this.model = visual.model.$new();\n            this.options = {};\n        } else if (visual.visualType !== 'visual')\n            throw new Error(`visual parent of ${this.visualType} can only be \"visual\"`);\n        visual.layers.push(this);\n    },\n\n    //\n    // paper object for this visualisation\n    paper () {\n        var visual = this.getModel('visual'),\n            paper = this._paper;\n        if (paper && paper.paperType === visual.render) return paper;\n        var PaperType = visuals.papers[visual.render];\n        if (!PaperType) throw new Error(`Unknown paper ${visual.render}`);\n        paper = new PaperType(this);\n        this._paper = paper;\n        return paper;\n    },\n\n    translate (x, y) {\n        if (isFunction(x)) {\n            return function (d) {\n                var xt = x(d) || 0,\n                    yt = y(d) || 0;\n                return `translate(${xt}, ${yt})`;\n            };\n        } else return `translate(${x}, ${y})`;\n    }\n};\n\n\nexport const chartPrototype = {\n\n    //  override draw method\n    draw () {\n        visuals.events.call('before-draw', undefined, this);\n\n        this.getData().then(frame => {\n            if (frame) {\n                this.doDraw(frame);\n                visuals.events.call('after-draw', undefined, this);\n            }\n        });\n    }\n};\n","import assign from 'object-assign';\nimport {select} from 'd3-selection';\n\nimport {visuals} from './base';\n\n\nexport default function createPaper (type, proto) {\n\n    function Paper (viz) {\n        var element = this.initialise(viz);\n        Object.defineProperties(this, {\n            element: {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            paperType: {\n                get () {\n                    return type;\n                }\n            }\n        });\n    }\n\n    Paper.prototype = assign({}, paperPrototype, proto);\n\n    visuals.papers[type] = Paper;\n    return Paper;\n}\n\n\nconst paperPrototype = {\n\n    initialise () {},\n    transition () {},\n    size (box) {\n        this.sel\n            .attr('width', box.width)\n            .attr('height', box.height);\n        return this;\n    },\n\n    group (box, cname) {\n        if (!cname) cname = 'main';\n        var sel = this.sel;\n        sel\n            .selectAll(`.${cname}`)\n            .data([0]).enter()\n            .append('g').classed(cname, true);\n        return sel.select(`.${cname}`);\n    },\n\n    dim (value) {\n        return value;\n    }\n};\n\n\nexport const Svg = createPaper('svg', {\n\n    initialise (viz) {\n        var svg = viz.visualParent.sel.append('svg')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true);\n        return svg.node();\n    }\n});\n","import createVisual from './base';\n\nexport default createVisual('container');\n","import assign from 'object-assign';\nimport {isString, isObject} from 'd3-let';\n\nimport VisualContainer from '../core/container';\n\n//\n//  vizComponent base prototype\n//  =============================\n//\n//  Some common properties and methods for all visualize components\n//\nexport const vizComponent = {\n    props: [\n        'schema',\t    // Schema is a collection of fields to display in the table\n        'datasource',\t// Data source\n        'plugins',      // list of string/objects\n\t],\n\n    render (props, attrs, el) {\n        var self = this,\n            inner = this.select(el).html();\n        //\n        // build\n        return this.getSchema(props.schema, schema => {\n            if (!isObject(schema)) schema = {};\n            return self.build(schema, inner, attrs);\n        });\n    },\n\n    // get the schema from the input schema property\n    getSchema (input, build) {\n        var parent = this.model.visual;\n\n        // allow to specify the schema as an entry of\n        // visuals object in the dashboard schema\n        if (parent && parent !== this.model && isString(input)) {\n            var schema = parent.options.visuals[input];\n            if (schema) input = schema;\n        }\n\n        if (isString(input)) {\n            return this.json(input).then(build);\n        }\n        else return build(input);\n    },\n    //\n    // build the visual component has the schema available\n    build () {}\n};\n//\n//  Dashboard Component\n//  ========================\n//\n//  A collection of visual components arranged according\n//  to a custom layout.\n//\n//  * Dashboard visuals are independent of each other but\n//    interact via the data object\n//  * The Dashboard layout is given by the inner HTML elements\n//  * The configuration is obtained via the schema property which\n//    can be either:\n//      1) an object\n//      2) a url\nexport default assign({}, vizComponent, {\n\n    build (schema, inner, attrs) {\n        var model = this.model;\n        var sel = this.createElement('div');\n        if (attrs.class) sel.attr('class', attrs.class);\n        if (!schema.visuals) schema.visuals = {};\n        model.visual = new VisualContainer(sel.node(), schema, model.visual);\n        return this.mountInner(sel, inner);\n    }\n});\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\n\nimport {vizComponent} from './dashboard';\nimport Visual from '../core/visual';\n\n\n//\n//  Visual component\n//  ======================\n//\n//  An element containing a visualization\nexport default assign({}, vizComponent, {\n\n    build (schema) {\n        var sel = this.createElement('div'),\n            type = schema.type || 'visual',\n            model = this.model,\n            options = {};\n\n        if (type === 'visual')\n            options = schema;\n        else\n            options.visual = pop(schema, 'visual') || {};\n\n        model.visual = new Visual(sel.node(), options, model.visual);\n        if (type !== 'visual') model.visual.addVisual(schema);\n        return sel;\n    },\n\n    // once the element is mounted in the dom, draw the visual\n    mounted () {\n        this.model.visual.draw();\n    }\n});\n","import {isoParse} from 'd3-time-format';\n\nimport locale from './locale';\n\n\nexport const parsers = {\n    date: isoParse,\n\n    string (value) {\n        return ''+value;\n    }\n};\n\n// formatters\nexport const formatters = {\n\n    number (value) {\n        return value;\n    },\n\n    date (value) {\n        return locale.formatDate(value);\n    },\n\n    boolean (value) {\n        return value;\n    }\n};\n","import {isObject, isArray} from 'd3-let';\n\nimport {formatters, parsers} from '../data/formatters';\n\n\n//\n// Create table columns from schema\nexport default function (schema) {\n    var columns = [];\n    let col;\n\n\tif (!schema) return columns;\n\n    if (isArray(schema))\n        schema = {properties: schema};\n\n    if (isObject(schema.properties)) {\n        for (let key in schema.properties) {\n            col = schema.properties[key];\n            if (isObject(col)) {\n                if (!col.name) col.name = key;\n                columns.push(col);\n            }\n        }\n    } else\n        Array.prototype.push.apply(columns, schema.properties);\n\n    return columns.map((col) => {\n        if (!isObject(col)) col = {name: col};\n        if (!col.label) col.label = col.name;\n        if (!col.hidden) col.hidden = false;\n        if (!col.$parse) col.$parse = parsers[col.type] || parsers.string;\n        if (!col.$html) col.$html = formatters[col.type] || $html;\n        return col;\n    });\n}\n\n\nfunction $html (value) {\n    return value;\n}\n","//\n//  dataStore integration with visuals\nimport {isString, pop} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport {visuals} from '../core/base';\nimport DataStore from '../data/store';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\n//  getData method\n//  =====================\n//\n//  Inject a method for easily retrieving data from the datastore\nvizPrototype.getData = function () {\n    var name = this.model.data;\n    if (!name) {\n        warn('Visual without data name, cannot get data');\n        return resolvedPromise();\n    }\n    return this.dataStore.getData(name);\n};\n\n\nvisuals.events.on('before-init.data', viz => {\n    if (!viz.isViz) return;\n    // remove data from options\n    viz.data = pop(viz.options, 'data');\n});\n\n\nvisuals.events.on('after-init.data', viz => {\n    Object.defineProperties(viz, {\n        dataStore : {\n            get () {\n                if (viz.visualParent) return viz.visualParent.dataStore;\n                return viz.model.dataStore;\n            }\n        },\n    });\n    if (viz.isViz) setupLayer(viz);\n    else setupVisual(viz);\n});\n\n\nfunction setupVisual (visual) {\n    var store = visual.dataStore,\n        data = pop(visual.options, 'data');\n    //\n    if (!store) {\n        store = new DataStore(visual.model);\n        visual.model.dataStore = store;\n    }\n    store.addSources(data);\n}\n\n\nfunction setupLayer (layer) {\n    var store = layer.dataStore,\n        data = pop(layer, 'data');\n    if (!data) return;\n    if (isString(data)) data = {source: data};\n    if (!data.name) data.name = layer.model.uid;\n    data = store.addSources(data);\n    if (data)\n        layer.model.$set('data', data.name);\n    else\n        warn(`Could not create data source ${data.name}`);\n}\n","import {inBrowser} from 'd3-let';\nimport {viewDebounce} from 'd3-view';\nimport {select} from 'd3-selection';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nif (!globalOptions.resizeDelay)\n    globalOptions.resizeDelay = 200;\n\n\nif (inBrowser) {\n    var resize = viewDebounce(() => {\n        visuals.live.forEach(p => p.resize());\n    }, globalOptions.resizeDelay);\n\n    select(window).on('resize.visuals', resize);\n}\n","// Title plot annotation\nimport {isString} from 'd3-let';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.title = {\n    text: null,\n    fontSize: '10px'\n};\n\n\nvisuals.events.on('after-init.title', viz => {\n    var title = viz.options.title;\n    if (isString(title)) viz.options.title = {text: title};\n});\n","import {isObject} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst KEYS = ['top', 'bottom', 'left', 'right'];\nconst LEFTRIGHT = ['left', 'right'];\n\n\n// margin for visual marks\nglobalOptions.margin = {\n    top: 20,\n    bottom: 20,\n    left: 20,\n    right: 20\n};\n// padding for the visual paper\nglobalOptions.padding = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n};\n\n\n//\n//  Bounding box for a viz\n//  ==========================\nvizPrototype.boundingBox = function () {\n    var width = this.visualParent.width,\n        height = this.visualParent.height,\n        margin = calculate(this.getModel('margin'), width, height),\n        padding = calculate(this.getModel('padding'), width, height),\n        total = KEYS.reduce((o, key) => {\n            o[key] = margin[key] + padding[key];\n            return o;\n        }, {});\n    return {\n        width: width,\n        height: height,\n        margin: margin,\n        padding: margin,\n        total: total,\n        innerWidth: width - total.left - total.right,\n        innerHeight: height - total.top - total.bottom\n    };\n};\n\n\nvisuals.events.on('after-init.margin', viz => {\n    viz.margin = margins('margin', viz);\n    viz.padding = margins('padding', viz);\n});\n\n\nfunction margins (name, viz) {\n    var value = viz.options[name];\n\n    if (value !== undefined && !isObject(value)) {\n        var v = value || 0;\n        viz.options[name] = {\n            left: v,\n            right: v,\n            top: v,\n            bottom: v\n        };\n    }\n}\n\n\nfunction calculate (model, width, height) {\n    return KEYS.reduce((o, key) => {\n        o[key] = sizeValue(model[key], LEFTRIGHT.indexOf(key) > -1 ? width : height);\n        return o;\n    }, {});\n}\n","import {map} from 'd3-collection';\nimport {\n    scaleSequential,\n    interpolateViridis, interpolateInferno, interpolateMagma,\n    interpolatePlasma, interpolateWarm, interpolateCool,\n    interpolateRainbow, interpolateCubehelixDefault\n} from 'd3-scale';\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\nexport const colorScales = map();\n\n\nglobalOptions.color = {\n    scale: 'cool',\n    stroke: '#333',\n    strokeOpacity: 1,\n    fillOpacity: 1\n};\n\ncolorScales.set('viridis', () =>  scaleSequential(interpolateViridis));\ncolorScales.set('inferno', () =>  scaleSequential(interpolateInferno));\ncolorScales.set('magma', () =>  scaleSequential(interpolateMagma));\ncolorScales.set('plasma', () =>  scaleSequential(interpolatePlasma));\ncolorScales.set('warm', () =>  scaleSequential(interpolateWarm));\ncolorScales.set('cool', () =>  scaleSequential(interpolateCool));\ncolorScales.set('rainbow', () =>  scaleSequential(interpolateRainbow));\ncolorScales.set('cubehelix', () =>  scaleSequential(interpolateCubehelixDefault));\n\n//\n//  Color scale method\n//  ==========================\nvizPrototype.colorScale = function () {\n    var color = this.getModel('color'),\n        scale = colorScales.get(color.scale);\n    if (!scale) throw new Error(`Unknown scale ${color.scale}`);\n    return scale();\n};\n","//\n// Use clusterize.js to render the table\nexport default function (table, options) {\n    return table.require('clusterize.js@0.17.6').then(Clusterize => clusterize(Clusterize, table, options));\n}\n\n\nfunction clusterize(Clusterize) {\n    var cl = new Clusterize();\n    return cl;\n}\n","export default function (table) {\n    return table;\n}\n","//\n//  bootstrap styling for tabular component\n//  ==========================================\n//\nimport assign from 'object-assign';\n\n\nconst defaults = {\n    over: true,\n    small: true,\n    bordered: true,\n    loadingClass: 'table-info',\n    loadingTextClass: 'text-center'\n};\n\n\nexport default function (table, options) {\n    var style = table.model.style;\n    style.$update(assign({}, defaults, options));\n\n    style.tableClass = 'table table-responsive';\n    if (style.striped) style.tableClass += ' table-striped';\n    if (style.over) style.tableClass += ' table-hover';\n    if (style.bordered) style.tableClass += ' table-bordered';\n    if (style.small) style.tableClass += ' table-sm';\n}\n","//\n//  Plugins for visuals and tabular\n//\n// visual plugins\nimport './data';\nimport './responsive';\nimport './title';\nimport './margin';\nimport './color';\n//\n//  This module depends on core but not on components\nimport clusterize from './clusterize';\nimport paginate from './paginate';\nimport bootstrap from './bootstrap';\n\n// plugins add functionalities to a d3 table\n// A plugin is a function accepting two parameters:\n//  * the table component\n//  * object with configuration parameters\nexport default {\n    bootstrap,\n    clusterize,\n    paginate\n};\n","// import {timeout} from 'd3-timer';\nimport assign from 'object-assign';\nimport {isString, isArray, isPromise} from 'd3-let';\n\nimport warn from '../utils/warn';\nimport createColumns from '../utils/columns';\nimport tablePlugins from '../plugins/index';\nimport {vizComponent} from './dashboard';\n\n\nconst tableTpl = `<table d3-class=\"[style.tableClass, loadingData ? 'loading' : null]\">\n<thead d3-class=\"style.headerClass\">\n<tr d3-class=\"style.headerRowClass\">\n  <th d3-for=\"col in columns\"\n        d3-html=\"col.label\"\n        d3-if=\"!col.hidden\">\n  </th>\n</tr>\n<tr d3-if=\"loadingData\" d3-class=\"style.loadingClass\">\n    <td d3-attr-colspan=\"columns.length\">\n        <p d3-class=\"style.loadingTextClass\">loading data</p>\n    </td>\n</tr>\n</thead>\n<tbody></tbody>\n</table>`;\n\n\nexport default assign({}, vizComponent, {\n\n\tmodel () {\n        return {\n            header: true,            // show header\n            columns: [],             // table columns\n            loadingData: false,\n            style: {\n                tableClass: null,\n                headerClass: null,\n                headerRowClass: null,\n                loadingClass: 'loading',\n                loadingTextClass: null\n            }\n        };\n\t},\n\n\tbuild (schema) {\n\t\tvar self = this,\n            model = this.model,\n            plugins = schema.plugins || [];\n        // model.allData = crossfilter([]);\n        this.records = {};\n        this.data = [];\n        this.template = tableTpl;\n\n\t\tmodel.columns = createColumns(schema);\n\t\t// if (data.dataurl) model.dataLoader = new DataLoader(data.dataurl);\n\n        if (!isArray(plugins)) {\n            warn('plugins should be an array');\n        } else {\n            var promises = [];\n            let promise;\n            plugins.forEach(plugin => {\n                if (isString(plugin)) plugin = {name: plugin};\n                if (!tablePlugins[plugin.name])\n                    warn(`Unknown table plugin ${plugin.name}`);\n                else {\n                    promise = tablePlugins[plugin.name](self, plugin);\n                    if (isPromise(promise)) promises.push(promise);\n                }\n            });\n            if (promises.length)\n                 return Promise.all(promises).then(() => self.viewElement(self.template));\n        }\n\n\t\treturn this.viewElement(this.template);\n\t},\n\n\tmounted () {\n        var vm = this,\n            model = this.model;\n\t\tif (model.dataLoader) {\n\t\t\tvar p = model.dataLoader.load(model.columns);\n            if (p) {\n                model.loadingData = true;\n                p.then((data) => {\n                    // var allData = model.allData;\n                    model.loadingData = false;\n                    addData(vm, data);\n                }, (err) => {\n                    model.loadingData = false;\n                    return err;\n                });\n            }\n        }\n\t}\n});\n\n// new data to include in the table\nfunction addData (vm, newData) {\n    var records = vm.records,\n        data = vm.data,\n        model = vm.model,\n        delayData = newData;\n\n    let record, value;\n\n    newData = delayData.splice(0, 100);\n\n    newData.forEach((d) => {\n        if (d.id) {\n            record = d.id ? records[d.id] : null;\n            if (record)\n                d = assign(record, d);\n            else {\n                data.push(d);\n                records[d.id] = d;\n            }\n        } else\n            data.push(d);\n        model.columns.forEach((col) => {\n            d[col.name] = col.$parse(d[col.name]);\n        });\n    });\n\n    //if (delayData.length)\n    //    timeout(() => addData(vm, delayData));\n\n    var rows = vm.sel.select('tbody')\n                .selectAll('tr').data(data);\n\n    rows\n        .enter()\n            .append('tr')\n            .attr('scope', 'row')\n            .selectAll('td')\n            .data(model.columns)\n            .enter()\n                .append('td')\n                .style('display', (col) => {\n                    return col.hidden ? 'none' : null;\n                })\n                .html(function (col) {\n                    record = this.parentNode.__data__;\n                    value = record[col.name];\n                    return col.$html(value === undefined ? '' : value);\n                });\n}\n","//\n//  d3-view components\n//  ======================\n//\n//  d3-view plugin for visualization components\n//\nimport dashboard from './dashboard';\nimport visual from './visual';\nimport tabular from './tabular';\nimport tabularPlugins from '../plugins/index';\n\n\n// Visual components plugin\nexport default {\n    tabularPlugins,\n\n    install (vm) {\n        vm.addComponent('dashboard', dashboard);\n        vm.addComponent('visual', visual);\n        vm.addComponent('tabular', tabular);\n    }\n\n};\n","export default function (x) {\n    return function constant() {\n        return x;\n    };\n}\n","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function (d) {\n    return d;\n}\n","import constant from \"../utils/constant\";\nimport descending from \"../utils/descending\";\nimport identity from \"../utils/identity\";\n\n//\n//  Pyramid Shape generator\n//  ============================\nexport default function () {\n    var value = identity,\n        pad = constant(0),\n        height = 1,\n        base = 1;\n\n    function pyramid (data) {\n        let i, j, k, points, fraction,\n            hi, x, y, v0, ph, pj;\n        var n = data.length,\n            r = 0.5*base/height,\n            polygons = new Array(n),\n            index = new Array(n);\n\n        for (i=0; i<n; ++i) {\n            polygons[index[i] = i] = +value(data[i], i, data);\n        }\n\n        // Sort the polygons\n        index.sort((i, j) => {return descending(polygons[i], polygons[j]);});\n\n        // Compute the polygons! They are stored in the original data's order.\n        v0 = polygons[index[0]];\n        hi = null;\n\n        for (i=n-1; i>=0; --i) {\n            points = [];\n            if (hi === null)\n                points.push([0, 0]);\n            else {\n                y = hi + ph;\n                x = y*r;\n                points.push([-x, y]);\n                points.push([x, y]);\n            }\n            j = index[i];\n            k = n - i - 1;\n            fraction = polygons[j]/v0;\n            pj = Math.sqrt(fraction);\n            hi = height*pj;\n            ph = i ? pad(pj, k) : 0;\n            y = hi - ph;\n            x = y*r;\n            points.push([x, y]);\n            points.push([-x, y]);\n            polygons[j] = {\n                index: k,\n                value: polygons[j],\n                fraction: fraction,\n                points: points\n            };\n        }\n        return polygons;\n    }\n\n    pyramid.value = function(_) {\n        return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pyramid) : value;\n    };\n\n    pyramid.base = function (_) {\n        return arguments.length ? (base = _, pyramid) : base;\n    };\n\n    pyramid.height = function (_) {\n        return arguments.length ? (height = _, pyramid) : height;\n    };\n\n    pyramid.pad = function(_) {\n        return arguments.length ? (pad = typeof _ === \"function\" ? _ : constant(+_), pyramid) : pad;\n    };\n\n    return pyramid;\n}\n","import createChart from '../core/chart';\n\n//\n//  Bar Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('barchart', {\n\n    options: {\n        orientation: 'vertical',\n        // stack multiple y series?\n        stack: false\n    },\n\n    doDraw () {\n\n    }\n});\n","import * as d3_shape from 'd3-shape';\nimport * as d3_scale from 'd3-scale';\nimport {extent} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport warn from '../utils/warn';\nimport accessor from '../utils/accessor';\n\nexport const lineDrawing = {\n\n    fill (meta) {\n        var cscale = this.colorScale().domain([0, meta.length-1]);\n\n        function fill (d, index) {\n            return cscale(index);\n        }\n\n        fill.scale = cscale;\n\n        return fill;\n    },\n\n    curve (name) {\n        var obj = d3_shape[this.curveName(name)];\n        if (!obj) {\n            warn(`Could not locate curve type \"${name}\"`);\n            name = this.curveName('cardinalOpen');\n            obj = d3_shape[name];\n        }\n        return obj;\n    },\n\n    curveName (name) {\n        if (name.substring(0, 5) !== 'curve')\n            name = 'curve' + name[0].toUpperCase() + name.substring(1);\n        return name;\n    }\n};\n\n//\n//  Line Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('linechart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'cardinalOpen',\n        x: 'x',\n        y: 'y'\n    },\n\n    doDraw (frame) {\n        var self = this,\n            range = this.newRange(),\n            model = this.getModel(),\n            color = this.getModel('color'),\n            x = accessor(model.x),\n            y = accessor(model.y),\n            data = frame.series.values(),\n            meta = frame.series.keys().map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            }),\n            box = this.boundingBox(),\n            paper = this.paper(),\n            lines = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.line').data(data),\n            strokeColor = this.fill(meta),\n            //merge = paper.transition('update'),\n            line = d3_shape.line()\n                .x(this.x(box, range.x))\n                .y(this.y(box, range.y))\n                .curve(this.curve(model.curve));\n\n        lines\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', model.lineWidth)\n            .merge(lines)\n                //.transition(merge)\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', line);\n\n        lines\n            .exit()\n            .remove();\n    },\n\n    x (box, ranges) {\n        var model = this.getModel(),\n            scale = d3_scale.scaleLinear()\n                .domain(extent(ranges))\n                .range([0, box.innerWidth]);\n        return function (d) {\n            return scale(d[model.x]);\n        };\n    },\n\n    y (box, ranges) {\n        var model = this.getModel(),\n            scale = d3_scale.scaleLinear()\n                .domain(extent(ranges))\n                .range([box.innerHeight, 0]);\n        return function (d) {\n            return scale(d[model.y]);\n        };\n    },\n\n    range (data, x, y, agg) {\n        var range = {\n            x: extent(data, x),\n            y: extent(data, y)\n        };\n        if (agg) {\n            Array.prototype.push.apply(agg.x, range.x);\n            Array.prototype.push.apply(agg.y, range.y);\n        }\n    },\n\n    newRange () {\n        return {\n            x: [],\n            y: []\n        };\n    }\n});\n","import {pie, arc} from 'd3-shape';\n\nimport createChart from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\nconst pi = Math.PI;\nconst rad = pi/180;\n\n\nexport const proportional = {\n\n    fill (data) {\n        var cscale = this.colorScale().domain([0, data.length-1]);\n\n        function fill (d) {\n            return cscale(d.index);\n        }\n\n        fill.scale = cscale;\n\n        return fill;\n    },\n\n    proportionalData (frame, field) {\n        return frame.dimension(field).top(Infinity);\n    }\n};\n\n//\n//  Pie Chart\n//  =============\n//\nexport default createChart('piechart', proportional, {\n\n    options: {\n        // The data values from this field will be encoded as angular spans.\n        // If omitted, all pie slices will have equal spans\n        field: 'data',\n        startAngle: 0,\n        endAngle: 360,\n        sort: false,\n        innerRadius: 0,\n        padAngle: 0,\n        cornerRadius: 0,\n        //\n        color: null,\n        lineWidth: 1,\n        colorOpacity: 1,\n        fillOpacity: 1\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            field = model.field,\n            box = this.boundingBox(),\n            outerRadius = Math.min(box.innerWidth, box.innerHeight)/2,\n            innerRadius = sizeValue(model.innerRadius, outerRadius),\n            angles = pie()\n                .padAngle(rad*model.padAngle)\n                .startAngle(rad*model.startAngle)\n                .endAngle(rad*model.endAngle)\n                .value(d => d[field]),\n            arcs = arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius)\n                .cornerRadius(model.cornerRadius),\n            paper = this.paper(),\n            //update = paper.transition('update'),\n            data = angles(this.proportionalData(frame, field)),\n            fill = this.fill(data),\n            slices = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                .selectAll('.slice').data(data);\n\n        slices\n            .enter()\n                .append('path')\n                .attr('class', 'slice')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n            .merge(slices)\n                //.transition(update)\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', arcs)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        slices.exit().remove();\n    }\n});\n","//\n//  Custom Symbol type\n//  =====================\n//\n//  Draw a polygon given an array of points\n//  This can be used as type in a d3-shape symbol\nexport default function (points) {\n\n    return {\n        draw (context) {\n            points.forEach((point, idx) => {\n                if (!idx) context.moveTo(point[0], point[1]);\n                else context.lineTo(point[0], point[1]);\n            });\n            context.closePath();\n        }\n    };\n}\n","import {symbol} from 'd3-shape';\n\nimport createChart from '../core/chart';\nimport pyramid from '../transforms/pyramid';\nimport polygon from '../utils/polygon';\nimport {proportional} from './pie';\nimport {sizeValue} from '../utils/size';\n\n\nexport default createChart('pyramidchart', proportional, {\n\n    options: {\n        field: 'data',\n        pad: 0,\n        lineWidth: 1\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            field = model.field,\n            color = this.getModel('color'),\n            box = this.boundingBox(),\n            pad = sizeValue(model.pad, Math.min(box.innerWidth, box.innerHeight)),\n            polygons = pyramid()\n                .base(box.innerWidth)\n                .height(box.innerHeight)\n                .pad(pad)\n                .value(d => d[field]),\n            data = polygons(this.proportionalData(frame, field)),\n            marks = symbol().type(d => polygon(d.points)).size(1),\n            fill = this.fill(data),\n            paper = this.paper(),\n            segments = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top))\n                .selectAll('.segment').data(data);\n\n        segments\n            .enter()\n                .append('path')\n                .attr('class', 'segment')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n            .merge(segments)\n                //.transition(update)\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', marks)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        segments.exit().remove();\n    }\n\n});\n","import createChart from '../core/chart';\n\n//\n//  Treemap\n//  =============\n//\nexport default createChart('treemap', {\n    requires: ['d3-treemap']\n\n});\n"],"names":["defaults","size","options","assign","t","range","S","sigma","drift","data","x","y","norm","randomNormal","dx","i","length","config","_data","isArray","isObject","resolvedPromise","asFrame","prefix","msg","logger","warn","schemes","value","isString","indexOf","split","isUrl","url","fetch","viewProviders","self","then","parse","response","ct","headers","get","text","csvParse","json","source","store","frame","Promise","all","map","getData","frames","mergeFrames","expression","viewExpression","model","eval","field","d","DataFrame","serie","defineProperties","dimensions","series","prototype","_inner","cf","crossfilter","name","keepExisting","arguments","current","dispose","accessor","dimension","mapper","new","filter","group","sortby","groupby","timeseries","dim","groups","top","Infinity","newframe","tmp","forEach","filterExact","key","set","globalOptions","dateFormat","converters","entry","utcParse","parseFloat","fields","converter","mapfields","mappers","each","type","push","applyTransforms","transforms","ts","transform","dataEvents","dispatch","dataSourcePrototype","transformStore","constructor","Object","DataSource","sources","values","cfg","getConfig","initDataSource","dataSource","dataName","pop","initialise","addTransforms","call","undefined","dataSources","add","array","remote","composite","DataStore","dataCount","create","p","remove","ds","cachedFrame","Error","def","timeFormat","symbol","locales","source1","source2","load","number","locale","time","formatDate","date","formatDateTime","dateTime","CONTAINERS","visuals","visualPrototype","el","select","visualType","visualParent","getModel","$child","$new","$update","viewBase","proto","opts","Visual","element","parent","viewModel","events","types","n","Math","round","pow","WIDTH","HEIGHT","sizeValue","getSize","width","height","getWidth","widthElement","getWidthElement","getHeight","heightElement","getHeightElement","getParentElementRect","elementWidth","elementHeight","w","getBoundingClientRect","s","left","padding","style","right","bottom","node","v","tagName","parentNode","substring","createVisual","sel","classed","layers","drawCount","live","__visual__","uid","fit","clear","draw","VisualClass","currentSize","toString","idx","splice","inBrowser","observer","MutationObserver","visualManager","observe","document","documentElement","records","nodes","record","removedNodes","nodeName","selectAll","destroy","viz","protos","vizPrototype","chartPrototype","apply","visual","paper","_paper","paperType","render","PaperType","papers","isFunction","xt","yt","doDraw","createPaper","Paper","paperPrototype","box","attr","cname","enter","append","Svg","svg","vizComponent","props","attrs","inner","html","getSchema","schema","build","input","createElement","class","VisualContainer","mountInner","addVisual","parsers","isoParse","formatters","columns","col","properties","Array","label","hidden","$parse","string","$html","dataStore","on","isViz","setupLayer","setupVisual","addSources","layer","$set","resizeDelay","resize","viewDebounce","window","title","KEYS","LEFTRIGHT","margin","boundingBox","calculate","total","reduce","o","margins","colorScales","color","scaleSequential","interpolateViridis","interpolateInferno","interpolateMagma","interpolatePlasma","interpolateWarm","interpolateCool","interpolateRainbow","interpolateCubehelixDefault","colorScale","scale","table","require","clusterize","Clusterize","cl","tableClass","striped","over","bordered","small","tableTpl","plugins","template","createColumns","promises","promise","plugin","tablePlugins","isPromise","viewElement","vm","dataLoader","loadingData","err","addData","newData","delayData","id","rows","__data__","addComponent","dashboard","tabular","constant","a","b","NaN","identity","pad","base","pyramid","j","k","points","fraction","hi","v0","ph","pj","r","polygons","index","sort","descending","sqrt","_","createChart","lineDrawing","meta","cscale","domain","fill","obj","d3_shape","curveName","toUpperCase","newRange","keys","lines","translate","strokeColor","curve","lineWidth","merge","strokeOpacity","line","exit","ranges","d3_scale","extent","innerWidth","innerHeight","agg","pi","PI","rad","proportional","outerRadius","min","innerRadius","angles","pie","padAngle","startAngle","endAngle","arcs","arc","cornerRadius","proportionalData","slices","stroke","fillOpacity","context","point","moveTo","lineTo","closePath","marks","polygon","segments"],"mappings":"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"}