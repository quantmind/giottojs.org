{"version":3,"file":"d3-visualize.js","sources":["../src/utils/randompath.js","../src/data/array.js","../src/data/warn.js","../src/utils/isurl.js","../src/data/remote.js","../src/data/composite.js","../src/data/expression.js","../src/data/sources.js","../src/transforms/groupby.js","../src/transforms/index.js","../src/data/store.js","../src/data/locale.js","../src/core/options.js","../src/core/base.js","../src/utils/warn.js","../src/utils/round.js","../src/utils/size.js","../src/core/visual.js","../src/core/chart.js","../src/core/paper.js","../src/core/container.js","../src/components/dashboard.js","../src/components/visual.js","../src/data/formatters.js","../src/utils/columns.js","../src/plugins/data.js","../src/plugins/responsive.js","../src/plugins/title.js","../src/plugins/margin.js","../src/plugins/color.js","../src/plugins/clusterize.js","../src/plugins/paginate.js","../src/plugins/bootstrap.js","../src/plugins/index.js","../src/components/tabular.js","../src/components/index.js","../src/utils/constant.js","../src/utils/descending.js","../src/utils/identity.js","../src/transforms/pyramid.js","../src/charts/bar.js","../src/charts/line.js","../src/charts/pie.js","../src/utils/polygon.js","../src/charts/pyramid.js","../src/charts/treemap.js"],"sourcesContent":["import assign from 'object-assign';\nimport {range} from 'd3-array';\nimport {randomNormal} from 'd3-random';\n\n\nconst defaults = {\n    sigma: 0.1,\n    drift: 0\n};\n\n\nexport default function (size, options) {\n    options = assign({}, defaults, options);\n    var t = range(0, +size, 1),\n        S = options.sigma,\n        drift = options.drift,\n        data = [{x: 0, y: 0}],\n        norm = randomNormal(0, 1),\n        dx;\n\n    for (var i = 1; i < t.length; i++) {\n        dx = drift + S * norm();\n        data[i] = {\n            x: i,\n            y: data[i - 1].y + dx\n        };\n    }\n\n    return data;\n}\n","import {isArray, isObject} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\n//\n//  Array DataSource\n//  ====================\n//\n//  Data is given in an array, pkain & simple\nexport default {\n\n    initialise (config) {\n        this._data = config.data;\n    },\n\n    getConfig (config) {\n        if (isArray(config)) return {data: config};\n        else if (isObject(config) && isArray(config.data)) return config;\n    },\n\n    getData () {\n        return resolvedPromise(this.asFrame(this._data));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-data-source]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import {isString} from 'd3-let';\n\n\nconst schemes = ['http', 'https', 'ws', 'wss'];\n\n\nexport default function (value) {\n    return isString(value) && schemes.indexOf(value.split('://')[0]) > -1;\n}\n","import {csvParse} from 'd3-dsv';\nimport {isObject} from 'd3-let';\nimport {viewProviders} from 'd3-view';\n\nimport warn from './warn';\nimport isUrl from '../utils/isurl';\n\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isUrl(config)) return {url: config};\n        else if (isObject(config) && config.url)\n            return config;\n    },\n\n    getData () {\n        var fetch = viewProviders.fetch;\n        if (!fetch) {\n            warn('fetch provider not available, cannot submit');\n            return;\n        }\n        return fetch(this.url).then(parse);\n    }\n};\n\n\nfunction parse (response) {\n    var ct = (response.headers.get('content-type') || '').split(';')[0];\n    if (ct === 'text/plain' || ct === 'text/csv')\n        return response.text().then(csvParse);\n    else if (ct === 'application/json')\n        return response.json();\n    else {\n        warn(`Cannot load content type '${ct}'`);\n        return [];\n    }\n}\n","import {isArray, isObject} from 'd3-let';\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isObject(config) && config.source) {\n            if (!isArray(config.source)) config.source = [config.source];\n            return config;\n        }\n    },\n\n    getData () {\n        var store = this.store;\n        return Promise.all(this.source.map(source => {\n            return store.getData(source);\n        })).then(frames => {\n            if (frames.length === 1) return frames[0];\n            return frames[0];\n        });\n    }\n};\n","import {isObject} from 'd3-let';\nimport {viewExpression} from 'd3-view';\nimport {resolvedPromise} from 'd3-view';\n\n\nexport default {\n\n    initialise (config) {\n        this.expression = viewExpression(config.expression);\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.expression)\n            return config;\n    },\n\n    getData () {\n        var self = this,\n            model = this.store.model;\n        return resolvedPromise(this.expression.eval(model)).then((data) => self.asFrame(data));\n    }\n};\n","import assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {pop} from 'd3-let';\nimport crossfilter from 'crossfilter';\n\n\nconst dataEvents = dispatch('init', 'data');\n\n\n//\n//  DataSource prototype\n//  ======================\nconst dataSourcePrototype = {\n\n    // get the config object-assign// This method is used by the prototype\n    // to check if the config object is a valid one\n    getConfig () {\n\n    },\n\n    // initialise the data source with a config object\n    initialise (config) {\n        assign(this, config);\n    },\n\n    getData () {},\n\n    //\n    // given a data object returns a Cross filter object\n    asFrame (data) {\n        data = data.map(entry => {\n            if (entry.constructor !== Object) entry = {data: entry};\n            return entry;\n        });\n        return crossfilter(data);\n    }\n};\n\n\n// DataSource container\nexport default assign(map(), {\n    events: dataEvents,\n\n    add (type, source) {\n\n        // DataSource constructor\n        function DataSource (config, store) {\n            initDataSource(this, type, config, store);\n        }\n\n        DataSource.prototype = assign({}, dataSourcePrototype, source);\n\n        this.set(type, DataSource);\n        return DataSource;\n    },\n\n    // Create a new DataSource\n    create (config, store) {\n        var sources = this.values(),\n            cfg;\n        for (var i=0; i<sources.length; ++i) {\n            cfg = sources[i].prototype.getConfig(config);\n            if (cfg) return new sources[i](cfg, store);\n        }\n    }\n});\n\n\nfunction initDataSource(dataSource, type, config, store) {\n\n    var name = store.dataName(pop(config, 'name')),\n        cf = crossfilter();\n\n    // store.natural = cf.dimension(d => d._id);\n\n    Object.defineProperties(dataSource, {\n        cf: {\n            get () {\n                return cf;\n            }\n        },\n        name: {\n            get () {\n                return name;\n            }\n        },\n        store: {\n            get () {\n                return store;\n            }\n        },\n        type: {\n            get () {\n                return type;\n            }\n        },\n        config: {\n            get () {\n                return config;\n            }\n        }\n    });\n\n    dataSource.initialise(config);\n    store.sources.set(name, dataSource);\n    dataEvents.call('init', undefined, dataSource);\n}\n","//\n// Create a groupby transform from a config object\nexport default function (config) {\n    return groupby;\n\n    function groupby (series) {\n        return series.groupby(config.field);\n    }\n}\n","// Collection of transforms\nimport groupby from './groupby';\n\n//\n//  transforms Store\nexport default {\n    groupby\n};\n\n\n// Apply data transforms to a series\nexport function applyTransforms (series, transforms) {\n    let ts;\n    if (!transforms) return series;\n    transforms.forEach(transform => {\n        ts = transform(series);\n        series = ts ? ts : series;\n    });\n    return series;\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport array from './array';\nimport remote from './remote';\nimport composite from './composite';\nimport expression from './expression';\nimport dataSources from './sources';\nimport transformStore from '../transforms/index';\n\n\ndataSources.add('array', array);\ndataSources.add('remote', remote);\ndataSources.add('composite', composite);\ndataSources.add('expression', expression);\n\n//\n//  DataStore\n//  ==============\n//\n//  Map names to datasets\n//  Individual data sets are assumed to contain a collection of records\n//  (or “rows”), which may contain any number of named data\n//  attributes (fields, or “columns”).\n//  Records are modeled using standard JavaScript objects.\nexport default function DataStore(model) {\n    var sources = map();\n\n    Object.defineProperties(this, {\n        sources: {\n            get () {\n                return sources;\n            }\n        }\n    });\n\n    // transforms function\n    this.transforms = assign({}, transformStore);\n    this.dataCount = 0;\n    this.model = model;\n}\n\n\nDataStore.prototype = {\n    size () {\n        return this.sources.size();\n    },\n\n    // Add a new serie from a data source\n    addSources (config) {\n        //\n        // data is a string, it must be already registered with store\n        if (isString(config)) config = {source: config};\n\n        if (isArray(config)) {\n            var self = this;\n            return config.map(cfg => {\n                return dataSources.create(cfg, self);\n            });\n        } else if (config) {\n            return dataSources.create(config, this);\n        }\n    },\n\n    addTransforms (transforms) {\n        assign(this.transforms, transforms);\n    },\n\n    // set, get or remove a data source\n    source (name, source) {\n        if (arguments.length === 1) return this.sources.get(name);\n        if (source === null) {\n            var p = this.sources.get(name);\n            this.sources.remove(name);\n            return p;\n        }\n        this.sources.set(name, source);\n        return this;\n    },\n\n    clearCache () {\n        this.sources.each(ds => {\n            delete ds.cachedFrame;\n        });\n    },\n\n    // get data from a source\n    getData (source) {\n        var ds = this.sources.get(source);\n        if (!ds) throw new Error(`Data source ${source} not available`);\n        if (ds.cachedFrame) return resolvedPromise(ds.cachedFrame);\n        return ds.getData().then(frame => {\n            ds.cachedFrame = frame;\n            return frame;\n        });\n    },\n\n    dataName (name) {\n        this.dataCount++;\n        if (name) return '' + name;\n        var def = this.source('default');\n        if (!def) return 'default';\n        return `source${this.dataCount}`;\n    }\n};\n","// utility to load and set locale\nimport {formatDefaultLocale} from 'd3-format';\nimport {timeFormatDefaultLocale, timeFormat} from 'd3-time-format';\n\nimport dataSources from './sources';\n\n//\n// manage locale\nexport default {\n    formatDate: timeFormat('%d/%m/%Y'),\n\n    formatDateTime: timeFormat('%a %e %b %X %Y'),\n\n    load (symbol) {\n        var locales = this,\n            source1 = dataSources.create(`https://unpkg.com/d3-format/locale/${symbol}.json`),\n            source2 = dataSources.create(`https://unpkg.com/d3-time-format/locale/${symbol}.json`);\n\n        return Promise.all([\n            source1.load().then(\n                locale => {\n                    locales.symbol = symbol;\n                    locales.number = locale;\n                    formatDefaultLocale(locale);\n                }\n            ),\n            source2.load().then(\n                locale => {\n                    locales.time = locale;\n                    locales.formatDate = timeFormat(locale.date);\n                    locales.formatDateTime = timeFormat(locale.dateTime);\n                    timeFormatDefaultLocale(locale);\n                }\n            )\n        ]);\n    }\n};\n","//\n//  Global options for visuals\n//  ============================\n//\nexport default {\n    // visual data source\n    dataSource: null,\n    //\n    size: {\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    }\n};\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\nimport {dispatch} from 'd3-dispatch';\nimport {select} from 'd3-selection';\nimport {viewBase, viewModel} from 'd3-view';\n\nimport globalOptions from './options';\n\n\nconst CONTAINERS = ['visual', 'container'];\n\n//\n//  Gloval visuals object\n//  ==========================\n//\n//  Container of\n//  * live visuals\n//  * visual types\n//  * paper types\n//  * visual events\nexport const visuals = {\n    live: [],\n    types: {},\n    papers: {},\n    events: dispatch(\n        'before-init',\n        'after-init',\n        'before-draw',\n        'after-draw'\n    )\n};\n\n//\n//  Visual Interface\n//  ====================\n//\n//  Base prototype object for visuals\n//\nconst visualPrototype = assign({}, {\n\n    // initialise the visual with options\n    initialise () {\n\n    },\n\n    // draw this visual\n    draw () {},\n\n    select (el) {\n        return select(el);\n    },\n\n    // destroy the visual\n    destroy () {\n\n    },\n\n    // get a reactive model for type\n    getModel (type) {\n        if (!type) type = this.visualType;\n        var model = this.model[type];\n        if (!model && type in globalOptions) {\n            var options = pop(this.options, type);\n            if (this.visualParent)\n                model = this.visualParent.getModel(type).$child(options);\n            else {\n                model = this.model.$new(globalOptions[type]);\n                model.$update(options);\n            }\n            this.model[type] = model;\n        }\n        return model;\n    }\n}, viewBase);\n\n//\n//  Create a new Visual Constructor\nexport default function (type, proto) {\n    const opts = pop(proto, 'options');\n    if (opts)\n        globalOptions[type] = opts;\n\n    function Visual(element, options, parent, model) {\n        Object.defineProperties(this, {\n            visualType: {\n                get () {\n                    return type;\n                }\n            },\n            isViz: {\n                get () {\n                    return CONTAINERS.indexOf(type) === -1;\n                }\n            }\n        });\n        this.visualParent = parent;\n        this.model = parent ? parent.model.$new() : (model || viewModel());\n        this.options = options || {};\n        visuals.events.call('before-init', undefined, this);\n        this.initialise(element);\n        visuals.events.call('after-init', undefined, this);\n    }\n\n    Visual.prototype = assign({}, visualPrototype, proto);\n    visuals.types[type] = Visual;\n    return Visual;\n}\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-visualize]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","export default function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n}\n","import {select} from 'd3-selection';\n\nimport round from './round';\n\n\nconst WIDTH = 400;\nconst HEIGHT = '75%';\n\n\nexport function sizeValue (value, size) {\n    if (typeof(value) === \"string\" && value.indexOf('%') === value.length-1)\n        return round(0.01*parseFloat(value)*size);\n    return +value;\n}\n\n// Internal function for evaluating paper dom size\nexport function getSize (element, options) {\n    var size = {\n        width: options.width,\n        height: options.height\n    };\n\n    if (!size.width) {\n        size.width = getWidth(element);\n        if (size.width)\n            size.widthElement = getWidthElement(element);\n        else\n            size.width = WIDTH;\n    }\n\n    if (!size.height) {\n        size.height = getHeight(element);\n        if (size.height)\n            size.heightElement = getHeightElement(element);\n        else\n            size.height = HEIGHT;\n    }\n\n    // Allow to specify height as a percentage of width\n    if (typeof(size.height) === \"string\" && size.height.indexOf('%') === size.height.length-1) {\n        size.heightPercentage = 0.01*parseFloat(size.height);\n        size.height = round(size.heightPercentage*size.width);\n    }\n\n    return size;\n}\n\n\nexport function getWidth (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementWidth(el);\n}\n\n\nexport function getHeight (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementHeight(el);\n}\n\n\nexport function getWidthElement (element) {\n    return getParentElementRect(element, 'width');\n}\n\n\nexport function getHeightElement (element) {\n    return getParentElementRect(element, 'height');\n}\n\n\nfunction elementWidth (el) {\n    var w = el.getBoundingClientRect()['width'],\n        s = select(el),\n        left = padding(s.style('padding-left')),\n        right = padding(s.style('padding-right'));\n    return w - left - right;\n}\n\n\nfunction elementHeight (el) {\n    var w = el.getBoundingClientRect()['height'],\n        s = select(el),\n        top = padding(s.style('padding-top')),\n        bottom = padding(s.style('padding-bottom'));\n    return w - top - bottom;\n}\n\n\nfunction getParentElementRect (element, key) {\n    let parent = element.node ? element.node() : element,\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        v = parent.getBoundingClientRect()[key];\n        if (v)\n            return parent;\n        parent = parent.parentNode;\n    }\n}\n\n\nfunction padding (value) {\n    if (value && value.substring(value.length-2) == 'px')\n        return +value.substring(0, value.length-2);\n    return 0;\n}\n\n\nexport function boundingBox (size) {\n    var w = size.widthElement ? getWidth(size.widthElement) : size.width,\n        h;\n    if (size.heightPercentage)\n        h = round(w*size.heightPercentage, 0);\n    else\n        h = size.heightElement ? getHeight(size.heightElement) : size.height;\n    if (size.minHeight)\n        h = Math.max(h, size.minHeight);\n    return [round(w), round(h)];\n}\n","import {pop, inBrowser} from 'd3-let';\nimport {select} from 'd3-selection';\nimport {viewDebug} from 'd3-view';\n\nimport createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\nimport {getSize, boundingBox} from '../utils/size';\n\n//\n//  Visual\n//  =============\n//\n//  A Visual is a a container of visual layers and it is\n//  associated with an HTML element\n//\n//  Usually a Visual contains one layer only, however it is possible to\n//  have more than one by combining several layers together. Importantly,\n//  layers in one visual generate HTMLElements which are children of the visual\n//  element and inherit both the width and height.\n//\n//  A visual register itself with the visuals.live array\n//\nexport default createVisual('visual', {\n\n    options: {\n        render: 'svg',\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    },\n\n    initialise (element) {\n        if (!element) throw new Error('HTMLElement required by visual group');\n        if (this.visualParent && this.visualParent.visualType !== 'container')\n            throw new Error('Visual parent can be a container only');\n\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            size: {\n                get () {\n                    return [this.width, this.height];\n                }\n            }\n        });\n\n        this.sel.classed('d3-visual', true);\n        // list of layers which define the visual\n        this.layers = [];\n        this.drawCount = 0;\n        visuals.live.push(this);\n        element.__visual__ = this;\n    },\n\n    toString () {\n        return `visual ${this.model.uid}`;\n    },\n\n    // Draw the visual\n    draw() {\n        if (!this.drawCount) {\n            this.drawCount = 1;\n            this.fit();\n        } else {\n            this.drawCount++;\n            this.clear();\n        }\n        visuals.events.call('before-draw', undefined, this);\n        this.layers.forEach(visual => {\n            visual.draw();\n        });\n        visuals.events.call('after-draw', undefined, this);\n    },\n\n    clear () {},\n\n    // Add a new visual to this group\n    addVisual (options) {\n        var type = pop(options, 'type');\n        var VisualClass = visuals.types[type];\n        if (!VisualClass)\n            warn(`Cannot add visual ${options.type}`);\n        else\n            return new VisualClass(this.element, options, this);\n    },\n    // Fit the root element to the size of the parent element\n    fit () {\n        var size = getSize(this.element.parentNode, this.getModel('visual'));\n        this.width = size.width;\n        this.height = size.height;\n        this.sel.style('width', this.width + 'px').style('height', this.height + 'px');\n    },\n\n    resize (size) {\n        if (!size) size = boundingBox(this);\n        var currentSize = this.size;\n\n        if (currentSize[0] !== size[0] || currentSize[1] !== size[1]) {\n            viewDebug(`Resizing \"${this.toString()}\"`);\n            this.width = size[0];\n            this.height = size[1];\n            this.draw();\n        }\n    },\n\n    destroy () {\n        var idx = visuals.live.indexOf(this);\n        if (idx > -1) visuals.live.splice(idx, 1);\n    }\n});\n\n\nif (inBrowser) {\n    // DOM observer\n    // Check for changes in the DOM that leads to visual actions\n    const observer = new MutationObserver(visualManager);\n    observer.observe(document.documentElement, {\n        childList: true,\n        subtree: true\n    });\n}\n\n//\n//  Clears visualisation going out of scope\nfunction visualManager (records) {\n    records.forEach(record => {\n        var nodes = record.removedNodes;\n        if (!nodes || !nodes.length) return;  // phantomJs hack\n        nodes.forEach(node => {\n            if (node.nodeName !== '#text') {\n                if (!node.__visual__)\n                    select(node).selectAll('.d3-visual').each(destroy);\n                else\n                    destroy.call(node);\n            }\n        });\n    });\n}\n\n\nfunction destroy () {\n    var viz = this.__visual__;\n    if (viz) {\n        viz.destroy();\n        viewDebug(`Removed \"${viz.toString()}\" from DOM, ${visuals.live.length} live visuals left`);\n    }\n    else warn('d3-visual without __visual__ object');\n}\n","import assign from 'object-assign';\nimport {isFunction} from 'd3-let';\n\nimport createVisual, {visuals} from './base';\nimport Visual from './visual';\nimport {applyTransforms} from '../transforms/index';\n\n//\n//  crateChart\n//\n//  A chart is a drawing of series data in two dimensional\nexport default function (type) {\n    var protos = [{}, vizPrototype, chartPrototype];\n    for (var i=1; i<arguments.length; ++i) protos.push(arguments[i]);\n    return createVisual(type, assign.apply(undefined, protos));\n}\n\n\n//  Viz Prototype\n//  =================\nexport const vizPrototype = {\n\n    initialise (element) {\n        // No visual parent, create the visual\n        var visual = this.visualParent;\n        if (!visual) {\n            this.visualParent = visual = new Visual(element, this.options, null, this.model);\n            this.model = visual.model.$new();\n            this.options = {};\n        } else if (visual.visualType !== 'visual')\n            throw new Error(`visual parent of ${this.visualType} can only be \"visual\"`);\n        visual.layers.push(this);\n    },\n\n    //\n    // paper object for this visualisation\n    paper () {\n        var visual = this.getModel('visual'),\n            paper = this._paper;\n        if (paper && paper.type === visual.render) return paper;\n        var PaperType = visuals.papers[visual.render];\n        if (!PaperType) throw new Error(`Unknown paper ${visual.render}`);\n        paper = new PaperType(this);\n        this._paper = paper;\n        return paper;\n    },\n\n    translate (x, y) {\n        if (isFunction(x)) {\n            return function (d) {\n                var xt = x(d) || 0,\n                    yt = y(d) || 0;\n                return `translate(${xt}, ${yt})`;\n            };\n        } else return `translate(${x}, ${y})`;\n    }\n};\n\n\nexport const chartPrototype = {\n\n    //  override draw method\n    draw () {\n        visuals.events.call('before-draw', undefined, this);\n        var self = this;\n\n        this.getData().then(frame => {\n            if (frame) {\n                frame = applyTransforms(frame, self.transforms);\n                this.doDraw(frame);\n                visuals.events.call('after-draw', undefined, this);\n            }\n        });\n    }\n};\n","import assign from 'object-assign';\nimport {select} from 'd3-selection';\n\nimport {visuals} from './base';\n\n\nexport default function createPaper (type, proto) {\n\n    function Paper (viz) {\n        var element = this.initialise(viz);\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            sel : {\n                get () {\n                    return select(element);\n                }\n            }\n        });\n    }\n\n    Paper.prototype = assign({}, paperPrototype, proto);\n\n    visuals.papers[type] = Paper;\n    return Paper;\n}\n\n\nconst paperPrototype = {\n\n    initialise () {},\n    transition () {},\n    dim (value) {\n        return value;\n    }\n};\n\n\nexport const Svg = createPaper('svg', {\n\n    initialise (viz) {\n        var svg = viz.visualParent.sel.append('svg')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true);\n        return svg.node();\n    }\n});\n","import createVisual from './base';\n\nexport default createVisual('container');\n","import assign from 'object-assign';\nimport {isString, isObject} from 'd3-let';\n\nimport VisualContainer from '../core/container';\n\n//\n//  vizComponent base prototype\n//  =============================\n//\n//  Some common properties and methods for all visualize components\n//\nexport const vizComponent = {\n    props: [\n        'schema',\t    // Schema is a collection of fields to display in the table\n        'datasource',\t// Data source\n        'plugins',      // list of string/objects\n\t],\n\n    render (props, attrs, el) {\n        var self = this,\n            inner = this.select(el).html();\n        //\n        // build\n        return this.getSchema(props.schema, schema => {\n            if (!isObject(schema)) schema = {};\n            return self.build(schema, inner, attrs);\n        });\n    },\n\n    // get the schema from the input schema property\n    getSchema (input, build) {\n        var parent = this.model.visual;\n\n        // allow to specify the schema as an entry of\n        // visuals object in the dashboard schema\n        if (parent && parent !== this.model && isString(input)) {\n            var schema = parent.options.visuals[input];\n            if (schema) input = schema;\n        }\n\n        if (isString(input)) {\n            return this.json(input).then(build);\n        }\n        else return build(input);\n    },\n    //\n    // build the visual component has the schema available\n    build () {}\n};\n//\n//  Dashboard Component\n//  ========================\n//\n//  A collection of visual components arranged according\n//  to a custom layout.\n//\n//  * Dashboard visuals are independent of each other but\n//    interact via the data object\n//  * The Dashboard layout is given by the inner HTML elements\n//  * The configuration is obtained via the schema property which\n//    can be either:\n//      1) an object\n//      2) a url\nexport default assign({}, vizComponent, {\n\n    build (schema, inner, attrs) {\n        var model = this.model;\n        var sel = this.createElement('div');\n        if (attrs.class) sel.attr('class', attrs.class);\n        if (!schema.visuals) schema.visuals = {};\n        model.visual = new VisualContainer(sel.node(), schema, model.visual);\n        return this.mountInner(sel, inner);\n    }\n});\n","import assign from 'object-assign';\n\nimport {vizComponent} from './dashboard';\nimport Visual from '../core/visual';\n\n\n//\n//  Visual component\n//  ======================\n//\n//  An element containing a visualization\nexport default assign({}, vizComponent, {\n\n    build (schema) {\n        var sel = this.createElement('div'),\n            type = schema.type || 'visual',\n            model = this.model,\n            options = type === 'visual' ? schema : {};\n\n        model.visual = new Visual(sel.node(), options, model.visual);\n        if (type !== 'visual') model.visual.addVisual(schema);\n        return sel;\n    },\n\n    // once the element is mounted in the dom, draw the visual\n    mounted () {\n        this.model.visual.draw();\n    }\n});\n","import {isoParse} from 'd3-time-format';\n\nimport locale from './locale';\n\n\nexport const parsers = {\n    date: isoParse,\n\n    string (value) {\n        return ''+value;\n    }\n};\n\n// formatters\nexport const formatters = {\n\n    number (value) {\n        return value;\n    },\n\n    date (value) {\n        return locale.formatDate(value);\n    },\n\n    boolean (value) {\n        return value;\n    }\n};\n","import {isObject, isArray} from 'd3-let';\n\nimport {formatters, parsers} from '../data/formatters';\n\n\n//\n// Create table columns from schema\nexport default function (schema) {\n    var columns = [];\n    let col;\n\n\tif (!schema) return columns;\n\n    if (isArray(schema))\n        schema = {properties: schema};\n\n    if (isObject(schema.properties)) {\n        for (let key in schema.properties) {\n            col = schema.properties[key];\n            if (isObject(col)) {\n                if (!col.name) col.name = key;\n                columns.push(col);\n            }\n        }\n    } else\n        Array.prototype.push.apply(columns, schema.properties);\n\n    return columns.map((col) => {\n        if (!isObject(col)) col = {name: col};\n        if (!col.label) col.label = col.name;\n        if (!col.hidden) col.hidden = false;\n        if (!col.$parse) col.$parse = parsers[col.type] || parsers.string;\n        if (!col.$html) col.$html = formatters[col.type] || $html;\n        return col;\n    });\n}\n\n\nfunction $html (value) {\n    return value;\n}\n","//\n//  dataStore integration with visuals\nimport {isString, pop} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport {visuals} from '../core/base';\nimport DataStore from '../data/store';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\n//  getData method\n//  =====================\n//\n//  Inject a method for easily retrieving data from the datastore\nvizPrototype.getData = function () {\n    var name = this.model.data;\n    if (!name) {\n        warn('Visual without data name, cannot get data');\n        return resolvedPromise();\n    }\n    return this.dataStore.getData(name);\n};\n\n\nvisuals.events.on('before-init.data', viz => {\n    if (!viz.isViz) return;\n    // remove data from options\n    viz.data = pop(viz.options, 'data');\n});\n\n\nvisuals.events.on('after-init.data', viz => {\n    Object.defineProperties(viz, {\n        dataStore : {\n            get () {\n                if (viz.visualParent) return viz.visualParent.dataStore;\n                return viz.model.dataStore;\n            }\n        },\n    });\n    if (viz.isViz) setupLayer(viz);\n    else setupVisual(viz);\n});\n\n\nfunction setupVisual (visual) {\n    var store = visual.dataStore,\n        data = pop(visual.options, 'data');\n    //\n    if (!store) {\n        store = new DataStore(visual.model);\n        visual.model.dataStore = store;\n    }\n    store.addSources(data);\n}\n\n\nfunction setupLayer (layer) {\n    var store = layer.dataStore,\n        data = pop(layer, 'data');\n    if (!data) return;\n    if (isString(data)) data = {source: data};\n    if (!data.name) data.name = layer.model.uid;\n    data = store.addSources(data);\n    if (data)\n        layer.model.$set('data', data.name);\n    else\n        warn(`Could not create data source ${data.name}`);\n}\n","import {inBrowser} from 'd3-let';\nimport {viewDebounce} from 'd3-view';\nimport {select} from 'd3-selection';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nif (!globalOptions.resizeDelay)\n    globalOptions.resizeDelay = 200;\n\n\nif (inBrowser) {\n    var resize = viewDebounce(() => {\n        visuals.live.forEach(p => p.resize());\n    }, globalOptions.resizeDelay);\n\n    select(window).on('resize.visuals', resize);\n}\n","// Title plot annotation\nimport {isString} from 'd3-let';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.title = {\n    text: null,\n    fontSize: '10px'\n};\n\n\nvisuals.events.on('after-init.title', viz => {\n    var title = viz.options.title;\n    if (isString(title)) viz.options.title = {text: title};\n});\n","import {isObject} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst KEYS = ['top', 'bottom', 'left', 'right'];\nconst LEFTRIGHT = ['left', 'right'];\n\n\n// margin for visual marks\nglobalOptions.margin = {\n    top: 20,\n    bottom: 20,\n    left: 20,\n    right: 20\n};\n// padding for the visual paper\nglobalOptions.padding = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n};\n\n\n//\n//  Bounding box for a viz\n//  ==========================\nvizPrototype.boundingBox = function () {\n    var width = this.visualParent.width,\n        height = this.visualParent.height,\n        margin = calculate(this.getModel('margin'), width, height),\n        padding = calculate(this.getModel('padding'), width, height),\n        total = KEYS.reduce((o, key) => {\n            o[key] = margin[key] + padding[key];\n            return o;\n        }, {});\n    return {\n        width: width,\n        height: height,\n        margin: margin,\n        padding: margin,\n        total: total,\n        innerWidth: width - total.left - total.right,\n        innerHeight: height - total.top - total.bottom\n    };\n};\n\n\nvisuals.events.on('after-init.margin', viz => {\n    viz.margin = margins('margin', viz);\n    viz.padding = margins('padding', viz);\n});\n\n\nfunction margins (name, viz) {\n    var value = viz.options[name];\n\n    if (value !== undefined && !isObject(value)) {\n        var v = value || 0;\n        viz.options[name] = {\n            left: v,\n            right: v,\n            top: v,\n            bottom: v\n        };\n    }\n}\n\n\nfunction calculate (model, width, height) {\n    return KEYS.reduce((o, key) => {\n        o[key] = sizeValue(model[key], LEFTRIGHT.indexOf(key) > -1 ? width : height);\n        return o;\n    }, {});\n}\n","import {map} from 'd3-collection';\nimport {\n    scaleSequential,\n    interpolateViridis, interpolateInferno, interpolateMagma,\n    interpolatePlasma, interpolateWarm, interpolateCool,\n    interpolateRainbow, interpolateCubehelixDefault\n} from 'd3-scale';\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\nexport const colorScales = map();\n\n\nglobalOptions.color = {\n    scale: 'cool'\n};\n\ncolorScales.set('viridis', () =>  scaleSequential(interpolateViridis));\ncolorScales.set('inferno', () =>  scaleSequential(interpolateInferno));\ncolorScales.set('magma', () =>  scaleSequential(interpolateMagma));\ncolorScales.set('plasma', () =>  scaleSequential(interpolatePlasma));\ncolorScales.set('warm', () =>  scaleSequential(interpolateWarm));\ncolorScales.set('cool', () =>  scaleSequential(interpolateCool));\ncolorScales.set('rainbow', () =>  scaleSequential(interpolateRainbow));\ncolorScales.set('cubehelix', () =>  scaleSequential(interpolateCubehelixDefault));\n\n//\n//  Color scale method\n//  ==========================\nvizPrototype.colorScale = function () {\n    var color = this.getModel('color'),\n        scale = colorScales.get(color.scale);\n    if (!scale) throw new Error(`Unknown scale ${color.scale}`);\n    return scale();\n};\n","//\n// Use clusterize.js to render the table\nexport default function (table, options) {\n    return table.require('clusterize.js@0.17.6').then(Clusterize => clusterize(Clusterize, table, options));\n}\n\n\nfunction clusterize(Clusterize) {\n    var cl = new Clusterize();\n    return cl;\n}\n","export default function (table) {\n    return table;\n}\n","//\n//  bootstrap styling for tabular component\n//  ==========================================\n//\nimport assign from 'object-assign';\n\n\nconst defaults = {\n    over: true,\n    small: true,\n    bordered: true,\n    loadingClass: 'table-info',\n    loadingTextClass: 'text-center'\n};\n\n\nexport default function (table, options) {\n    var style = table.model.style;\n    style.$update(assign({}, defaults, options));\n\n    style.tableClass = 'table table-responsive';\n    if (style.striped) style.tableClass += ' table-striped';\n    if (style.over) style.tableClass += ' table-hover';\n    if (style.bordered) style.tableClass += ' table-bordered';\n    if (style.small) style.tableClass += ' table-sm';\n}\n","//\n//  Plugins for visuals and tabular\n//\n// visual plugins\nimport './data';\nimport './responsive';\nimport './title';\nimport './margin';\nimport './color';\n//\n//  This module depends on core but not on components\nimport clusterize from './clusterize';\nimport paginate from './paginate';\nimport bootstrap from './bootstrap';\n\n// plugins add functionalities to a d3 table\n// A plugin is a function accepting two parameters:\n//  * the table component\n//  * object with configuration parameters\nexport default {\n    bootstrap,\n    clusterize,\n    paginate\n};\n","// import {timeout} from 'd3-timer';\nimport assign from 'object-assign';\nimport {isString, isArray, isPromise} from 'd3-let';\n\nimport warn from '../utils/warn';\nimport createColumns from '../utils/columns';\nimport tablePlugins from '../plugins/index';\nimport {vizComponent} from './dashboard';\n\n\nconst tableTpl = `<table d3-class=\"[style.tableClass, loadingData ? 'loading' : null]\">\n<thead d3-class=\"style.headerClass\">\n<tr d3-class=\"style.headerRowClass\">\n  <th d3-for=\"col in columns\"\n        d3-html=\"col.label\"\n        d3-if=\"!col.hidden\">\n  </th>\n</tr>\n<tr d3-if=\"loadingData\" d3-class=\"style.loadingClass\">\n    <td d3-attr-colspan=\"columns.length\">\n        <p d3-class=\"style.loadingTextClass\">loading data</p>\n    </td>\n</tr>\n</thead>\n<tbody></tbody>\n</table>`;\n\n\nexport default assign({}, vizComponent, {\n\n\tmodel () {\n        return {\n            header: true,            // show header\n            columns: [],             // table columns\n            loadingData: false,\n            style: {\n                tableClass: null,\n                headerClass: null,\n                headerRowClass: null,\n                loadingClass: 'loading',\n                loadingTextClass: null\n            }\n        };\n\t},\n\n\tbuild (schema) {\n\t\tvar self = this,\n            model = this.model,\n            plugins = schema.plugins || [];\n        // model.allData = crossfilter([]);\n        this.records = {};\n        this.data = [];\n        this.template = tableTpl;\n\n\t\tmodel.columns = createColumns(schema);\n\t\t// if (data.dataurl) model.dataLoader = new DataLoader(data.dataurl);\n\n        if (!isArray(plugins)) {\n            warn('plugins should be an array');\n        } else {\n            var promises = [];\n            let promise;\n            plugins.forEach(plugin => {\n                if (isString(plugin)) plugin = {name: plugin};\n                if (!tablePlugins[plugin.name])\n                    warn(`Unknown table plugin ${plugin.name}`);\n                else {\n                    promise = tablePlugins[plugin.name](self, plugin);\n                    if (isPromise(promise)) promises.push(promise);\n                }\n            });\n            if (promises.length)\n                 return Promise.all(promises).then(() => self.viewElement(self.template));\n        }\n\n\t\treturn this.viewElement(this.template);\n\t},\n\n\tmounted () {\n        var vm = this,\n            model = this.model;\n\t\tif (model.dataLoader) {\n\t\t\tvar p = model.dataLoader.load(model.columns);\n            if (p) {\n                model.loadingData = true;\n                p.then((data) => {\n                    // var allData = model.allData;\n                    model.loadingData = false;\n                    addData(vm, data);\n                }, (err) => {\n                    model.loadingData = false;\n                    return err;\n                });\n            }\n        }\n\t}\n});\n\n// new data to include in the table\nfunction addData (vm, newData) {\n    var records = vm.records,\n        data = vm.data,\n        model = vm.model,\n        delayData = newData;\n\n    let record, value;\n\n    newData = delayData.splice(0, 100);\n\n    newData.forEach((d) => {\n        if (d.id) {\n            record = d.id ? records[d.id] : null;\n            if (record)\n                d = assign(record, d);\n            else {\n                data.push(d);\n                records[d.id] = d;\n            }\n        } else\n            data.push(d);\n        model.columns.forEach((col) => {\n            d[col.name] = col.$parse(d[col.name]);\n        });\n    });\n\n    //if (delayData.length)\n    //    timeout(() => addData(vm, delayData));\n\n    var rows = vm.sel.select('tbody')\n                .selectAll('tr').data(data);\n\n    rows\n        .enter()\n            .append('tr')\n            .attr('scope', 'row')\n            .selectAll('td')\n            .data(model.columns)\n            .enter()\n                .append('td')\n                .style('display', (col) => {\n                    return col.hidden ? 'none' : null;\n                })\n                .html(function (col) {\n                    record = this.parentNode.__data__;\n                    value = record[col.name];\n                    return col.$html(value === undefined ? '' : value);\n                });\n}\n","//\n//  d3-view components\n//  ======================\n//\n//  d3-view plugin for visualization components\n//\nimport dashboard from './dashboard';\nimport visual from './visual';\nimport tabular from './tabular';\nimport tabularPlugins from '../plugins/index';\n\n\n// Visual components plugin\nexport default {\n    tabularPlugins,\n\n    install (vm) {\n        vm.addComponent('dashboard', dashboard);\n        vm.addComponent('visual', visual);\n        vm.addComponent('tabular', tabular);\n    }\n\n};\n","export default function (x) {\n    return function constant() {\n        return x;\n    };\n}\n","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function (d) {\n    return d;\n}\n","import constant from \"../utils/constant\";\nimport descending from \"../utils/descending\";\nimport identity from \"../utils/identity\";\n//\n//  Pyramid Shape generator\n//  ============================\nexport default function () {\n    var value = identity,\n        pad = constant(0),\n        height = 1,\n        base = 1;\n\n    function pyramid (data) {\n        let i, j, k, points, fraction,\n            hi, x, y, v0, ph, pj;\n        var n = data.length,\n            r = 0.5*base/height,\n            polygons = new Array(n),\n            index = new Array(n);\n\n        for (i=0; i<n; ++i) {\n            polygons[index[i] = i] = +value(data[i], i, data);\n        }\n\n        // Sort the polygons\n        index.sort((i, j) => {return descending(polygons[i], polygons[j]);});\n\n        // Compute the polygons! They are stored in the original data's order.\n        v0 = polygons[index[0]];\n        hi = null;\n\n        for (i=n-1; i>=0; --i) {\n            points = [];\n            if (hi === null)\n                points.push([0, 0]);\n            else {\n                y = hi + ph;\n                x = y*r;\n                points.push([-x, y]);\n                points.push([x, y]);\n            }\n            j = index[i];\n            k = n - i - 1;\n            fraction = polygons[j]/v0;\n            pj = Math.sqrt(fraction);\n            hi = height*pj;\n            ph = i ? pad(pj, k) : 0;\n            y = hi - ph;\n            x = y*r;\n            points.push([x, y]);\n            points.push([-x, y]);\n            polygons[j] = {\n                index: k,\n                value: polygons[j],\n                fraction: fraction,\n                points: points\n            };\n        }\n        return polygons;\n    }\n\n    pyramid.value = function(_) {\n        return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pyramid) : value;\n    };\n\n    pyramid.base = function (_) {\n        return arguments.length ? (base = _, pyramid) : base;\n    };\n\n    pyramid.height = function (_) {\n        return arguments.length ? (height = _, pyramid) : height;\n    };\n\n    pyramid.pad = function(_) {\n        return arguments.length ? (pad = typeof _ === \"function\" ? _ : constant(+_), pyramid) : pad;\n    };\n\n    return pyramid;\n}\n","import createChart from '../core/chart';\n\n//\n//  Bar Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('barchart', {\n\n    options: {\n        orientation: 'vertical',\n        // stack multiple y series?\n        stack: false\n    },\n\n    doDraw () {\n\n    }\n});\n","import * as d3_shape from 'd3-shape';\n\nimport createChart from '../core/chart';\nimport warn from '../utils/warn';\n\n\n//\n//  Line Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('linechart', {\n\n    options: {\n        lineWidth: 1,\n        colorOpacity: 1,\n        curve: 'cardinalOpen'\n    },\n\n    doDraw () {\n        var data = this.series,\n            aesthetics = this.aesthetics,\n            path = this.plot.path(this).data([data]),\n            x = this.scaled(this.mapping.x, this.plot, data),\n            y = this.scaled(this.mapping.y, this.plot, data),\n            line = d3_shape.line().x(x).y(y).curve(curve(this, aesthetics.curve)),\n            width = this.plot.dim(aesthetics.lineWidth),\n            merge = this.plot.transition('update');\n\n        path\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', aesthetics.color)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', width)\n            .merge(path)\n                .transition(merge)\n                .attr('stroke', aesthetics.color)\n                .attr('stroke-opacity', aesthetics.colorOpacity)\n                .attr('stroke-width', width)\n                .attr('d', line);\n\n        path\n            .exit()\n            .remove();\n    }\n});\n\n\nexport function curve (layer, name) {\n    var obj = d3_shape[curveName(name)];\n    if (!obj) {\n        warn(`Could not locate curve type \"${name}\"`);\n        name = curveName(layer.defaults().curveName);\n        obj = d3_shape[name];\n    }\n    return obj;\n}\n\n\nfunction curveName (name) {\n    if (name.substring(0, 5) !== 'curve')\n        name = 'curve' + name[0].toUpperCase() + name.substring(1);\n    return name;\n}\n","import {pie, arc} from 'd3-shape';\n\nimport createChart from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\nconst pi = Math.PI;\nconst rad = pi/180;\n\n\nexport const proportional = {\n    fill (data) {\n        var cscale = this.colorScale().domain([0, data.length-1]);\n\n        function fill (d) {\n            return cscale(d.index);\n        }\n\n        fill.scale = cscale;\n\n        return fill;\n    },\n\n    proportionalData (frame, field) {\n        return frame.dimension(d => d[field]).top(Infinity);\n    }\n};\n\n//\n//  Pie Chart\n//  =============\n//\nexport default createChart('piechart', proportional, {\n\n    options: {\n        // The data values from this field will be encoded as angular spans.\n        // If omitted, all pie slices will have equal spans\n        field: 'data',\n        startAngle: 0,\n        endAngle: 360,\n        sort: false,\n        innerRadius: 0,\n        padAngle: 0,\n        cornerRadius: 0,\n        //\n        color: null,\n        lineWidth: 1,\n        colorOpacity: 1,\n        fillOpacity: 1\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            field = model.field,\n            box = this.boundingBox(),\n            outerRadius = Math.min(box.innerWidth, box.innerHeight)/2,\n            innerRadius = sizeValue(model.innerRadius, outerRadius),\n            angles = pie()\n                .padAngle(rad*model.padAngle)\n                .startAngle(rad*model.startAngle)\n                .endAngle(rad*model.endAngle)\n                .value(d => d[field]),\n            arcs = arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius)\n                .cornerRadius(model.cornerRadius),\n            paper = this.paper(),\n            //update = paper.transition('update'),\n            data = angles(this.proportionalData(frame, field)),\n            fill = this.fill(data),\n            slices = paper\n                .sel\n                .attr('width', box.width)\n                .attr('height', box.height)\n                .append('g')\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                .selectAll('.slice').data(data);\n\n        slices\n            .enter()\n                .append('path')\n                .attr('class', 'slice')\n                .attr('stroke', model.color)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n            .merge(slices)\n                //.transition(update)\n                .attr('stroke', model.color)\n                .attr('stroke-opacity', model.colorOpacity)\n                .attr('d', arcs)\n                .attr('fill', fill)\n                .attr('fill-opacity', model.fillOpacity);\n\n        slices.exit().remove();\n    }\n});\n","//\n//  Custom Symbol type\n//  =====================\n//\n//  Draw a polygon given an array of points\n//  This can be used as type in a d3-shape symbol\nexport default function (points) {\n\n    return {\n        draw (context) {\n            points.forEach((point, idx) => {\n                if (!idx) context.moveTo(point[0], point[1]);\n                else context.lineTo(point[0], point[1]);\n            });\n            context.closePath();\n        }\n    };\n}\n","import {symbol} from 'd3-shape';\n\nimport createChart from '../core/chart';\nimport pyramid from '../transforms/pyramid';\nimport polygon from '../utils/polygon';\nimport {proportional} from './pie';\nimport {sizeValue} from '../utils/size';\n\n\nexport default createChart('pyramidchart', proportional, {\n\n    options: {\n        field: null,\n        pad: 0,\n        lineWidth: 0\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            box = this.boundingBox(),\n            pad = sizeValue(model.pad, Math.min(box.innerWidth, box.innerHeight)),\n            polygons = pyramid().base(box.innerWidth).height(box.innerHeight).pad(pad),\n            data = frame,\n            marks = symbol().type(d => polygon(d.points)).size(1),\n            fill = this.fill(data),\n            paper = this.paper(),\n            segments = paper\n                .sel\n                .attr(\"transforms\", this.translate(box.shift.left+box.innerWidth/2, box.shift.top))\n                .selectAll('.segment').data(polygons(data));\n\n        segments\n            .enter()\n                .append('path')\n                .attr('class', 'segment')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', paper.dim(model.lineWidth))\n            .merge(segments)\n                //.transition(update)\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', model.strokeOpacity)\n                .attr('d', marks)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        segments.exit().remove();\n    }\n\n});\n","import createChart from '../core/chart';\n\n//\n//  Treemap\n//  =============\n//\nexport default createChart('treemap', {\n    requires: ['d3-treemap']\n\n});\n"],"names":["defaults","size","options","assign","t","range","S","sigma","drift","data","x","y","norm","randomNormal","dx","i","length","config","_data","isArray","isObject","resolvedPromise","asFrame","prefix","msg","logger","warn","schemes","value","isString","indexOf","split","isUrl","url","fetch","viewProviders","then","parse","response","ct","headers","get","text","csvParse","json","source","store","Promise","all","map","getData","frames","expression","viewExpression","self","model","eval","dataEvents","dispatch","dataSourcePrototype","entry","constructor","Object","crossfilter","type","DataSource","prototype","set","sources","values","cfg","getConfig","initDataSource","dataSource","name","dataName","pop","cf","defineProperties","initialise","call","undefined","groupby","series","field","applyTransforms","transforms","ts","forEach","transform","dataSources","add","array","remote","composite","DataStore","transformStore","dataCount","create","arguments","p","remove","each","ds","cachedFrame","Error","frame","def","timeFormat","symbol","locales","source1","source2","load","number","locale","time","formatDate","date","formatDateTime","dateTime","CONTAINERS","visuals","visualPrototype","el","select","visualType","globalOptions","visualParent","getModel","$child","$new","$update","viewBase","proto","opts","Visual","element","parent","viewModel","events","types","n","Math","round","pow","WIDTH","HEIGHT","sizeValue","parseFloat","getSize","width","height","getWidth","widthElement","getWidthElement","getHeight","heightElement","getHeightElement","heightPercentage","getParentElementRect","elementWidth","elementHeight","w","getBoundingClientRect","s","left","padding","style","right","top","bottom","key","node","v","tagName","parentNode","substring","boundingBox","h","minHeight","max","createVisual","sel","classed","layers","drawCount","live","push","__visual__","uid","fit","clear","draw","VisualClass","currentSize","toString","idx","splice","inBrowser","observer","MutationObserver","visualManager","observe","document","documentElement","records","nodes","record","removedNodes","nodeName","selectAll","destroy","viz","protos","vizPrototype","chartPrototype","apply","visual","paper","_paper","render","PaperType","papers","isFunction","d","xt","yt","doDraw","createPaper","Paper","paperPrototype","Svg","svg","append","attr","vizComponent","props","attrs","inner","html","getSchema","schema","build","input","createElement","class","VisualContainer","mountInner","addVisual","parsers","isoParse","formatters","columns","col","properties","Array","label","hidden","$parse","string","$html","dataStore","on","isViz","setupLayer","setupVisual","addSources","layer","$set","resizeDelay","resize","viewDebounce","window","title","KEYS","LEFTRIGHT","margin","calculate","total","reduce","o","margins","colorScales","color","scaleSequential","interpolateViridis","interpolateInferno","interpolateMagma","interpolatePlasma","interpolateWarm","interpolateCool","interpolateRainbow","interpolateCubehelixDefault","colorScale","scale","table","require","clusterize","Clusterize","cl","tableClass","striped","over","bordered","small","tableTpl","plugins","template","createColumns","promises","promise","plugin","tablePlugins","isPromise","viewElement","vm","dataLoader","loadingData","err","addData","newData","delayData","id","rows","enter","__data__","addComponent","dashboard","tabular","constant","a","b","NaN","identity","pad","base","pyramid","j","k","points","fraction","hi","v0","ph","pj","r","polygons","index","sort","descending","sqrt","_","createChart","aesthetics","path","plot","scaled","mapping","line","d3_shape","curve","dim","lineWidth","merge","transition","colorOpacity","exit","obj","curveName","toUpperCase","pi","PI","rad","proportional","cscale","domain","fill","dimension","Infinity","box","outerRadius","min","innerWidth","innerHeight","innerRadius","angles","pie","padAngle","startAngle","endAngle","arcs","arc","cornerRadius","proportionalData","slices","translate","fillOpacity","context","point","moveTo","lineTo","closePath","marks","polygon","segments","shift","stroke","strokeOpacity"],"mappings":"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"}