{"version":3,"file":"d3-visualize.js","sources":["../src/utils/randompath.js","../src/data/array.js","../src/data/warn.js","../src/utils/isurl.js","../src/data/remote.js","../src/data/composite.js","../src/data/expression.js","../src/utils/accessor.js","../src/data/dataframe.js","../src/utils/warn.js","../src/transforms/filter.js","../src/utils/fillarray.js","../src/transforms/aggregate.js","../src/transforms/timeseries.js","../src/core/options.js","../src/transforms/mapfields.js","../src/transforms/index.js","../src/data/sources.js","../src/data/store.js","../src/data/locale.js","../src/utils/round.js","../src/utils/size.js","../src/core/base.js","../src/core/visual.js","../src/utils/camelfunction.js","../src/core/chart.js","../src/core/paper.js","../src/plugins/menu.js","../src/plugins/data.js","../src/plugins/responsive.js","../src/plugins/title.js","../src/plugins/margin.js","../src/plugins/axis.js","../src/plugins/color.js","../src/plugins/legend.js","../src/plugins/clusterize.js","../src/plugins/paginate.js","../src/plugins/bootstrap.js","../src/plugins/index.js","../src/core/container.js","../src/components/dashboard.js","../src/components/visual.js","../src/data/formatters.js","../src/utils/columns.js","../src/components/tabular.js","../src/components/index.js","../src/utils/constant.js","../src/utils/descending.js","../src/utils/identity.js","../src/transforms/pyramid.js","../src/charts/line.js","../src/charts/bar.js","../src/charts/pie.js","../src/utils/polygon.js","../src/charts/pyramid.js","../src/charts/treemap.js","../index.js"],"sourcesContent":["import assign from 'object-assign';\nimport {range} from 'd3-array';\nimport {randomNormal} from 'd3-random';\n\n\nconst defaults = {\n    sigma: 0.1,\n    drift: 0\n};\n\n\nexport default function (size, options) {\n    options = assign({}, defaults, options);\n    var t = range(0, +size, 1),\n        S = options.sigma,\n        drift = options.drift,\n        data = [{x: 0, y: 0}],\n        norm = randomNormal(0, 1),\n        dx;\n\n    for (var i = 1; i < t.length; i++) {\n        dx = drift + S * norm();\n        data[i] = {\n            x: i,\n            y: data[i - 1].y + dx\n        };\n    }\n\n    return data;\n}\n","import {isArray, isObject} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\n//\n//  Array DataSource\n//  ====================\n//\n//  Data is given in an array, pkain & simple\nexport default {\n\n    initialise (config) {\n        this._data = config.data;\n    },\n\n    getConfig (config) {\n        if (isArray(config)) return {data: config};\n        else if (isObject(config) && isArray(config.data)) return config;\n    },\n\n    getData () {\n        return resolvedPromise(this.asFrame(this._data));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-data-source]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import {isString} from 'd3-let';\n\n\nconst schemes = ['http', 'https', 'ws', 'wss'];\n\n\nexport default function (value) {\n    return isString(value) && schemes.indexOf(value.split('://')[0]) > -1;\n}\n","import {csvParse} from 'd3-dsv';\nimport {isObject} from 'd3-let';\nimport {viewProviders, resolvedPromise} from 'd3-view';\n\nimport warn from './warn';\nimport isUrl from '../utils/isurl';\n\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isUrl(config)) return {url: config};\n        else if (isObject(config) && config.url)\n            return config;\n    },\n\n    initialise (config) {\n        this.url = config.url;\n    },\n\n    getData () {\n        var fetch = viewProviders.fetch,\n            self = this;\n        if (!fetch) {\n            warn('fetch provider not available, cannot submit');\n            return resolvedPromise([]);\n        }\n        return fetch(this.url).then(parse).then((data) => self.asFrame(data));\n    }\n};\n\n\nfunction parse (response) {\n    var ct = (response.headers.get('content-type') || '').split(';')[0];\n    if (ct === 'text/plain' || ct === 'text/csv')\n        return response.text().then(csvParse);\n    else if (ct === 'application/json')\n        return response.json();\n    else {\n        warn(`Cannot load content type '${ct}'`);\n        return [];\n    }\n}\n","import {isArray, isObject} from 'd3-let';\n//\n//  A composite dataSource\n//  ===================\n//\n//  A composite data source has the source attribute with the name of one\n//  or more data sets to use as the source for this data set.\n//  The source property is useful in combination with a transform pipeline\n//  to derive new data.\n//  If string-valued, indicates the name of the source data set.\n//  If array-valued, specifies a collection of data source names that\n//  should be merged (unioned) together.\nexport default {\n\n    initialise (config) {\n        this.source = config.source;\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.source) {\n            if (!isArray(config.source)) config.source = [config.source];\n            return config;\n        }\n    },\n\n    getData () {\n        var store = this.store,\n            self = this;\n        let frame;\n        return Promise.all(this.source.map(source => {\n             return store.getData(source);\n        })).then(frames => {\n            if (frames.length === 1) frame = frames[0];\n            else frame = self.mergeFrames(frames);\n            return self.asFrame(frame);\n        });\n    },\n\n    // TODO: implement frame merging\n    mergeFrames (frames) {\n        return frames[0];\n    }\n};\n","import {isObject} from 'd3-let';\nimport {viewExpression, resolvedPromise} from 'd3-view';\n\n\nexport default {\n\n    initialise (config) {\n        this.expression = viewExpression(config.expression);\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.expression)\n            return config;\n    },\n\n    getData () {\n        var self = this,\n            model = this.store.model;\n        return resolvedPromise(this.expression.eval(model)).then((data) => self.asFrame(data));\n    }\n};\n","export default function (field) {\n    return function (d) {\n        return d[field];\n    };\n}\n","import {isArray} from 'd3-let';\nimport {map} from 'd3-collection';\nimport crossfilter from 'crossfilter';\n\nimport accessor from '../utils/accessor';\n\n\nexport default function DataFrame (data, serie, store) {\n    if (isArray(data)) data = {\n        store: store,\n        data: data,\n        dimensions: {},\n        series: map()\n    };\n    Object.defineProperties(this, {\n        _inner: {\n            get () {\n                return data;\n            }\n        },\n        store: {\n            get () {\n                return data.store;\n            }\n        },\n        data: {\n            get () {\n                return data.data;\n            }\n        },\n        dimensions: {\n            get () {\n                return data.dimensions;\n            }\n        },\n        series: {\n            get () {\n                return data.series;\n            }\n        }\n    });\n    this.serie = serie;\n}\n\n\nDataFrame.prototype = {\n\n    size () {\n        return this.data.length;\n    },\n\n    new (serie) {\n        if (isArray(serie)) return new DataFrame(serie, null, this.store);\n        else return new DataFrame(this._inner, serie);\n    },\n\n    cf () {\n        if (!this._inner.cf) this._inner.cf = crossfilter(this.data);\n        return this._inner.cf;\n    },\n\n    //  Create and return a crossfilter dimension\n    //  If value is not specified, keepExisting is by default true, and any\n    //  existing dimension name is recycled.\n    dimension (name, value, keepExisting) {\n        if (arguments.length === 1) keepExisting = true;\n        var current = this.dimensions[name];\n        if (current) {\n            if (keepExisting) return current;\n            current.dispose();\n        }\n        if (!value) value = accessor(name);\n        this.dimensions[name] = this.cf().dimension(value);\n        return this.dimensions[name];\n    },\n\n    //  Sort a dataframe by name and return the top values or all of them if\n    //  top is not defined. The name can be a function.\n    sortby (name, top) {\n        return this.new(this.dimension(name).top(top || Infinity));\n    },\n\n    // return a new dataframe by pivoting values for field name\n    pivot (dimension, key, value, total) {\n        var group = this.dimension(dimension).group();\n        if (!total) total = 'total';\n        return this.new(group.reduce(pivoter(1), pivoter(-1), Object).all().map(d => d.value));\n\n        function pivoter (m) {\n            let pk, pv;\n            return function (o, record) {\n                pk = ''+record[key];\n                pv = m*record[value];\n                o[dimension] = record[dimension];\n                if (pk in o) o[pk] += pv;\n                else o[pk] = pv;\n                if (total in o) o[total] += pv;\n                else o[total] = pv;\n                return o;\n            };\n        }\n    },\n\n    add () {\n        //this._inner.cf.add(data);\n    },\n\n    map (mapper) {\n        return this.new(this.data.map(mapper));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-visualize]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var dimension = config.dimension;\n\n    if (!dimension) warn('Filter transform requires a \"dimenstion\" entry');\n\n    return filter;\n\n    function filter (frame) {\n        if (dimension) {\n            var d = frame.dimension(dimension);\n            return frame.new(d.group());\n        }\n    }\n}\n","export default function (size, value) {\n    var a = new Array(size);\n    a.fill(value);\n    return a;\n}\n","import {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {max, min, sum, mean, median, variance, deviation} from 'd3-array';\n\nimport warn from '../utils/warn';\nimport fillArray from '../utils/fillarray';\n\nexport const operations = map({\n    count,\n    max,\n    min,\n    sum,\n    mean,\n    median,\n    variance,\n    deviation\n});\n\nfunction count (array, accessor) {\n    return array.reduce((v, d) => {\n        if (accessor(d) !== undefined) v += 1;\n        return v;\n    });\n}\n//\n// The aggregate transform groups and summarizes an imput data stream to\n// produce a derived output data stream. Aggregate transforms can be used\n// to compute counts, sums, averages and other descriptive statistics over\n// groups of data objects.\nexport default function (config) {\n    let fields = config.fields,\n        ops = config.ops,\n        as = config.as;\n\n    if (!fields && !ops) return countAll;\n\n    if (!isArray(fields)) return warn('Aggregate transforms expect an array of fields');\n    if (!ops) ops = 'count';\n    if (isString(ops)) ops = fillArray(fields.length, ops);\n    if (!isArray(ops)) return warn('Aggregate transform expects an array of ops');\n    if (ops.length < fields.length) warn('Aggregate transforms expects an ops array with same length as fields');\n    if (!as) as = [];\n    if (!isArray(as)) return warn('Aggregate transform expects an array of as fields');\n    return aggregate;\n\n\n    function countAll (frame) {\n        let key;\n        return frame.data.reduce((o, d) => {\n            for (key in d) {\n                if (key in o) o[key] += 1;\n                else o[key] = 1;\n            }\n            return o;\n        }, {});\n    }\n\n    function aggregate (frame) {\n        var data = [],\n            name, op;\n        fields.forEach((field, index) => {\n            name = ops[index];\n            op = count;\n            if (name) {\n                op = operations.get(name);\n                if (!op) {\n                    op = count;\n                    warn(`Operation ${ops[index]} is not supported, use count`);\n                }\n            }\n            data.push({\n                label: as[index] || field,\n                data: op(frame.data, d => d[field])\n            });\n        });\n        return data;\n    }\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var sortby = config.sortby,\n        groupby = config.groupby;\n\n    if (!sortby) warn('timeseries transform requires a \"sortby\" entry');\n\n    return timeseries;\n\n    function timeseries (frame) {\n        if (sortby) {\n            if (groupby) {\n                var dim = frame.dimension(groupby),\n                    groups = dim.group().top(Infinity),\n                    newframe = frame.new([]),\n                    tmp;\n                groups.forEach(group => {\n                    tmp = frame.new(dim.filterExact(group.key).top(Infinity)).dimension(sortby).group().top(Infinity);\n                    newframe.series.set(group.key, frame.new(tmp).dimension('key').top(Infinity));\n                });\n                return newframe;\n            } else {\n                return frame.new(frame.dimension(sortby).top(Infinity));\n            }\n        }\n        return frame;\n    }\n}\n","//\n//  Global options for visuals\n//  ============================\n//\nexport default {\n    // visual data source\n    dataSource: null,\n    //\n    size: {\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    }\n};\n","//\n//  Map Fields Transform\n//  ========================\n//\n//  Convert a set af fields to a different data type\n//\nimport assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {isString} from 'd3-let';\nimport {utcParse} from 'd3-time-format';\n\nimport warn from '../utils/warn';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.dateFormat = '%d-%b-%y';\n\n\nconst converters = {\n    date (entry) {\n        return utcParse(entry.dateFormat || globalOptions.dateFormat);\n    },\n    number () {\n        return parseFloat;\n    }\n};\n\n\n//\nexport default function (config) {\n    config = assign({}, globalOptions.dateFormat, config);\n    var fields = map(config.fields);\n    let i, converter;\n\n    return mapfields;\n\n    function mapfields (frame) {\n        var mappers = [];\n\n        fields.each((entry, key) => {\n            if (isString(entry)) entry = {type: entry};\n            converter = converters[entry.type];\n            if (!converter) warn(`Cannot convert field ${key} to type ${entry.type}`);\n            else mappers.push([key, converter(entry)]);\n        });\n\n        if (mappers.length)\n            frame = frame.map(d => {\n                for (i=0; i<mappers.length; ++i)\n                    d[mappers[i][0]] = mappers[i][1](d[mappers[i][0]]);\n                return d;\n            });\n\n        return frame;\n    }\n}\n","// Collection of transforms\nimport {map} from 'd3-collection';\nimport {isArray} from 'd3-let';\n\nimport filter from './filter';\nimport aggregate from './aggregate';\nimport timeseries from './timeseries';\nimport mapfields from './mapfields';\n\n//\n//  transforms Store\nexport default map({\n    filter,\n    aggregate,\n    mapfields,\n    timeseries\n});\n\n\n// Apply data transforms to a series\nexport function applyTransforms (frame, transforms) {\n    let ts;\n    if (!transforms) return frame;\n    transforms.forEach(transform => {\n        if (transform) {\n            ts = transform(frame);\n            if (isArray(ts)) frame = frame.new(ts);\n            else if (ts) frame = ts;\n        }\n    });\n    return frame;\n}\n","import assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {pop, isArray} from 'd3-let';\n\nimport DataFrame from './dataframe';\nimport transformStore, {applyTransforms} from '../transforms/index';\nimport warn from '../utils/warn';\n\nconst dataEvents = dispatch('init', 'data');\n\n\n//\n//  DataSource prototype\n//  ======================\nconst dataSourcePrototype = {\n\n    // get the config object-assign// This method is used by the prototype\n    // to check if the config object is a valid one\n    getConfig () {},\n\n    // initialise the data source with a config object\n    initialise () {},\n\n    getData () {},\n\n    //\n    addTransforms (transforms) {\n        var self = this;\n        let t;\n        if (!transforms) return;\n        if (!isArray(transforms)) transforms = [transforms];\n        transforms.forEach(transform => {\n            t = transformStore.get(transform.type);\n            if (!t) warn(`Transform \"${transform.type}\" not known`);\n            else self.transforms.push(t(transform));\n        });\n    },\n    //\n    // given a data object returns a Cross filter object\n    asFrame (data) {\n        if (isArray(data)) {\n            data = data.map(entry => {\n                if (entry.constructor !== Object) entry = {data: entry};\n                return entry;\n            });\n            data = new DataFrame(data, null, this.store);\n        }\n        return applyTransforms(data, this.transforms);\n    }\n};\n\n\n// DataSource container\nexport default assign(map(), {\n    events: dataEvents,\n\n    add (type, source) {\n\n        // DataSource constructor\n        function DataSource (config, store) {\n            initDataSource(this, type, config, store);\n        }\n\n        DataSource.prototype = assign({}, dataSourcePrototype, source);\n\n        this.set(type, DataSource);\n        return DataSource;\n    },\n\n    // Create a new DataSource\n    create (config, store) {\n        var sources = this.values(),\n            cfg;\n        for (var i=0; i<sources.length; ++i) {\n            cfg = sources[i].prototype.getConfig(config);\n            if (cfg) return new sources[i](cfg, store);\n        }\n    }\n});\n\n\nfunction initDataSource(dataSource, type, config, store) {\n\n    var name = store.dataName(pop(config, 'name')),\n        transforms = [];\n\n    // store.natural = cf.dimension(d => d._id);\n\n    Object.defineProperties(dataSource, {\n        name: {\n            get () {\n                return name;\n            }\n        },\n        store: {\n            get () {\n                return store;\n            }\n        },\n        type: {\n            get () {\n                return type;\n            }\n        },\n        // transforms to apply to data\n        transforms: {\n            get () {\n                return transforms;\n            }\n        },\n        config: {\n            get () {\n                return config;\n            }\n        }\n    });\n\n    dataSource.initialise(config);\n    dataSource.addTransforms(pop(config, 'transforms'));\n    store.sources.set(name, dataSource);\n    dataEvents.call('init', undefined, dataSource);\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport array from './array';\nimport remote from './remote';\nimport composite from './composite';\nimport expression from './expression';\nimport dataSources from './sources';\nimport transformStore from '../transforms/index';\n\n\ndataSources.add('array', array);\ndataSources.add('remote', remote);\ndataSources.add('composite', composite);\ndataSources.add('expression', expression);\n\n//\n//  DataStore\n//  ==============\n//\n//  Map names to datasets\n//  Individual data sets are assumed to contain a collection of records\n//  (or “rows”), which may contain any number of named data\n//  attributes (fields, or “columns”).\n//  Records are modeled using standard JavaScript objects.\nexport default function DataStore(model) {\n    var sources = map();\n\n    Object.defineProperties(this, {\n        sources: {\n            get () {\n                return sources;\n            }\n        }\n    });\n\n    // transforms function\n    this.transforms = assign({}, transformStore);\n    this.dataCount = 0;\n    this.model = model;\n}\n\n\nDataStore.prototype = {\n    size () {\n        return this.sources.size();\n    },\n\n    // Add a new serie from a data source\n    addSources (config) {\n        //\n        // data is a string, it must be already registered with store\n        if (isString(config)) config = {source: config};\n\n        if (isArray(config)) {\n            var self = this;\n            return config.map(cfg => {\n                return dataSources.create(cfg, self);\n            });\n        } else if (config) {\n            return dataSources.create(config, this);\n        }\n    },\n\n    addTransforms (transforms) {\n        assign(this.transforms, transforms);\n    },\n\n    // set, get or remove a data source\n    source (name, source) {\n        if (arguments.length === 1) return this.sources.get(name);\n        if (source === null) {\n            var p = this.sources.get(name);\n            this.sources.remove(name);\n            return p;\n        }\n        this.sources.set(name, source);\n        return this;\n    },\n\n    clearCache () {\n        this.sources.each(ds => {\n            delete ds.cachedFrame;\n        });\n    },\n\n    // get data from a source\n    getData (source) {\n        var ds = this.sources.get(source);\n        if (!ds) throw new Error(`Data source ${source} not available`);\n        if (ds.cachedFrame) return resolvedPromise(ds.cachedFrame);\n        return ds.getData().then(frame => {\n            ds.cachedFrame = frame;\n            return frame;\n        });\n    },\n\n    dataName (name) {\n        this.dataCount++;\n        if (name) return '' + name;\n        var def = this.source('default');\n        if (!def) return 'default';\n        return `source${this.dataCount}`;\n    }\n};\n","// utility to load and set locale\nimport {formatDefaultLocale} from 'd3-format';\nimport {timeFormatDefaultLocale, timeFormat} from 'd3-time-format';\n\nimport dataSources from './sources';\n\n//\n// manage locale\nexport default {\n    formatDate: timeFormat('%d/%m/%Y'),\n\n    formatDateTime: timeFormat('%a %e %b %X %Y'),\n\n    load (symbol) {\n        var locales = this,\n            source1 = dataSources.create(`https://unpkg.com/d3-format/locale/${symbol}.json`),\n            source2 = dataSources.create(`https://unpkg.com/d3-time-format/locale/${symbol}.json`);\n\n        return Promise.all([\n            source1.load().then(\n                locale => {\n                    locales.symbol = symbol;\n                    locales.number = locale;\n                    formatDefaultLocale(locale);\n                }\n            ),\n            source2.load().then(\n                locale => {\n                    locales.time = locale;\n                    locales.formatDate = timeFormat(locale.date);\n                    locales.formatDateTime = timeFormat(locale.dateTime);\n                    timeFormatDefaultLocale(locale);\n                }\n            )\n        ]);\n    }\n};\n","export default function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n}\n","import {select} from 'd3-selection';\n\nimport round from './round';\n\n\nconst WIDTH = 400;\nconst HEIGHT = '75%';\n\n\nexport function sizeValue (value, size) {\n    if (typeof(value) === \"string\" && value.indexOf('%') === value.length-1)\n        return round(0.01*parseFloat(value)*size);\n    return +value;\n}\n\n// Internal function for evaluating paper dom size\nexport function getSize (element, options) {\n    var size = {\n        width: options.width,\n        height: options.height\n    };\n\n    if (!size.width) {\n        size.width = getWidth(element);\n        if (size.width)\n            size.widthElement = getWidthElement(element);\n        else\n            size.width = WIDTH;\n    }\n\n    if (!size.height) {\n        size.height = getHeight(element);\n        if (size.height)\n            size.heightElement = getHeightElement(element);\n        else\n            size.height = HEIGHT;\n    }\n\n    // Allow to specify height as a percentage of width\n    size.height = sizeValue(size.height, size.width);\n    return size;\n}\n\n\nexport function getWidth (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementWidth(el);\n}\n\n\nexport function getHeight (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementHeight(el);\n}\n\n\nexport function getWidthElement (element) {\n    return getParentElementRect(element, 'width');\n}\n\n\nexport function getHeightElement (element) {\n    return getParentElementRect(element, 'height');\n}\n\n\nfunction elementWidth (el) {\n    var w = el.getBoundingClientRect()['width'],\n        s = select(el),\n        left = padding(s.style('padding-left')),\n        right = padding(s.style('padding-right'));\n    return w - left - right;\n}\n\n\nfunction elementHeight (el) {\n    var w = el.getBoundingClientRect()['height'],\n        s = select(el),\n        top = padding(s.style('padding-top')),\n        bottom = padding(s.style('padding-bottom'));\n    return w - top - bottom;\n}\n\n\nfunction getParentElementRect (element, key) {\n    let parent = element.node ? element.node() : element,\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        v = parent.getBoundingClientRect()[key];\n        if (v)\n            return parent;\n        parent = parent.parentNode;\n    }\n}\n\n\nfunction padding (value) {\n    if (value && value.substring(value.length-2) == 'px')\n        return +value.substring(0, value.length-2);\n    return 0;\n}\n\n\nexport function boundingBox (size) {\n    var w = size.widthElement ? getWidth(size.widthElement) : size.width,\n        h;\n    if (size.heightPercentage)\n        h = round(w*size.heightPercentage, 0);\n    else\n        h = size.heightElement ? getHeight(size.heightElement) : size.height;\n    if (size.minHeight)\n        h = Math.max(h, size.minHeight);\n    return [round(w), round(h)];\n}\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\nimport {dispatch} from 'd3-dispatch';\nimport {select} from 'd3-selection';\nimport {viewBase, viewModel} from 'd3-view';\nimport 'd3-transition';\n\nimport globalOptions from './options';\nimport {sizeValue} from '../utils/size';\n\n\nconst CONTAINERS = ['visual', 'container'];\n\n//\n//  Gloval visuals object\n//  ==========================\n//\n//  Container of\n//  * live visuals\n//  * visual types\n//  * paper types\n//  * visual events\nexport const visuals = {\n    live: [],\n    types: {},\n    papers: {},\n    events: dispatch(\n        'before-init',\n        'after-init',\n        'before-draw',\n        'after-draw'\n    )\n};\n\n//\n//  Visual Interface\n//  ====================\n//\n//  Base prototype object for visuals\n//\nexport const visualPrototype = assign({}, {\n\n    // initialise the visual with options\n    initialise () {\n\n    },\n\n    // draw this visual\n    draw () {},\n\n    select (el) {\n        return select(el);\n    },\n\n    // destroy the visual\n    destroy () {\n\n    },\n\n    // get a reactive model for type\n    getModel (type) {\n        if (!type) type = this.visualType;\n        var model = this.model[type];\n        if (!model && type in globalOptions) {\n            var options = pop(this.options, type),\n                self = this;\n            if (this.visualParent)\n                model = this.visualParent.getModel(type).$child(options);\n            else {\n                model = this.model.$new(globalOptions[type]);\n                model.$update(options);\n            }\n            this.model[type] = model;\n            model.$on(() => self.draw());\n        }\n        return model;\n    },\n\n    dim (size, refSize, minSize, maxSize) {\n        size = Math.max(sizeValue(size, refSize), minSize || 0);\n        if (maxSize) {\n            maxSize = Math.max(maxSize, minSize || 0);\n            size = Math.min(size, maxSize);\n        }\n        return size;\n    },\n\n    pop (container) {\n        if (container) {\n            var idx = container.live.indexOf(this);\n            if (idx > -1) container.live.splice(idx, 1);\n        }\n    }\n}, viewBase);\n\n//\n//  Create a new Visual Constructor\nexport default function (type, proto) {\n    const opts = pop(proto, 'options');\n    if (opts)\n        globalOptions[type] = opts;\n\n    function Visual(element, options, parent, model) {\n        Object.defineProperties(this, {\n            visualType: {\n                get () {\n                    return type;\n                }\n            },\n            isViz: {\n                get () {\n                    return CONTAINERS.indexOf(type) === -1;\n                }\n            }\n        });\n        this.visualParent = parent;\n        this.model = parent ? parent.model.$new() : (model || viewModel());\n        this.options = options || {};\n        visuals.events.call('before-init', undefined, this);\n        this.initialise(element);\n        visuals.events.call('after-init', undefined, this);\n    }\n\n    Visual.prototype = assign({}, visualPrototype, proto);\n    visuals.types[type] = Visual;\n    return Visual;\n}\n","import {pop, inBrowser} from 'd3-let';\nimport {select} from 'd3-selection';\nimport {viewDebug} from 'd3-view';\n\nimport createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\nimport {getSize} from '../utils/size';\n\n//\n//  Visual\n//  =============\n//\n//  A Visual is a a container of visual layers and it is\n//  associated with an HTML element\n//\n//  Usually a Visual contains one layer only, however it is possible to\n//  have more than one by combining several layers together. Importantly,\n//  layers in one visual generate HTMLElements which are children of the visual\n//  element and inherit both the width and height.\n//\n//  A visual register itself with the visuals.live array\n//\nexport default createVisual('visual', {\n\n    options: {\n        render: 'svg',\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%',\n        // heightElement - selector for an element from wich to obtain height\n        heightElement: null\n    },\n\n    initialise (element) {\n        if (!element) throw new Error('HTMLElement required by visual group');\n        if (this.visualParent && this.visualParent.visualType !== 'container')\n            throw new Error('Visual parent can be a container only');\n        if (!this.select(element).select('.paper').node())\n            this.select(element).append('div').classed('paper', true);\n\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            paper : {\n                get () {\n                    return this.sel.select('.paper');\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            size: {\n                get () {\n                    return [this.width, this.height];\n                }\n            }\n        });\n\n        this.sel.classed('d3-visual', true);\n        // list of layers which define the visual\n        this.layers = [];\n        this.drawCount = 0;\n        visuals.live.push(this);\n        element.__visual__ = this;\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    toString () {\n        return `visual ${this.model.uid}`;\n    },\n\n    // Draw the visual\n    draw() {\n        if (!this.drawCount) {\n            this.drawCount = 1;\n            this.fit();\n        } else {\n            this.drawCount++;\n            this.clear();\n        }\n        visuals.events.call('before-draw', undefined, this);\n        this.layers.forEach(visual => {\n            visual.draw();\n        });\n        visuals.events.call('after-draw', undefined, this);\n    },\n\n    clear () {},\n\n    // Add a new visual to this group\n    addVisual (options) {\n        var type = pop(options, 'type');\n        var VisualClass = visuals.types[type];\n        if (!VisualClass)\n            warn(`Cannot add visual ${options.type}`);\n        else\n            return new VisualClass(this.element, options, this);\n    },\n    //\n    // Fit the root element to the size of the parent element\n    fit () {\n        this.resize(null, true);\n    },\n\n    resize (size, fit) {\n        if (!size) size = getSize(this.element.parentNode || this.element, this.getModel());\n        var currentSize = this.size;\n\n        if (fit || (currentSize[0] !== size.width || currentSize[1] !== size.height)) {\n            if (!fit) viewDebug(`Resizing \"${this.toString()}\"`);\n            this.width = size.width;\n            this.height = size.height;\n            this.paper.style('width', this.width + 'px').style('height', this.height + 'px');\n            if (!fit) this.draw();\n        }\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n        this.pop(visuals);\n    }\n});\n\n\nif (inBrowser) {\n    // DOM observer\n    // Check for changes in the DOM that leads to visual actions\n    const observer = new MutationObserver(visualManager);\n    observer.observe(document.documentElement, {\n        childList: true,\n        subtree: true\n    });\n}\n\n//\n//  Clears visualisation going out of scope\nfunction visualManager (records) {\n    records.forEach(record => {\n        var nodes = record.removedNodes;\n        if (!nodes || !nodes.length) return;  // phantomJs hack\n        nodes.forEach(node => {\n            if (node.nodeName !== '#text') {\n                if (!node.__visual__)\n                    select(node).selectAll('.d3-visual').each(destroy);\n                else\n                    destroy.call(node);\n            }\n        });\n    });\n}\n\n\nfunction destroy () {\n    var viz = this.__visual__;\n    if (viz) {\n        viz.destroy();\n        viewDebug(`Removed \"${viz.toString()}\" from DOM, ${visuals.live.length} live visuals left`);\n    }\n    else warn('d3-visual without __visual__ object');\n}\n","export default function (o, prefix, name, objectOnly) {\n    if (name.substring(0, prefix.length) !== prefix)\n        name = `${prefix}${name[0].toUpperCase()}${name.substring(1)}`;\n    return objectOnly ? o[name] : o[name]();\n}\n","import assign from 'object-assign';\nimport {isFunction} from 'd3-let';\nimport * as d3_scale from 'd3-scale';\n\nimport createVisual, {visuals} from './base';\nimport Visual from './visual';\nimport camelFunction from '../utils/camelfunction';\n\n//\n//  crateChart\n//\n//  A chart is a drawing of series data in two dimensional\nexport default function (type) {\n    var protos = [{}, vizPrototype, chartPrototype];\n    for (var i=1; i<arguments.length; ++i) protos.push(arguments[i]);\n    return createVisual(type, assign.apply(undefined, protos));\n}\n\n\n//  Viz Prototype\n//  =================\nexport const vizPrototype = {\n\n    initialise (element) {\n        // No visual parent, create the visual\n        var visual = this.visualParent;\n        if (!visual) {\n            this.visualParent = visual = new Visual(element, this.options, null, this.model);\n            this.model = visual.model.$new();\n            this.options = {};\n        } else if (visual.visualType !== 'visual')\n            throw new Error(`visual parent of ${this.visualType} can only be \"visual\"`);\n        visual.layers.push(this);\n    },\n\n    //\n    // paper object for this visualisation\n    paper () {\n        var visual = this.getModel('visual'),\n            paper = this._paper;\n        if (paper && paper.paperType === visual.render) return paper;\n        var PaperType = visuals.papers[visual.render];\n        if (!PaperType) throw new Error(`Unknown paper ${visual.render}`);\n        paper = new PaperType(this);\n        this._paper = paper;\n        return paper;\n    },\n\n    translate (x, y) {\n        if (isFunction(x)) {\n            return function (d) {\n                var xt = x(d) || 0,\n                    yt = y(d) || 0;\n                return `translate(${xt}, ${yt})`;\n            };\n        } else return `translate(${x}, ${y})`;\n    },\n\n    getScale (name) {\n        return camelFunction(d3_scale, 'scale', name);\n    }\n};\n\n\nexport const chartPrototype = {\n\n    //  override draw method\n    draw () {\n        visuals.events.call('before-draw', undefined, this);\n\n        this.getData().then(frame => {\n            if (frame) {\n                this.doDraw(frame);\n                visuals.events.call('after-draw', undefined, this);\n            }\n        });\n    }\n};\n","import assign from 'object-assign';\nimport {select} from 'd3-selection';\n\nimport {visuals} from './base';\n\n\nexport default function createPaper (type, proto) {\n\n    function Paper (viz) {\n        var element = this.initialise(viz);\n        Object.defineProperties(this, {\n            element: {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            paperType: {\n                get () {\n                    return type;\n                }\n            }\n        });\n    }\n\n    Paper.prototype = assign({}, paperPrototype, proto);\n\n    visuals.papers[type] = Paper;\n    return Paper;\n}\n\n\nconst paperPrototype = {\n\n    initialise () {},\n    transition () {},\n    size (box) {\n        this.sel\n            .attr('width', box.width)\n            .attr('height', box.height);\n        return this;\n    },\n\n    group (cname) {\n        if (!cname) cname = 'main';\n        var sel = this.sel;\n        sel\n            .selectAll(`.${cname}`)\n            .data([0]).enter()\n            .append('g').classed(cname, true);\n        return sel.select(`.${cname}`);\n    },\n\n    dim (value) {\n        return value;\n    }\n};\n\n\nexport const Svg = createPaper('svg', {\n\n    initialise (viz) {\n        var svg = viz.visualParent.paper.append('svg')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true);\n        return svg.node();\n    }\n});\n","//\n//  Add a menu buttom to a visual\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\n\n\nglobalOptions.menu = {\n    display: false,\n    height: '8%',\n    maxHeight: 50,\n    minHeight: 20\n};\n\n\nvisuals.events.on('after-init.menu', viz => {\n    if (viz.visualType === 'visual') {\n        var menu = viz.getModel('menu');\n        if (menu.display) {\n            viz.menu = viz.sel.insert('nav', ':first-child').classed('d3-nav navbar p-1', true);\n            viz.menu.append('h4').classed('title', true);\n        }\n    }\n});\n\nvisuals.events.on('before-draw.menu', viz => {\n    if (viz && viz.menu) {\n        refreshMenu(viz);\n    }\n});\n\n\nfunction refreshMenu(viz) {\n    var menu = viz.getModel('menu'),\n        height = viz.dim(menu.height, viz.height, menu.minHeight, menu.maxHeight);\n    viz.menu.style('height', `${height}px`);\n}\n","//\n//  dataStore integration with visuals\nimport {isString, pop} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport {visuals} from '../core/base';\nimport DataStore from '../data/store';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\n//  getData method\n//  =====================\n//\n//  Inject a method for easily retrieving data from the datastore\nvizPrototype.getData = function () {\n    var name = this.model.data;\n    if (!name) {\n        warn('Visual without data name, cannot get data');\n        return resolvedPromise();\n    }\n    return this.dataStore.getData(name);\n};\n\n\nvisuals.events.on('before-init.data', viz => {\n    if (!viz.isViz) return;\n    // remove data from options\n    viz.data = pop(viz.options, 'data');\n});\n\n\nvisuals.events.on('after-init.data', viz => {\n    Object.defineProperties(viz, {\n        dataStore : {\n            get () {\n                if (viz.visualParent) return viz.visualParent.dataStore;\n                return viz.model.dataStore;\n            }\n        },\n    });\n    if (viz.isViz) setupLayer(viz);\n    else setupVisual(viz);\n});\n\n\nfunction setupVisual (visual) {\n    var store = visual.dataStore,\n        data = pop(visual.options, 'data');\n    //\n    if (!store) {\n        store = new DataStore(visual.model);\n        visual.model.dataStore = store;\n    }\n    store.addSources(data);\n}\n\n\nfunction setupLayer (layer) {\n    var store = layer.dataStore,\n        data = pop(layer, 'data');\n    if (!data) return;\n    if (isString(data)) data = {source: data};\n    if (!data.name) data.name = layer.model.uid;\n    data = store.addSources(data);\n    if (data)\n        layer.model.$set('data', data.name);\n    else\n        warn(`Could not create data source ${data.name}`);\n}\n","import {inBrowser} from 'd3-let';\nimport {viewDebounce} from 'd3-view';\nimport {select} from 'd3-selection';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nif (!globalOptions.resizeDelay)\n    globalOptions.resizeDelay = 200;\n\n\nif (inBrowser) {\n    var resize = viewDebounce(() => {\n        visuals.live.forEach(p => p.resize());\n    }, globalOptions.resizeDelay);\n\n    select(window).on('resize.visuals', resize);\n}\n","// Title plot annotation\nimport {isString} from 'd3-let';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.title = {\n    text: null,\n    fontSize: '5%',\n    minFontSize: 15,\n    maxFontSize: 25\n};\n\n\nvisuals.events.on('before-init.title', viz => {\n    var title = viz.options.title;\n    if (isString(title)) viz.options.title = {text: title};\n});\n\n\nvisuals.events.on('before-draw.title', viz => {\n    var title = viz.getModel('title');\n    if (!title.text) return;\n    var visual = viz.isViz ? viz.visualParent : viz;\n    if (visual.visualType === 'visual' && visual.menu) menuTitle(visual, title, viz);\n});\n\n\nfunction menuTitle(visual, title, viz) {\n    var height = number(visual.menu.style('height')),\n        maxSize = title.maxFontSize ? Math.min(height-4, title.maxFontSize) : height-4,\n        size = viz.dim(title.fontSize, visual.height, title.minFontSize, maxSize);\n    visual.menu.select('.title')\n        .html(title.text)\n        .style('font-size', `${size}px`)\n        .style('line-height', `${height}px`);\n}\n\n\nfunction number (px) {\n    return +px.substring(0, px.length-2);\n}\n","import {isObject} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst KEYS = ['top', 'bottom', 'left', 'right'];\nconst LEFTRIGHT = ['left', 'right'];\n\n\n// margin for visual marks\nglobalOptions.margin = {\n    top: 20,\n    bottom: 20,\n    left: 20,\n    right: 20\n};\n// padding for the visual paper\nglobalOptions.padding = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n};\n\n\n//\n//  Bounding box for a viz\n//  ==========================\nvizPrototype.boundingBox = function () {\n    var width = this.visualParent.width,\n        height = this.visualParent.height,\n        margin = calculate(this.getModel('margin'), width, height),\n        padding = calculate(this.getModel('padding'), width, height),\n        total = KEYS.reduce((o, key) => {\n            o[key] = margin[key] + padding[key];\n            return o;\n        }, {});\n    return {\n        width: width,\n        height: height,\n        margin: margin,\n        padding: margin,\n        total: total,\n        innerWidth: width - total.left - total.right,\n        innerHeight: height - total.top - total.bottom\n    };\n};\n\n\nvisuals.events.on('after-init.margin', viz => {\n    viz.margin = margins('margin', viz);\n    viz.padding = margins('padding', viz);\n});\n\n\nfunction margins (name, viz) {\n    var value = viz.options[name];\n\n    if (value !== undefined && !isObject(value)) {\n        var v = value || 0;\n        viz.options[name] = {\n            left: v,\n            right: v,\n            top: v,\n            bottom: v\n        };\n    }\n}\n\n\nfunction calculate (model, width, height) {\n    return KEYS.reduce((o, key) => {\n        o[key] = sizeValue(model[key], LEFTRIGHT.indexOf(key) > -1 ? width : height);\n        return o;\n    }, {});\n}\n","import {map} from 'd3-collection';\nimport {axisTop, axisBottom, axisLeft, axisRight} from 'd3-axis';\n\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\n\nconst axisOrientation = map({\n    top: axisTop,\n    bottom: axisBottom,\n    left: axisLeft,\n    right: axisRight\n});\n\nglobalOptions.xAxis = {\n    location: \"bottom\"\n};\n\nvizPrototype.axis = function (orientation, scale) {\n    return axisOrientation.get(orientation)(scale);\n};\n","import {map} from 'd3-collection';\nimport {range} from 'd3-array';\nimport {\n    scaleSequential,\n    interpolateViridis, interpolateInferno, interpolateMagma,\n    interpolatePlasma, interpolateWarm, interpolateCool,\n    interpolateRainbow, interpolateCubehelixDefault\n} from 'd3-scale';\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\nexport const colorScales = map();\n\n\nglobalOptions.color = {\n    scale: 'cool',\n    stroke: '#333',\n    strokeOpacity: 1,\n    fillOpacity: 1\n};\n\ncolorScales.set('viridis', () =>  scaleSequential(interpolateViridis));\ncolorScales.set('inferno', () =>  scaleSequential(interpolateInferno));\ncolorScales.set('magma', () =>  scaleSequential(interpolateMagma));\ncolorScales.set('plasma', () =>  scaleSequential(interpolatePlasma));\ncolorScales.set('warm', () =>  scaleSequential(interpolateWarm));\ncolorScales.set('cool', () =>  scaleSequential(interpolateCool));\ncolorScales.set('rainbow', () =>  scaleSequential(interpolateRainbow));\ncolorScales.set('cubehelix', () =>  scaleSequential(interpolateCubehelixDefault));\n\n//\n//  Color scale method\n//  ==========================\nvizPrototype.colorScale = function () {\n    var color = this.getModel('color'),\n        scale = colorScales.get(color.scale);\n    if (!scale) throw new Error(`Unknown scale ${color.scale}`);\n    return scale();\n};\n\n\nvizPrototype.colors = function (n) {\n    var scale = this.colorScale().domain([0, n+1]);\n    return range(1, n+1).map(v => scale(v));\n};\n","import {legendColor, legendSize, legendSymbol} from 'd3-svg-legend';\nimport {map} from 'd3-collection';\n\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\nglobalOptions.legend = {\n    location: \"top-right\",\n    orient: \"vertical\",\n    fontSize: '3%',\n    minFontSize: 10,\n    maxFontSize: 20,\n    offsetX: 10,\n    offsetY: 10\n};\n\n\nconst legends = {\n    color: legendColor,\n    size: legendSize,\n    symbol: legendSymbol\n};\n\n\n//\n//  Legend method\n//  ==========================\nvizPrototype.legend = function (cfg, box) {\n    var vizModel = this.getModel(),\n        lgModel = this.getModel('legend'),\n        name = vizModel.legendType,\n        size = this.dim(lgModel.fontSize, box.height, lgModel.minFontSize, lgModel.maxFontSize);\n    if (!name) return;\n    var legend = legends[name];\n    if (!legend) return warn(`Could not load legend ${name}`);\n    legend = legend().orient(lgModel.orient);\n    for (let key in cfg) legend[key](cfg[key]);\n    var g = this.paper()\n            .group('legend')\n            .style('font-size', `${size}px`)\n            .call(legend),\n        bb = locations.get(lgModel.location)(g.node().getBBox(), box, lgModel);\n    g.attr('transform', this.translate(bb.x, bb.y));\n};\n\n\nconst locations = map({\n    top,\n    bottom,\n    right,\n    left,\n    'top-left': topLeft,\n    'top-right': topRight,\n    'bottom-left': bottomLeft,\n    'bottom-right': bottomRight\n});\n\n\nfunction top (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottom (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction right (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: options.offsetY\n    };\n}\n\n\nfunction left (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottomLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction bottomRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n","//\n// Use clusterize.js to render the table\nexport default function (table, options) {\n    return table.require('clusterize.js@0.17.6').then(Clusterize => clusterize(Clusterize, table, options));\n}\n\n\nfunction clusterize(Clusterize) {\n    var cl = new Clusterize();\n    return cl;\n}\n","export default function (table) {\n    return table;\n}\n","//\n//  bootstrap styling for tabular component\n//  ==========================================\n//\nimport assign from 'object-assign';\n\n\nconst defaults = {\n    over: true,\n    small: true,\n    bordered: true,\n    loadingClass: 'table-info',\n    loadingTextClass: 'text-center'\n};\n\n\nexport default function (table, options) {\n    var style = table.model.style;\n    style.$update(assign({}, defaults, options));\n\n    style.tableClass = 'table table-responsive';\n    if (style.striped) style.tableClass += ' table-striped';\n    if (style.over) style.tableClass += ' table-hover';\n    if (style.bordered) style.tableClass += ' table-bordered';\n    if (style.small) style.tableClass += ' table-sm';\n}\n","//\n//  Plugins for visuals and tabular\n//\n// visual plugins\nimport './menu';\nimport './data';\nimport './responsive';\nimport './title';\nimport './margin';\nimport './axis';\nimport './color';\nimport './legend';\n//\n//  This module depends on core but not on components\nimport clusterize from './clusterize';\nimport paginate from './paginate';\nimport bootstrap from './bootstrap';\n\n// plugins add functionalities to a d3 table\n// A plugin is a function accepting two parameters:\n//  * the table component\n//  * object with configuration parameters\nexport default {\n    bootstrap,\n    clusterize,\n    paginate\n};\n","import createVisual, {visuals} from './base';\n\n\nexport default createVisual('container', {\n\n    initialise () {\n        this.live = [];\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    draw() {\n        visuals.events.call('before-draw', undefined, this);\n        this.live.forEach(visual => {\n            visual.draw();\n        });\n        visuals.events.call('after-draw', undefined, this);\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n    }\n});\n","import assign from 'object-assign';\nimport {isString, isObject} from 'd3-let';\n\nimport VisualContainer from '../core/container';\n\n//\n//  vizComponent base prototype\n//  =============================\n//\n//  Some common properties and methods for all visualize components\n//\nexport const vizComponent = {\n    props: [\n        'schema',\t    // Schema is a collection of fields to display in the table\n        'datasource',\t// Data source\n        'plugins',      // list of string/objects\n\t],\n\n    render (props, attrs, el) {\n        var self = this,\n            inner = this.select(el).html();\n        //\n        // build\n        return this.getSchema(props.schema, schema => {\n            if (!isObject(schema)) schema = {};\n            return self.build(schema, inner, attrs);\n        });\n    },\n\n    // get the schema from the input schema property\n    getSchema (input, build) {\n        var parent = this.model.visual;\n\n        // allow to specify the schema as an entry of\n        // visuals object in the dashboard schema\n        if (parent && parent !== this.model && isString(input)) {\n            var schema = parent.options.visuals[input];\n            if (schema) input = schema;\n        }\n\n        if (isString(input)) {\n            return this.json(input).then(build);\n        }\n        else return build(input);\n    },\n    //\n    // build the visual component has the schema available\n    build () {}\n};\n//\n//  Dashboard Component\n//  ========================\n//\n//  A collection of visual components arranged according\n//  to a custom layout.\n//\n//  * Dashboard visuals are independent of each other but\n//    interact via the data object\n//  * The Dashboard layout is given by the inner HTML elements\n//  * The configuration is obtained via the schema property which\n//    can be either:\n//      1) an object\n//      2) a url\nexport default assign({}, vizComponent, {\n\n    build (schema, inner, attrs) {\n        var model = this.model,\n            sel = this.createElement('div'),\n            root = model.root;\n        if (attrs.class) sel.attr('class', attrs.class);\n        if (!schema.visuals) schema.visuals = {};\n        model.visual = new VisualContainer(sel.node(), schema, model.visual);\n        if (!root.visualDashboard) root.visualDashboard = model.visual;\n        return this.mountInner(sel, inner);\n    }\n});\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\n\nimport {vizComponent} from './dashboard';\nimport Visual from '../core/visual';\n\n\n//\n//  Visual component\n//  ======================\n//\n//  An element containing a visualization\nexport default assign({}, vizComponent, {\n\n    build (schema) {\n        var sel = this.createElement('div'),\n            type = schema.type || 'visual',\n            model = this.model,\n            options = {};\n\n        if (type === 'visual')\n            options = schema;\n        else\n            options.visual = pop(schema, 'visual') || {};\n\n        model.visual = new Visual(sel.node(), options, model.visual);\n        if (type !== 'visual') model.visual.addVisual(schema);\n        return sel;\n    },\n\n    // once the element is mounted in the dom, draw the visual\n    mounted () {\n        this.model.visual.draw();\n    }\n});\n","import {isoParse} from 'd3-time-format';\n\nimport locale from './locale';\n\n\nexport const parsers = {\n    date: isoParse,\n\n    string (value) {\n        return ''+value;\n    }\n};\n\n// formatters\nexport const formatters = {\n\n    number (value) {\n        return value;\n    },\n\n    date (value) {\n        return locale.formatDate(value);\n    },\n\n    boolean (value) {\n        return value;\n    }\n};\n","import {isObject, isArray} from 'd3-let';\n\nimport {formatters, parsers} from '../data/formatters';\n\n\n//\n// Create table columns from schema\nexport default function (schema) {\n    var columns = [];\n    let col;\n\n\tif (!schema) return columns;\n\n    if (isArray(schema))\n        schema = {properties: schema};\n\n    if (isObject(schema.properties)) {\n        for (let key in schema.properties) {\n            col = schema.properties[key];\n            if (isObject(col)) {\n                if (!col.name) col.name = key;\n                columns.push(col);\n            }\n        }\n    } else\n        Array.prototype.push.apply(columns, schema.properties);\n\n    return columns.map((col) => {\n        if (!isObject(col)) col = {name: col};\n        if (!col.label) col.label = col.name;\n        if (!col.hidden) col.hidden = false;\n        if (!col.$parse) col.$parse = parsers[col.type] || parsers.string;\n        if (!col.$html) col.$html = formatters[col.type] || $html;\n        return col;\n    });\n}\n\n\nfunction $html (value) {\n    return value;\n}\n","// import {timeout} from 'd3-timer';\nimport assign from 'object-assign';\nimport {isString, isArray, isPromise} from 'd3-let';\n\nimport warn from '../utils/warn';\nimport createColumns from '../utils/columns';\nimport tablePlugins from '../plugins/index';\nimport {vizComponent} from './dashboard';\n\n\nconst tableTpl = `<table d3-class=\"[style.tableClass, loadingData ? 'loading' : null]\">\n<thead d3-class=\"style.headerClass\">\n<tr d3-class=\"style.headerRowClass\">\n  <th d3-for=\"col in columns\"\n        d3-html=\"col.label\"\n        d3-if=\"!col.hidden\">\n  </th>\n</tr>\n<tr d3-if=\"loadingData\" d3-class=\"style.loadingClass\">\n    <td d3-attr-colspan=\"columns.length\">\n        <p d3-class=\"style.loadingTextClass\">loading data</p>\n    </td>\n</tr>\n</thead>\n<tbody></tbody>\n</table>`;\n\n\nexport default assign({}, vizComponent, {\n\n\tmodel () {\n        return {\n            header: true,            // show header\n            columns: [],             // table columns\n            loadingData: false,\n            style: {\n                tableClass: null,\n                headerClass: null,\n                headerRowClass: null,\n                loadingClass: 'loading',\n                loadingTextClass: null\n            }\n        };\n\t},\n\n\tbuild (schema) {\n\t\tvar self = this,\n            model = this.model,\n            plugins = schema.plugins || [];\n        // model.allData = crossfilter([]);\n        this.records = {};\n        this.data = [];\n        this.template = tableTpl;\n\n\t\tmodel.columns = createColumns(schema);\n\t\t// if (data.dataurl) model.dataLoader = new DataLoader(data.dataurl);\n\n        if (!isArray(plugins)) {\n            warn('plugins should be an array');\n        } else {\n            var promises = [];\n            let promise;\n            plugins.forEach(plugin => {\n                if (isString(plugin)) plugin = {name: plugin};\n                if (!tablePlugins[plugin.name])\n                    warn(`Unknown table plugin ${plugin.name}`);\n                else {\n                    promise = tablePlugins[plugin.name](self, plugin);\n                    if (isPromise(promise)) promises.push(promise);\n                }\n            });\n            if (promises.length)\n                 return Promise.all(promises).then(() => self.viewElement(self.template));\n        }\n\n\t\treturn this.viewElement(this.template);\n\t},\n\n\tmounted () {\n        var vm = this,\n            model = this.model;\n\t\tif (model.dataLoader) {\n\t\t\tvar p = model.dataLoader.load(model.columns);\n            if (p) {\n                model.loadingData = true;\n                p.then((data) => {\n                    // var allData = model.allData;\n                    model.loadingData = false;\n                    addData(vm, data);\n                }, (err) => {\n                    model.loadingData = false;\n                    return err;\n                });\n            }\n        }\n\t}\n});\n\n// new data to include in the table\nfunction addData (vm, newData) {\n    var records = vm.records,\n        data = vm.data,\n        model = vm.model,\n        delayData = newData;\n\n    let record, value;\n\n    newData = delayData.splice(0, 100);\n\n    newData.forEach((d) => {\n        if (d.id) {\n            record = d.id ? records[d.id] : null;\n            if (record)\n                d = assign(record, d);\n            else {\n                data.push(d);\n                records[d.id] = d;\n            }\n        } else\n            data.push(d);\n        model.columns.forEach((col) => {\n            d[col.name] = col.$parse(d[col.name]);\n        });\n    });\n\n    //if (delayData.length)\n    //    timeout(() => addData(vm, delayData));\n\n    var rows = vm.sel.select('tbody')\n                .selectAll('tr').data(data);\n\n    rows\n        .enter()\n            .append('tr')\n            .attr('scope', 'row')\n            .selectAll('td')\n            .data(model.columns)\n            .enter()\n                .append('td')\n                .style('display', (col) => {\n                    return col.hidden ? 'none' : null;\n                })\n                .html(function (col) {\n                    record = this.parentNode.__data__;\n                    value = record[col.name];\n                    return col.$html(value === undefined ? '' : value);\n                });\n}\n","//\n//  d3-view components\n//  ======================\n//\n//  d3-view plugin for visualization components\n//\nimport tabularPlugins from '../plugins/index';\nimport dashboard from './dashboard';\nimport visual from './visual';\nimport tabular from './tabular';\n\n\n// Visual components plugin\nexport default {\n    tabularPlugins,\n\n    install (vm) {\n        vm.addComponent('dashboard', dashboard);\n        vm.addComponent('visual', visual);\n        vm.addComponent('tabular', tabular);\n    }\n\n};\n","export default function (x) {\n    return function constant() {\n        return x;\n    };\n}\n","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function (d) {\n    return d;\n}\n","import constant from \"../utils/constant\";\nimport descending from \"../utils/descending\";\nimport identity from \"../utils/identity\";\n\n//\n//  Pyramid Shape generator\n//  ============================\nexport default function () {\n    var value = identity,\n        pad = constant(0),\n        height = 1,\n        base = 1;\n\n    function pyramid (data) {\n        let i, j, k, points, fraction,\n            hi, x, y, v0, ph, pj;\n        var n = data.length,\n            r = 0.5*base/height,\n            polygons = new Array(n),\n            index = new Array(n);\n\n        for (i=0; i<n; ++i) {\n            polygons[index[i] = i] = +value(data[i], i, data);\n        }\n\n        // Sort the polygons\n        index.sort((i, j) => {return descending(polygons[i], polygons[j]);});\n\n        // Compute the polygons! They are stored in the original data's order.\n        v0 = polygons[index[0]];\n        hi = null;\n\n        for (i=n-1; i>=0; --i) {\n            points = [];\n            if (hi === null)\n                points.push([0, 0]);\n            else {\n                y = hi + ph;\n                x = y*r;\n                points.push([x, y]);\n                points.push([-x, y]);\n            }\n            j = index[i];\n            k = n - i - 1;\n            fraction = polygons[j]/v0;\n            pj = Math.sqrt(fraction);\n            hi = height*pj;\n            ph = i ? pad(pj, k) : 0;\n            y = hi - ph;\n            x = y*r;\n            points.push([-x, y]);\n            points.push([x, y]);\n            polygons[j] = {\n                index: k,\n                value: polygons[j],\n                fraction: fraction,\n                points: points,\n                data: data[j]\n            };\n        }\n        return polygons;\n    }\n\n    pyramid.value = function(_) {\n        return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pyramid) : value;\n    };\n\n    pyramid.base = function (_) {\n        return arguments.length ? (base = _, pyramid) : base;\n    };\n\n    pyramid.height = function (_) {\n        return arguments.length ? (height = _, pyramid) : height;\n    };\n\n    pyramid.pad = function(_) {\n        return arguments.length ? (pad = typeof _ === \"function\" ? _ : constant(+_), pyramid) : pad;\n    };\n\n    return pyramid;\n}\n","import * as d3_shape from 'd3-shape';\nimport {extent} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport warn from '../utils/warn';\nimport accessor from '../utils/accessor';\nimport camelFunction from '../utils/camelfunction';\n\n\nexport const lineDrawing = {\n\n    fill (meta) {\n        var cscale = this.colorScale().domain([0, meta.length-1]);\n\n        function fill (d, index) {\n            return cscale(index);\n        }\n\n        fill.scale = cscale;\n\n        return fill;\n    },\n\n    curve (name) {\n        var obj = camelFunction(d3_shape, 'curve', name, true);\n        if (!obj) {\n            warn(`Could not locate curve type \"${name}\"`);\n            obj = camelFunction(d3_shape, 'curve', 'cardinalOpen', true);\n        }\n        return obj;\n    },\n\n    range (data, x, y, agg) {\n        var range = {\n            x: extent(data, x),\n            y: extent(data, y)\n        };\n        if (agg) {\n            Array.prototype.push.apply(agg.x, range.x);\n            Array.prototype.push.apply(agg.y, range.y);\n        }\n    },\n\n    newRange () {\n        return {\n            x: [],\n            y: []\n        };\n    }\n};\n\n//\n//  Line Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('linechart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'cardinalOpen',\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear'\n    },\n\n    doDraw (frame) {\n        var self = this,\n            range = this.newRange(),\n            model = this.getModel(),\n            color = this.getModel('color'),\n            x = accessor(model.x),\n            y = accessor(model.y),\n            data = frame.series.values(),\n            meta = frame.series.keys().map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            }),\n            box = this.boundingBox(),\n            paper = this.paper(),\n            lines = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.line').data(data),\n            strokeColor = this.fill(meta),\n            //merge = paper.transition('update'),\n            line = d3_shape.line()\n                .x(this.x(box, range.x))\n                .y(this.y(box, range.y))\n                .curve(this.curve(model.curve));\n\n        lines\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', model.lineWidth)\n            .merge(lines)\n                //.transition(merge)\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', line);\n\n        lines\n            .exit()\n            .remove();\n    },\n\n    x (box, ranges) {\n        var model = this.getModel(),\n            scale = this.getScale(model.scaleX)\n                .domain(extent(ranges))\n                .range([0, box.innerWidth]);\n        return function (d) {\n            return scale(d[model.x]);\n        };\n    },\n\n    y (box, ranges) {\n        var model = this.getModel(),\n            scale = this.getScale(model.scaleY)\n                .domain(extent(ranges))\n                .range([box.innerHeight, 0]);\n        return function (d) {\n            return scale(d[model.y]);\n        };\n    }\n});\n","import {stack} from 'd3-shape';\nimport {max} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport {lineDrawing} from './line';\n//\n//  Bar Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('barchart', lineDrawing, {\n\n    options: {\n        orientation: 'vertical',\n        // stack multiple y series?\n        sortby: null, // specify \"x\" or \"y\"\n        stack: true,\n        normalize: false,\n        scale: 'linear',\n        padding: 0.1,\n        x: 'x',\n        y: 'y',\n        groupby: null,  // group data by a field for staked or grouped bar chart\n        //\n        // legend & tooltip\n        valueformat: '.1f',\n        legendType: 'color',\n        legendLabel: 'label'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            data = frame.data,\n            box = this.boundingBox(),\n            paper = this.paper().size(box),\n            bars = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.group'),\n            x = model.x,\n            y = model.y,\n            groupby = model.groupby,\n            sx = this.getScale('band'),\n            sy = this.getScale(model.scale),\n            sz = this.getScale('ordinal'),\n            stacked = false,\n            width = null,\n            height = null,\n            xrect = x0,\n            yrect = y0,\n            yi = 1,\n            groups;\n\n        if (model.orientation === 'vertical') {\n            sx.rangeRound([0, box.innerWidth]).paddingInner(model.padding);\n            sy.rangeRound([box.innerHeight, 0]);\n            width = sx.bandwidth;\n            height = bardim;\n        } else {\n            sx.rangeRound([0, box.innerHeight]).paddingInner(model.padding);\n            sy.rangeRound([0, box.innerWidth]);\n            yi = 0;\n            width = bardim;\n            height = sx.bandwidth;\n            xrect = y0;\n            yrect = x0;\n        }\n\n        if (groupby) {\n            groups = frame.dimension(groupby).group().top(Infinity).map(g => g['key']);\n            if (groups.length <= 1) groups = null;\n        }\n\n        if (groups) {\n            frame = frame.pivot(x, groupby, y);\n            if (model.sortby === 'y') frame = frame.sortby('total');\n            data = frame.data;\n            sz.domain(groups).range(this.colors(data.length));\n            if (model.stack) {\n                if (model.normalize)\n                    this.normalize(frame.data);\n                stacked = true;\n            }\n        }\n\n        // set domain for the labels\n        sx.domain(data.map(d => d[x]));\n\n        if (stacked) {\n            sy.domain([0, max(data, d => d.total)]).nice();\n            data = stack().keys(groups)(data);\n            var rects = bars.data(data)\n                            .enter()\n                                .append('g')\n                                .classed('group', true)\n                                .attr('fill', d => sz(d.key))\n                            .merge(bars)\n                                .attr('fill', d => sz(d.key))\n                                .attr('stroke', color.stroke)\n                                .attr('stroke-opacity', color.strokeOpacity)\n                                .attr('fill-opacity', color.fillOpacity)\n                                .selectAll('rect')\n                                .data(d => d);\n            rects.enter()\n                .append('rect')\n                .merge(rects)\n                    .transition()\n                    .attr('x', xrect)\n                    .attr('y', yrect)\n                    .attr('height', height)\n                    .attr('width', width);\n\n\n            var axis = this.axis('left', sx).tickSizeOuter(0);\n            paper.group('axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .call(axis);\n        } else {\n            var x1 = self.getScale('band').padding(0.5*model.padding);\n            return x1;\n        }\n\n        if (model.legendType && groups) {\n            this.legend({scale: sz}, box);\n        }\n\n        function bardim (d) {\n            return sy(d[1-yi]) - sy(d[yi]);\n        }\n\n        function x0 (d) {\n            return sx(d.data[x]);\n        }\n\n        function y0 (d) {\n            return sy(d[yi]);\n        }\n    }\n});\n","import {pie, arc} from 'd3-shape';\nimport {scaleOrdinal} from 'd3-scale';\nimport {viewExpression} from 'd3-view';\nimport {format} from 'd3-format';\n\nimport createChart from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst pi = Math.PI;\nconst rad = pi/180;\n\n\nexport const proportional = {\n\n    fill (data) {\n        var cscale = this.colorScale().domain([0, data.length-1]),\n            colors = data.map(d => cscale(d.index));\n\n        function fill (d) {\n            return colors[d.index];\n        }\n\n        fill.scale = cscale;\n        fill.colors = colors;\n\n        return fill;\n    },\n\n    proportionalData (frame, field) {\n        return frame.dimension(field).top(Infinity);\n    },\n\n    total (field) {\n        var total = 0;\n\n        function value (d) {\n            total += d[field];\n            return d[field];\n        }\n\n        value.total = () => total;\n        return value;\n    }\n};\n\n//\n//  Pie Chart\n//  =============\n//\nexport default createChart('piechart', proportional, {\n\n    options: {\n        // The data values from this field will be encoded as angular spans.\n        // If omitted, all pie slices will have equal spans\n        field: 'data',\n        label: 'label',\n        startAngle: 0,\n        endAngle: 360,\n        sort: false,\n        innerRadius: 0,\n        padAngle: 0,\n        cornerRadius: 0,\n        lineWidth: 1,\n        //\n        fractionFormat: '.1%',\n        legendType: 'color',\n        legendLabel: \"label + ' - ' + format(fraction)\"\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            field = model.field,\n            box = this.boundingBox(),\n            outerRadius = Math.min(box.innerWidth, box.innerHeight)/2,\n            innerRadius = sizeValue(model.innerRadius, outerRadius),\n            total = this.total(field),\n            angles = pie()\n                .padAngle(rad*model.padAngle)\n                .startAngle(rad*model.startAngle)\n                .endAngle(rad*model.endAngle)\n                .value(total),\n            arcs = arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius)\n                .cornerRadius(model.cornerRadius),\n            paper = this.paper(),\n            //update = paper.transition('update'),\n            data = angles(this.proportionalData(frame, field)),\n            fill = this.fill(data),\n            slices = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                .selectAll('.slice').data(data);\n\n        slices\n            .enter()\n                .append('path')\n                .attr('class', 'slice')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n            .merge(slices)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', arcs)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        slices.exit().remove();\n\n        if (!model.legendType) return;\n        total = total.total();\n        var expr = viewExpression(model.legendLabel),\n            fmt = format(model.fractionFormat),\n            labels = data.map((d, idx) => {\n                return expr.eval({\n                    d: d,\n                    value: d.value,\n                    format: fmt,\n                    total: total,\n                    fraction: d.value/total,\n                    label: d.data[model.label] || idx\n                });\n            });\n        this.legend({\n            scale: scaleOrdinal().domain(labels).range(fill.colors)\n        }, box);\n    }\n});\n","//\n//  Custom Symbol type\n//  =====================\n//\n//  Draw a polygon given an array of points\n//  This can be used as type in a d3-shape symbol\nexport default function (points) {\n\n    return {\n        draw (context) {\n            points.forEach((point, idx) => {\n                if (!idx) context.moveTo(point[0], point[1]);\n                else context.lineTo(point[0], point[1]);\n            });\n            context.closePath();\n        }\n    };\n}\n","import {symbol} from 'd3-shape';\nimport {viewExpression} from 'd3-view';\nimport {format} from 'd3-format';\n\nimport createChart from '../core/chart';\nimport pyramid from '../transforms/pyramid';\nimport polygon from '../utils/polygon';\nimport {proportional} from './pie';\n\n\nexport default createChart('pyramidchart', proportional, {\n\n    options: {\n        field: 'data',\n        label: 'label',\n        pad: 0,\n        lineWidth: 1,\n        legendType: 'color',\n        legendLabel: \"label + ' - ' + format('.1%', fraction)\"\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            field = model.field,\n            color = this.getModel('color'),\n            box = this.boundingBox(),\n            pad = this.dim(model.pad, Math.min(box.innerWidth, box.innerHeight)),\n            polygons = pyramid()\n                .base(box.innerWidth)\n                .height(box.innerHeight)\n                .pad(pad)\n                .value(d => d[field]),\n            data = frame.new(polygons(this.proportionalData(frame, field))).dimension('fraction').bottom(Infinity),\n            marks = symbol().type(d => polygon(d.points)).size(1),\n            fill = this.fill(data),\n            paper = this.paper(),\n            segments = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top))\n                .selectAll('.segment').data(data);\n\n        segments\n            .enter()\n                .append('path')\n                .attr('class', 'segment')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n            .merge(segments)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', marks)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        segments.exit().remove();\n\n        if (!model.legendType) return;\n        var expr = viewExpression(model.legendLabel),\n            fmt = (specifier, value) => format(specifier)(value),\n            labels = data.map((d, idx) => {\n                return expr.eval({\n                    d: d,\n                    value: d.value,\n                    format: fmt,\n                    fraction: d.fraction,\n                    label: d.data[model.label] || idx\n                });\n            });\n        this.legend({\n            scale: this.getScale('ordinal').domain(labels).range(fill.colors)\n        }, box);\n    }\n\n});\n","import createChart from '../core/chart';\n\n//\n//  Treemap\n//  =============\n//\nexport default createChart('treemap', {\n    requires: ['d3-treemap']\n\n});\n","//\nexport {version as visualizeVersion} from './package.json';\n//\nexport {default as randomPath} from './src/utils/randompath';\n//\n// Data layer\nexport {default as DataStore} from './src/data/store';\nexport {default as dataSources} from './src/data/sources';\nexport {default as dataLocale} from './src/data/locale';\n\n//\n//  Core API\nexport {visuals} from './src/core/base';\nexport {default as crateChart} from './src/core/chart';\nexport {default as cratePaper, Svg} from './src/core/paper';\n//\n//  Components\nexport {default as visualComponents} from './src/components/index';\n\n// utilities\nexport {colorScales} from './src/plugins/color';\nexport {default as pyramid} from './src/transforms/pyramid';\n//\n//  Charts\n//  =========\n//\n//  Last import, important!\nexport {default as Visual} from './src/core/visual';\nexport {default as BarChart} from './src/charts/bar';\nexport {default as LineChart} from './src/charts/line';\nexport {default as PieChart} from './src/charts/pie';\nexport {default as PyramidChart} from './src/charts/pyramid';\nexport {default as Treemap} from './src/charts/treemap';\n"],"names":["defaults","size","options","assign","t","range","S","sigma","drift","data","x","y","norm","randomNormal","dx","i","length","config","_data","isArray","isObject","resolvedPromise","asFrame","prefix","msg","logger","warn","schemes","value","isString","indexOf","split","isUrl","url","fetch","viewProviders","self","then","parse","response","ct","headers","get","text","csvParse","json","source","store","frame","Promise","all","map","getData","frames","mergeFrames","expression","viewExpression","model","eval","field","d","DataFrame","serie","defineProperties","dimensions","series","prototype","_inner","cf","crossfilter","name","keepExisting","arguments","current","dispose","accessor","dimension","top","new","Infinity","key","total","group","reduce","pivoter","Object","m","pk","pv","o","record","mapper","filter","a","Array","fill","operations","count","array","v","undefined","fields","ops","as","countAll","fillArray","aggregate","op","forEach","index","push","sortby","groupby","timeseries","dim","groups","newframe","tmp","filterExact","set","globalOptions","dateFormat","converters","entry","utcParse","parseFloat","converter","mapfields","mappers","each","type","applyTransforms","transforms","ts","transform","dataEvents","dispatch","dataSourcePrototype","transformStore","constructor","DataSource","sources","values","cfg","getConfig","initDataSource","dataSource","dataName","pop","initialise","addTransforms","call","dataSources","add","remote","composite","DataStore","dataCount","create","p","remove","ds","cachedFrame","Error","def","timeFormat","symbol","locales","source1","source2","load","number","locale","time","formatDate","date","formatDateTime","dateTime","n","Math","round","pow","WIDTH","HEIGHT","sizeValue","getSize","element","width","height","getWidth","widthElement","getWidthElement","getHeight","heightElement","getHeightElement","el","getParentElementRect","elementWidth","elementHeight","w","getBoundingClientRect","s","select","left","padding","style","right","bottom","parent","node","tagName","parentNode","substring","CONTAINERS","visuals","visualPrototype","visualType","visualParent","getModel","$child","$new","$update","$on","draw","refSize","minSize","maxSize","max","min","container","idx","live","splice","viewBase","proto","opts","Visual","viewModel","events","types","createVisual","append","classed","sel","layers","drawCount","__visual__","uid","fit","clear","VisualClass","resize","currentSize","viewDebug","toString","paper","inBrowser","observer","MutationObserver","visualManager","observe","document","documentElement","records","nodes","removedNodes","nodeName","selectAll","destroy","viz","objectOnly","toUpperCase","protos","vizPrototype","chartPrototype","apply","visual","_paper","paperType","render","PaperType","papers","isFunction","xt","yt","camelFunction","d3_scale","doDraw","createPaper","Paper","paperPrototype","box","attr","cname","enter","Svg","svg","menu","on","display","insert","refreshMenu","minHeight","maxHeight","dataStore","isViz","setupLayer","setupVisual","addSources","layer","$set","resizeDelay","viewDebounce","window","title","menuTitle","maxFontSize","fontSize","minFontSize","html","px","KEYS","LEFTRIGHT","margin","boundingBox","calculate","margins","axisOrientation","axisTop","axisBottom","axisLeft","axisRight","xAxis","axis","orientation","scale","colorScales","color","scaleSequential","interpolateViridis","interpolateInferno","interpolateMagma","interpolatePlasma","interpolateWarm","interpolateCool","interpolateRainbow","interpolateCubehelixDefault","colorScale","colors","domain","legend","legends","legendColor","legendSize","legendSymbol","vizModel","lgModel","legendType","orient","g","bb","locations","location","getBBox","translate","topLeft","topRight","bottomLeft","bottomRight","innerWidth","offsetY","offsetX","table","require","clusterize","Clusterize","cl","tableClass","striped","over","bordered","small","vizComponent","props","attrs","inner","getSchema","schema","build","input","createElement","root","class","VisualContainer","visualDashboard","mountInner","addVisual","parsers","isoParse","formatters","columns","col","properties","label","hidden","$parse","string","$html","tableTpl","plugins","template","createColumns","promises","promise","plugin","tablePlugins","isPromise","viewElement","vm","dataLoader","loadingData","err","addData","newData","delayData","id","rows","__data__","addComponent","dashboard","tabular","constant","b","NaN","identity","pad","base","pyramid","j","k","points","fraction","hi","v0","ph","pj","r","polygons","sort","descending","sqrt","_","lineDrawing","meta","cscale","obj","d3_shape","agg","extent","createChart","newRange","keys","lines","strokeColor","curve","lineWidth","merge","strokeOpacity","line","exit","ranges","getScale","scaleX","scaleY","innerHeight","bars","sx","sy","sz","stacked","xrect","x0","yrect","y0","yi","rangeRound","paddingInner","bandwidth","bardim","pivot","stack","normalize","nice","rects","stroke","fillOpacity","transition","tickSizeOuter","x1","pi","PI","rad","proportional","outerRadius","innerRadius","angles","pie","padAngle","startAngle","endAngle","arcs","arc","cornerRadius","proportionalData","slices","expr","legendLabel","fmt","format","fractionFormat","labels","scaleOrdinal","context","point","moveTo","lineTo","closePath","marks","polygon","segments","specifier"],"mappings":"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"}