{"version":3,"file":"d3-visualize.js","sources":["../src/utils/randompath.js","../src/data/array.js","../src/data/warn.js","../src/utils/isurl.js","../src/data/remote.js","../src/data/composite.js","../src/data/expression.js","../src/utils/accessor.js","../src/data/dataframe.js","../src/transforms/base.js","../src/transforms/filter.js","../src/utils/warn.js","../src/utils/fillarray.js","../src/transforms/aggregate.js","../src/transforms/crossfilter.js","../src/transforms/timeseries.js","../src/core/options.js","../src/transforms/mapfields.js","../src/utils/minmax.js","../src/transforms/moving-average.js","../src/transforms/index.js","../src/data/sources.js","../src/data/store.js","../src/utils/round.js","../src/utils/size.js","../src/utils/clone.js","../src/core/base.js","../src/core/visual.js","../src/utils/camelfunction.js","../src/core/chart.js","../src/core/paper.js","../src/plugins/menu.js","../src/utils/format.js","../src/plugins/data.js","../src/plugins/font.js","../src/plugins/responsive.js","../src/plugins/title.js","../src/plugins/margin.js","../src/plugins/axis.js","../src/plugins/shapes.js","../src/plugins/color.js","../src/plugins/legend.js","../src/core/container.js","../src/components/dashboard.js","../src/components/visual.js","../src/components/index.js","../src/utils/constant.js","../src/utils/descending.js","../src/utils/identity.js","../src/transforms/pyramid.js","../src/utils/nicerange.js","../src/charts/line.js","../src/charts/bar.js","../src/charts/box.js","../src/transforms/groups.js","../src/charts/area.js","../src/utils/text-wrapping.js","../src/charts/pie.js","../src/utils/polygon.js","../src/charts/pyramid.js","../src/charts/treemap.js","../src/charts/text.js","../src/charts/heatmap.js","../index.js"],"sourcesContent":["import assign from 'object-assign';\nimport {range} from 'd3-array';\nimport {randomNormal} from 'd3-random';\n\n\nconst defaults = {\n    sigma: 0.1,\n    drift: 0\n};\n\n\nexport default function (size, options) {\n    options = assign({}, defaults, options);\n    var t = range(0, +size, 1),\n        S = options.sigma,\n        drift = options.drift,\n        data = [{x: 0, y: 0}],\n        norm = randomNormal(0, 1),\n        dx;\n\n    for (var i = 1; i < t.length; i++) {\n        dx = drift + S * norm();\n        data[i] = {\n            x: i,\n            y: data[i - 1].y + dx\n        };\n    }\n\n    return data;\n}\n","import {isArray, isObject} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\n//\n//  Array DataSource\n//  ====================\n//\n//  Data is given in an array, pkain & simple\nexport default {\n\n    initialise (config) {\n        this._data = config.data;\n    },\n\n    getConfig (config) {\n        if (isArray(config)) return {data: config};\n        else if (isObject(config) && isArray(config.data)) return config;\n    },\n\n    getData () {\n        return resolvedPromise(this.asFrame(this._data));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-data-source]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import {isString} from 'd3-let';\n\n\nconst schemes = ['http', 'https', 'ws', 'wss'];\n\n\nexport default function (value) {\n    return isString(value) && schemes.indexOf(value.split('://')[0]) > -1;\n}\n","import {csvParse} from 'd3-dsv';\nimport {set} from 'd3-collection';\nimport {isObject} from 'd3-let';\nimport {viewProviders, resolvedPromise} from 'd3-view';\n\nimport warn from './warn';\nimport isUrl from '../utils/isurl';\n\nconst CSV = set(['text/plain', 'text/csv', 'application/vnd.ms-excel']);\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isUrl(config)) return {url: config};\n        else if (isObject(config) && config.url)\n            return config;\n    },\n\n    initialise (config) {\n        this.url = config.url;\n    },\n\n    getData () {\n        var fetch = viewProviders.fetch,\n            self = this;\n        if (!fetch) {\n            warn('fetch provider not available, cannot submit');\n            return resolvedPromise([]);\n        }\n        return fetch(this.url).then(parse).then((data) => self.asFrame(data));\n    }\n};\n\n\nfunction parse (response) {\n    var ct = (response.headers.get('content-type') || '').split(';')[0];\n    if (CSV.has(ct))\n        return response.text().then(csvParse);\n    else if (ct === 'application/json')\n        return response.json();\n    else {\n        warn(`Cannot load content type '${ct}'`);\n        return [];\n    }\n}\n","import {isArray, isObject} from 'd3-let';\n//\n//  A composite dataSource\n//  ===================\n//\n//  A composite data source has the source attribute with the name of one\n//  or more data sets to use as the source for this data set.\n//  The source property is useful in combination with a transform pipeline\n//  to derive new data.\n//  If string-valued, indicates the name of the source data set.\n//  If array-valued, specifies a collection of data source names that\n//  should be merged (unioned) together.\nexport default {\n\n    initialise (config) {\n        this.source = config.source;\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.source) {\n            if (!isArray(config.source)) config.source = [config.source];\n            return config;\n        }\n    },\n\n    getData () {\n        var store = this.store,\n            self = this;\n        let frame;\n        return Promise.all(this.source.map(source => {\n             return store.getData(source);\n        })).then(frames => {\n            if (frames.length === 1) frame = frames[0];\n            else frame = self.mergeFrames(frames);\n            return self.asFrame(frame);\n        });\n    },\n\n    // TODO: implement frame merging\n    mergeFrames (frames) {\n        return frames[0];\n    }\n};\n","import {isObject} from 'd3-let';\nimport {viewExpression, resolvedPromise} from 'd3-view';\n\n\nexport default {\n\n    initialise (config) {\n        this.expression = viewExpression(config.expression);\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.expression)\n            return config;\n    },\n\n    getData () {\n        var self = this,\n            model = this.store.model;\n        return resolvedPromise(this.expression.eval(model)).then((data) => self.asFrame(data));\n    }\n};\n","export default function (field) {\n    return function (d) {\n        return d[field];\n    };\n}\n","import {isArray} from 'd3-let';\nimport {map} from 'd3-collection';\nimport crossfilter from 'crossfilter';\n\nimport accessor from '../utils/accessor';\n\n\nexport default function DataFrame (data, serie, store) {\n    if (isArray(data)) data = {\n        store: store,\n        data: data,\n        dimensions: {},\n        series: map()\n    };\n    Object.defineProperties(this, {\n        _inner: {\n            get () {\n                return data;\n            }\n        },\n        store: {\n            get () {\n                return data.store;\n            }\n        },\n        data: {\n            get () {\n                return data.data;\n            }\n        },\n        dimensions: {\n            get () {\n                return data.dimensions;\n            }\n        },\n        series: {\n            get () {\n                return data.series;\n            }\n        }\n    });\n    this.serie = serie;\n}\n\n\nDataFrame.prototype = {\n\n    size () {\n        return this.data.length;\n    },\n\n    new (serie) {\n        if (isArray(serie)) return new DataFrame(serie, null, this.store);\n        else return new DataFrame(this._inner, serie);\n    },\n\n    cf () {\n        if (!this._inner.cf) this._inner.cf = crossfilter(this.data);\n        return this._inner.cf;\n    },\n\n    //  Create and return a crossfilter dimension\n    //  If value is not specified, keepExisting is by default true, and any\n    //  existing dimension name is recycled.\n    dimension (name, value, keepExisting) {\n        if (arguments.length === 1) keepExisting = true;\n        var current = this.dimensions[name];\n        if (current) {\n            if (keepExisting) return current;\n            current.dispose();\n        }\n        if (!value) value = accessor(name);\n        this.dimensions[name] = this.cf().dimension(value);\n        return this.dimensions[name];\n    },\n\n    //  Sort a dataframe by name and return the top values or all of them if\n    //  top is not defined. The name can be a function.\n    sortby (name, top) {\n        return this.new(this.dimension(name).top(top || Infinity));\n    },\n\n    // return a new dataframe by pivoting values for field name\n    pivot (dimension, key, value, total) {\n        var group = this.dimension(dimension).group();\n        if (!total) total = 'total';\n        return this.new(group.reduce(pivoter(1), pivoter(-1), Object).all().map(d => d.value));\n\n        function pivoter (m) {\n            let pk, pv;\n            return function (o, record) {\n                pk = ''+record[key];\n                pv = m*record[value];\n                o[dimension] = record[dimension];\n                if (pk in o) o[pk] += pv;\n                else o[pk] = pv;\n                if (total in o) o[total] += pv;\n                else o[total] = pv;\n                return o;\n            };\n        }\n    },\n\n    add () {\n        //this._inner.cf.add(data);\n    },\n\n    map (mapper) {\n        return this.new(this.data.map(mapper));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\n\nexport default function (options) {\n    const\n        transform = options.transform,\n        schema = options.schema || {},\n        jsonValidator = viewProviders.jsonValidator ? viewProviders.jsonValidator(options.schema) : dummyValidator;\n    if (!schema.type) schema.type = 'object';\n\n    function transformFactory (config) {\n        const valid = jsonValidator.validate(config);\n\n        if (!valid) return jsonValidator.logError();\n\n        return doTransform;\n\n        function doTransform (frame) {\n            return transform(frame, config);\n        }\n    }\n\n    transformFactory.schema = schema;\n\n    return transformFactory;\n}\n\n\nconst dummyValidator = {\n    validate () {\n        return true;\n    }\n};\n","import {viewExpression} from 'd3-view';\n\nimport transformFactory from './base';\n\n//\n// Create a groupby transform from a config object\nexport default transformFactory ({\n    schema: {\n        description: \"The filter transform removes objects from a data frame based on a provided filter expression\",\n        properties: {\n            expr: {\n                type: \"string\"\n            }\n        },\n        required: [\"expr\"]\n    },\n    transform (frame, config) {\n        var expr = viewExpression(config.expr);\n        return frame.data.reduce((data, d, index) => {\n            if (expr.safeEval({d: d, index: index, frame: frame})) data.push(d);\n            return data;\n        }, []);\n    }\n});\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-visualize]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","export default function (size, value) {\n    var a = new Array(size);\n    a.fill(value);\n    return a;\n}\n","import {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {max, min, sum, mean, median, variance, deviation} from 'd3-array';\n\nimport warn from '../utils/warn';\nimport fillArray from '../utils/fillarray';\n\nexport const operations = map({\n    count,\n    max,\n    min,\n    sum,\n    mean,\n    median,\n    variance,\n    deviation\n});\n\nexport const scalar_operations = map({\n    count (agg) {return agg + 1;},\n    sum (agg, v) {return agg + v;},\n    max: Math.max,\n    min: Math.min\n});\n\n\nfunction count (array, accessor) {\n    return array.reduce((v, d) => {\n        if (accessor(d) !== undefined) v += 1;\n        return v;\n    }, 0);\n}\n//\n// The aggregate transform groups and summarizes an imput data stream to\n// produce a derived output data stream. Aggregate transforms can be used\n// to compute counts, sums, averages and other descriptive statistics over\n// groups of data objects.\nexport default function (config) {\n    let fields = config.fields,\n        ops = config.ops,\n        as = config.as,\n        groupby = config.groupby;\n\n    if (!fields && !ops) return countAll;\n\n    if (!isArray(fields)) return warn('Aggregate transforms expect an array of fields');\n    if (!ops) ops = 'count';\n    if (isString(ops)) ops = fillArray(fields.length, ops);\n    if (!isArray(ops)) return warn('Aggregate transform expects an array of ops');\n    if (ops.length < fields.length) warn('Aggregate transforms expects an ops array with same length as fields');\n    if (!as) as = [];\n    if (!isArray(as)) return warn('Aggregate transform expects an array of as fields');\n    return aggregate;\n\n\n    function countAll (frame) {\n        let key;\n        return frame.data.reduce((o, d) => {\n            for (key in d) {\n                if (key in o) o[key] += 1;\n                else o[key] = 1;\n            }\n            return o;\n        }, {});\n    }\n\n    function aggregate (frame) {\n        var data = [],\n            name, op;\n\n        if (groupby) return group(frame);\n\n        fields.forEach((field, index) => {\n            name = ops[index];\n            op = count;\n            if (name) {\n                op = operations.get(name);\n                if (!op) {\n                    op = count;\n                    warn(`Operation ${ops[index]} is not supported, use count`);\n                }\n            }\n            data.push({\n                label: as[index] || field,\n                data: op(frame.data, d => d[field])\n            });\n        });\n        return data;\n    }\n\n    //\n    //  Perform aggregation with a set of data fields to group by\n    function group (frame) {\n        let v, name, op;\n        const entries = fields.map((field, index) => {\n            name = ops[index];\n            op = scalar_operations.get('count');\n            if (name) {\n                op = scalar_operations.get(name);\n                if (!op) {\n                    op = scalar_operations.get('count');\n                    warn(`Operation ${name} is not supported, use count`);\n                }\n            }\n            return {\n                field: field,\n                as: as[index] || field,\n                op: op\n            };\n        });\n\n        return frame.dimension(groupby).group().reduce((o, record) => {\n            return entries.reduce((oo, entry) => {\n                v = 0;\n                if (entry.as in oo) v = oo[entry.as];\n                oo[entry.as] = entry.op(v, record[entry.field]);\n                return oo;\n            }, o);\n        }, null, Object).all().map(d => {\n            d.value[groupby] = d.key;\n            return d.value;\n        });\n    }\n}\n","import {isArray, isString} from 'd3-let';\nimport warn from '../utils/warn';\n\n//\n// Apply a cross filter to an array of fields\nexport default function (config) {\n    let fields = config.fields,\n        query = config.query;\n\n    if (!isArray(fields)) return warn('crossfilter transform expects an array of fields');\n    if (!isArray(query)) return warn('crossfilter transform expects an array of query');\n    if (query.length != fields.length) return warn('crossfilter transform expects an query array with same length as fields');\n\n    return crossfilter;\n\n    function crossfilter (frame) {\n        let dim, q;\n        fields.forEach((field, index) => {\n            q = query[index];\n            if (isString(q)) q = frame.store.eval(q);\n            dim = frame.dimension(field).filterAll();\n            if (q) dim.filter(q);\n        });\n        if (dim) return frame.new(dim.top(Infinity));\n        return frame;\n    }\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var sortby = config.sortby,\n        groupby = config.groupby;\n\n    if (!sortby) warn('timeseries transform requires a \"sortby\" entry');\n\n    return timeseries;\n\n    function timeseries (frame) {\n        if (sortby) {\n            if (groupby) {\n                var dim = frame.dimension(groupby),\n                    groups = dim.group().top(Infinity),\n                    newframe = frame.new([]),\n                    tmp;\n                groups.forEach(group => {\n                    tmp = frame.new(dim.filterExact(group.key).top(Infinity)).dimension(sortby).group().top(Infinity);\n                    newframe.series.set(group.key, frame.new(tmp).dimension('key').top(Infinity));\n                });\n                return newframe;\n            } else {\n                return frame.new(frame.dimension(sortby).top(Infinity));\n            }\n        }\n        return frame;\n    }\n}\n","//\n//  Global options for visuals\n//  ============================\n//\nexport default {\n    // visual data source\n    dataSource: null,\n    //\n    size: {\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    }\n};\n","//\n//  Map Fields Transform\n//  ========================\n//\n//  Convert a set af fields to a different data type\n//\nimport {map} from 'd3-collection';\nimport {isString} from 'd3-let';\nimport {utcParse} from 'd3-time-format';\n\nimport transformFactory from './base';\nimport warn from '../utils/warn';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.dateFormat = '%d-%b-%y';\n\n\nconst converters = {\n    date (entry) {\n        return utcParse(entry.dateFormat || globalOptions.dateFormat);\n    },\n    number () {\n        return parseFloat;\n    }\n};\n\nexport default transformFactory({\n    shema: {\n        description: \"map a field values into another type\",\n        properties: {\n            fields: {\n                type: \"object\"\n            },\n            dateFormat: {\n                type: \"string\"\n            }\n        },\n        required: [\"fields\"]\n    },\n    transform (frame, config) {\n        var fields = map(config.fields),\n            mappers = [];\n        let i, converter;\n\n        fields.each((entry, key) => {\n            if (isString(entry)) entry = {type: entry};\n            converter = converters[entry.type];\n            if (!converter) warn(`Cannot convert field ${key} to type ${entry.type}`);\n            else mappers.push([key, converter(entry)]);\n        });\n\n        if (mappers.length)\n            frame = frame.map(d => {\n                for (i=0; i<mappers.length; ++i)\n                    d[mappers[i][0]] = mappers[i][1](d[mappers[i][0]]);\n                return d;\n            });\n\n        return frame;\n    }\n});\n","export default function (value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n","import transformFactory from './base';\nimport minmax from '../utils/minmax';\n\nconst\n    DEFAULT_METHOD = 'ema',   // or sma simple moving average\n    DEFAULT_PERIOD = 10,\n    DEFAULT_ALPHA = 0.5,\n    MAXALPHA = 0.999999;\n\n//\n// Exponential moving average transform\n// Useful for smoothing out volatile timeseries\nexport default transformFactory({\n    shema: {\n        description: \"Create moving average series from existing one. The new series override the existing one unless the as array is provided\",\n        properties: {\n            method: {\n                type: \"string\"\n            },\n            alpha: {\n                type: \"number\"\n            },\n            period: {\n                type: \"number\"\n            },\n            fields: {\n                type: \"array\",\n                items: {\n                    type: \"string\"\n                }\n            },\n            as: {\n                type: \"array\",\n                items: {\n                    type: \"string\"\n                }\n            }\n        },\n        required: [\"fields\"]\n    },\n    transform (frame, config) {\n        const as = config.as || [],\n            method = config.method || DEFAULT_METHOD;\n        let fieldto, y, s;\n\n        config.fields.forEach((field, index) => {\n            fieldto = as[index] || field;\n            //\n            // Simple Moving Average\n            if (method === 'sma') {\n                const period = Math.max(config.period || DEFAULT_PERIOD, 1),\n                    cumulate = [],\n                    buffer = [];\n                frame.data.forEach((d, index) => {\n                    y = d[field];\n                    if (cumulate.length === period) y -= buffer.splice(0, 1)[0];\n                    buffer.push(y);\n                    if (index) y += cumulate[cumulate.length-1];\n                    cumulate.push(y);\n                    d[fieldto] = y/cumulate.length;\n                });\n            //\n            // Exponential moving average\n            } else {\n                const alpha = minmax(config.alpha || DEFAULT_ALPHA, 1-MAXALPHA, MAXALPHA);\n\n                frame.data.forEach((d, index) => {\n                    y = d[field];\n                    if (!index) s = y;\n                    else s = alpha*s + (1-alpha)*y;\n                    d[fieldto] = s;\n                });\n            }\n        });\n    }\n});\n","// Collection of transforms\nimport {map} from 'd3-collection';\nimport {isArray} from 'd3-let';\n\nimport filter from './filter';\nimport aggregate from './aggregate';\nimport crossfilter from './crossfilter';\nimport timeseries from './timeseries';\nimport mapfields from './mapfields';\nimport movingaverage from './moving-average';\n\n//\n//  transforms Store\nexport default map({\n    filter,\n    aggregate,\n    mapfields,\n    timeseries,\n    crossfilter,\n    movingaverage\n});\n\n\n// Apply data transforms to a series\nexport function applyTransforms (frame, transforms) {\n    let ts;\n    if (!transforms) return frame;\n    transforms.forEach(transform => {\n        if (transform) {\n            ts = transform(frame);\n            if (isArray(ts)) frame = frame.new(ts);\n            else if (ts) frame = ts;\n        }\n    });\n    return frame;\n}\n","import assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {pop, isArray} from 'd3-let';\n\nimport DataFrame from './dataframe';\nimport transformStore, {applyTransforms} from '../transforms/index';\nimport warn from '../utils/warn';\n\nconst dataEvents = dispatch('init', 'data');\n\n\n//\n//  DataSource prototype\n//  ======================\nconst dataSourcePrototype = {\n\n    // get the config object-assign// This method is used by the prototype\n    // to check if the config object is a valid one\n    getConfig () {},\n\n    // initialise the data source with a config object\n    initialise () {},\n\n    getData () {},\n\n    //\n    addTransforms (transforms) {\n        var self = this;\n        let t;\n        if (!transforms) return;\n        if (!isArray(transforms)) transforms = [transforms];\n        transforms.forEach(transform => {\n            t = transformStore.get(transform.type);\n            if (!t) warn(`Transform \"${transform.type}\" not known`);\n            else self.transforms.push(t(transform));\n        });\n    },\n    //\n    // given a data object returns a Cross filter object\n    asFrame (data) {\n        if (isArray(data)) {\n            data = data.map(entry => {\n                if (entry.constructor !== Object) entry = {data: entry};\n                return entry;\n            });\n            data = new DataFrame(data, null, this.store);\n        }\n        return applyTransforms(data, this.transforms);\n    }\n};\n\n\n// DataSource container\nexport default assign(map(), {\n    events: dataEvents,\n\n    add (type, source) {\n\n        // DataSource constructor\n        function DataSource (config, store) {\n            initDataSource(this, type, config, store);\n        }\n\n        DataSource.prototype = assign({}, dataSourcePrototype, source);\n\n        this.set(type, DataSource);\n        return DataSource;\n    },\n\n    // Create a new DataSource\n    create (config, store) {\n        var sources = this.values(),\n            cfg;\n        for (var i=0; i<sources.length; ++i) {\n            cfg = sources[i].prototype.getConfig(config);\n            if (cfg) return new sources[i](cfg, store);\n        }\n    }\n});\n\n\nfunction initDataSource(dataSource, type, config, store) {\n\n    var name = store.dataName(pop(config, 'name')),\n        transforms = [];\n\n    // store.natural = cf.dimension(d => d._id);\n\n    Object.defineProperties(dataSource, {\n        name: {\n            get () {\n                return name;\n            }\n        },\n        store: {\n            get () {\n                return store;\n            }\n        },\n        type: {\n            get () {\n                return type;\n            }\n        },\n        // transforms to apply to data\n        transforms: {\n            get () {\n                return transforms;\n            }\n        },\n        config: {\n            get () {\n                return config;\n            }\n        }\n    });\n\n    dataSource.initialise(config);\n    dataSource.addTransforms(pop(config, 'transforms'));\n    store.sources.set(name, dataSource);\n    dataEvents.call('init', undefined, dataSource);\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {resolvedPromise, viewExpression} from 'd3-view';\n\nimport array from './array';\nimport remote from './remote';\nimport composite from './composite';\nimport expression from './expression';\nimport dataSources from './sources';\nimport transformStore from '../transforms/index';\n\n\ndataSources.add('array', array);\ndataSources.add('remote', remote);\ndataSources.add('composite', composite);\ndataSources.add('expression', expression);\n\n//\n//  DataStore\n//  ==============\n//\n//  Map names to datasets\n//  Individual data sets are assumed to contain a collection of records\n//  (or “rows”), which may contain any number of named data\n//  attributes (fields, or “columns”).\n//  Records are modeled using standard JavaScript objects.\nexport default function DataStore(model) {\n    var sources = map();\n\n    Object.defineProperties(this, {\n        sources: {\n            get () {\n                return sources;\n            }\n        }\n    });\n\n    // transforms function\n    this.transforms = assign({}, transformStore);\n    this.dataCount = 0;\n    this.model = model;\n}\n\n\nDataStore.prototype = {\n    size () {\n        return this.sources.size();\n    },\n\n    // Add a new serie from a data source\n    addSources (config) {\n        //\n        // data is a string, it must be already registered with store\n        if (isString(config)) config = {source: config};\n\n        if (isArray(config)) {\n            var self = this;\n            return config.map(cfg => {\n                return dataSources.create(cfg, self);\n            });\n        } else if (config) {\n            return dataSources.create(config, this);\n        }\n    },\n\n    addTransforms (transforms) {\n        assign(this.transforms, transforms);\n    },\n\n    // set, get or remove a data source\n    source (name, source) {\n        if (arguments.length === 1) return this.sources.get(name);\n        if (source === null) {\n            var p = this.sources.get(name);\n            this.sources.remove(name);\n            return p;\n        }\n        this.sources.set(name, source);\n        return this;\n    },\n\n    clearCache () {\n        this.sources.each(ds => {\n            delete ds.cachedFrame;\n        });\n    },\n\n    // get data from a source\n    getData (source) {\n        var ds = this.sources.get(source);\n        if (!ds) throw new Error(`Data source ${source} not available`);\n        if (ds.cachedFrame) return resolvedPromise(ds.cachedFrame);\n        return ds.getData().then(frame => {\n            if (ds.config.cache) ds.cachedFrame = frame;\n            return frame;\n        });\n    },\n\n    eval (expr, context) {\n        let ctx = this.model;\n        if (context) ctx = ctx.$child(context);\n        return viewExpression(expr).safeEval(ctx);\n    },\n\n    dataName (name) {\n        this.dataCount++;\n        if (name) return '' + name;\n        var def = this.source('default');\n        if (!def) return 'default';\n        return `source${this.dataCount}`;\n    }\n};\n","export default function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n}\n","import {select} from 'd3-selection';\n\nimport round from './round';\n\n\nconst WIDTH = 400;\nconst HEIGHT = '75%';\n\n\nexport function sizeValue (value, size) {\n    if (typeof(value) === \"string\" && value.indexOf('%') === value.length-1)\n        return round(0.01*parseFloat(value)*size);\n    return +value;\n}\n\n// Internal function for evaluating paper dom size\nexport function getSize (element, options) {\n    var size = {\n        width: options.width,\n        height: options.height\n    };\n\n    if (!size.width) {\n        size.width = getWidth(element);\n        if (size.width)\n            size.widthElement = getWidthElement(element);\n        else\n            size.width = WIDTH;\n    }\n\n    if (!size.height) {\n        size.height = getHeight(element);\n        if (size.height)\n            size.heightElement = getHeightElement(element);\n        else\n            size.height = HEIGHT;\n    }\n\n    // Allow to specify height as a percentage of width\n    size.height = sizeValue(size.height, size.width);\n    return size;\n}\n\n\nexport function getWidth (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementWidth(el);\n}\n\n\nexport function getHeight (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementHeight(el);\n}\n\n\nexport function getWidthElement (element) {\n    return getParentElementRect(element, 'width');\n}\n\n\nexport function getHeightElement (element) {\n    return getParentElementRect(element, 'height');\n}\n\n\nfunction elementWidth (el) {\n    var w = el.getBoundingClientRect()['width'],\n        s = select(el),\n        left = padding(s.style('padding-left')),\n        right = padding(s.style('padding-right'));\n    return w - left - right;\n}\n\n\nfunction elementHeight (el) {\n    var w = el.getBoundingClientRect()['height'],\n        s = select(el),\n        top = padding(s.style('padding-top')),\n        bottom = padding(s.style('padding-bottom'));\n    return w - top - bottom;\n}\n\n\nfunction getParentElementRect (element, key) {\n    let parent = element.node ? element.node() : element,\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        v = parent.getBoundingClientRect()[key];\n        if (v)\n            return parent;\n        parent = parent.parentNode;\n    }\n}\n\n\nfunction padding (value) {\n    if (value && value.substring(value.length-2) == 'px')\n        return +value.substring(0, value.length-2);\n    return 0;\n}\n\n\nexport function boundingBox (size) {\n    var w = size.widthElement ? getWidth(size.widthElement) : size.width,\n        h;\n    if (size.heightPercentage)\n        h = round(w*size.heightPercentage, 0);\n    else\n        h = size.heightElement ? getHeight(size.heightElement) : size.height;\n    if (size.minHeight)\n        h = Math.max(h, size.minHeight);\n    return [round(w), round(h)];\n}\n","import {isArray, isObject} from 'd3-let';\n\n\nexport default function clone (o) {\n    if (isArray(o)) return o.map(clone);\n    else if (isObject(o)) {\n        var v = {};\n        for (let key in o) {\n            v[key] = clone(o[key]);\n        }\n        return v;\n    } else return o;\n}\n","import assign from 'object-assign';\nimport {pop, isString, isObject} from 'd3-let';\nimport {dispatch} from 'd3-dispatch';\nimport {select} from 'd3-selection';\nimport {viewBase, viewModel} from 'd3-view';\nimport 'd3-transition';\n\nimport globalOptions from './options';\nimport {sizeValue} from '../utils/size';\nimport clone from '../utils/clone';\n\n\nconst CONTAINERS = ['visual', 'container'];\n\n//\n//  Gloval visuals object\n//  ==========================\n//\n//  Container of\n//  * live visuals\n//  * visual types\n//  * paper types\n//  * visual events\nexport const visuals = {\n    live: [],\n    types: {},\n    papers: {},\n    options: globalOptions,\n    events: dispatch(\n        'before-init',\n        'after-init',\n        'before-draw',\n        'after-draw'\n    )\n};\n\n//\n//  Visual Interface\n//  ====================\n//\n//  Base prototype object for visuals\n//\nexport const visualPrototype = assign({}, {\n\n    // initialise the visual with options\n    initialise () {\n\n    },\n\n    // draw this visual\n    draw () {},\n\n    // redraw the visual\n    // this is the method that should be invoked by applications\n    redraw () {\n        if (this.drawing) {\n            var self = this,\n                event = `after-draw.${this.toString()}`;\n            visuals.events.on(event, () => {\n                // remove callback\n                visuals.events.on(event, null);\n                self.redraw();\n            });\n        } else\n            this.drawing = this.draw();\n        return this.drawing;\n    },\n\n    select (el) {\n        return select(el);\n    },\n\n    // destroy the visual\n    destroy () {},\n\n    toString () {\n        return `${this.visualType}-${this.model.uid}`;\n    },\n\n    // get a reactive model for type\n    getModel (type) {\n        if (!type) type = this.visualType;\n        var model = this.model[type];\n        if (!model && type in globalOptions) {\n            var options = pop(this.options, type),\n                self = this;\n            if (this.visualParent)\n                model = this.visualParent.getModel(type).$child(options);\n            else {\n                model = this.model.$new(globalOptions[type]);\n                model.$update(options);\n            }\n            this.model[type] = model;\n            model.$on(() => self.draw());\n        }\n        return model;\n    },\n\n    dim (size, refSize, minSize, maxSize) {\n        size = Math.max(sizeValue(size, refSize), minSize || 0);\n        if (maxSize) {\n            maxSize = Math.max(maxSize, minSize || 0);\n            size = Math.min(size, maxSize);\n        }\n        return size;\n    },\n    // pop this visual from a container\n    pop (container) {\n        if (container) {\n            var idx = container.live.indexOf(this);\n            if (idx > -1) container.live.splice(idx, 1);\n        }\n    },\n\n    getVisualSchema (name) {\n        var schema = this.options.visuals ? this.options.visuals[name] : null,\n            parent = this.visualParent;\n        if (parent && isString(schema)) {\n            name = schema;\n            schema = parent.getVisualSchema(name);\n        } else if (parent && !schema)\n            schema = parent.getVisualSchema(name);\n        if (isObject(schema))\n            return clone(schema);\n    }\n}, viewBase);\n\n//\n//  Create a new Visual Constructor\nexport default function (type, proto) {\n    const opts = pop(proto, 'options');\n    if (opts)\n        globalOptions[type] = opts;\n\n    function Visual(element, options, parent, model) {\n        Object.defineProperties(this, {\n            visualType: {\n                get () {\n                    return type;\n                }\n            },\n            isViz: {\n                get () {\n                    return CONTAINERS.indexOf(type) === -1;\n                }\n            },\n            visualRoot: {\n                get () {\n                    if (this.visualParent) return this.visualParent.visualRoot;\n                    return this;\n                }\n            }\n        });\n        this.visualParent = parent;\n        this.model = parent ? parent.model.$new() : (model || viewModel());\n        this.options = options || {};\n        this.drawing = false;\n        visuals.events.call('before-init', undefined, this);\n        this.initialise(element);\n        visuals.events.call('after-init', undefined, this);\n    }\n\n    Visual.prototype = assign({}, visualPrototype, proto);\n    visuals.types[type] = Visual;\n    return Visual;\n}\n","import {pop, inBrowser} from 'd3-let';\nimport {select} from 'd3-selection';\nimport {viewDebug} from 'd3-view';\n\nimport createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\nimport {getSize} from '../utils/size';\n\n//\n//  Visual\n//  =============\n//\n//  A Visual is a a container of visual layers and it is\n//  associated with an HTML element\n//\n//  Usually a Visual contains one layer only, however it is possible to\n//  have more than one by combining several layers together. Importantly,\n//  layers in one visual generate HTMLElements which are children of the visual\n//  element and inherit both the width and height.\n//\n//  A visual register itself with the visuals.live array\n//\nexport default createVisual('visual', {\n\n    options: {\n        render: 'svg',\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%',\n        // heightElement - selector for an element from wich to obtain height\n        heightElement: null\n    },\n\n    initialise (element) {\n        if (!element) throw new Error('HTMLElement required by visual group');\n        if (this.visualParent && this.visualParent.visualType !== 'container')\n            throw new Error('Visual parent can be a container only');\n        if (!this.select(element).select('.paper').node())\n            this.select(element).append('div').classed('paper', true);\n\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            paper : {\n                get () {\n                    return this.sel.select('.paper');\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            size: {\n                get () {\n                    return [this.width, this.height];\n                }\n            }\n        });\n\n        this.sel.classed('d3-visual', true);\n        // list of layers which define the visual\n        this.layers = [];\n        this.drawCount = 0;\n        visuals.live.push(this);\n        element.__visual__ = this;\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    // Draw the visual\n    draw() {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        else if (!this.drawCount) {\n            this.drawCount = 1;\n            this.fit();\n        } else {\n            this.drawCount++;\n            this.clear();\n        }\n        var self = this;\n        visuals.events.call('before-draw', undefined, this);\n        return Promise.all(this.layers.map(visual => visual.redraw()))\n            .then(() => {\n                delete self.drawing;\n                visuals.events.call('after-draw', undefined, self);\n            }, err => {\n                delete self.drawing;\n                warn(`Could not draw ${self.toString()}: ${err}`);\n            });\n    },\n\n    clear () {},\n\n    // Add a new visual to this group\n    addVisual (options) {\n        var type = pop(options, 'type');\n        var VisualClass = visuals.types[type];\n        if (!VisualClass)\n            warn(`Cannot add visual \"${type}\", not available`);\n        else\n            return new VisualClass(this.element, options, this);\n    },\n    //\n    // Fit the root element to the size of the parent element\n    fit () {\n        this.resize(null, true);\n    },\n\n    resize (size, fit) {\n        if (!size) size = getSize(this.element.parentNode || this.element, this.getModel());\n        var currentSize = this.size;\n\n        if (fit || (currentSize[0] !== size.width || currentSize[1] !== size.height)) {\n            if (!fit) viewDebug(`Resizing \"${this.toString()}\"`);\n            this.width = size.width;\n            this.height = size.height;\n            // this.paper.style('width', this.width + 'px').style('height', this.height + 'px');\n            this.paper.style('height', this.height + 'px');\n            if (!fit) this.draw();\n        }\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n        this.pop(visuals);\n    }\n});\n\n\nif (inBrowser) {\n    // DOM observer\n    // Check for changes in the DOM that leads to visual actions\n    const observer = new MutationObserver(visualManager);\n    observer.observe(document.documentElement, {\n        childList: true,\n        subtree: true\n    });\n}\n\n//\n//  Clears visualisation going out of scope\nfunction visualManager (records) {\n    records.forEach(record => {\n        var nodes = record.removedNodes;\n        if (!nodes || !nodes.length) return;  // phantomJs hack\n        nodes.forEach(node => {\n            if (node.nodeName !== '#text') {\n                if (!node.__visual__)\n                    select(node).selectAll('.d3-visual').each(destroy);\n                else\n                    destroy.call(node);\n            }\n        });\n    });\n}\n\n\nfunction destroy () {\n    var viz = this.__visual__;\n    if (viz) {\n        viz.destroy();\n        viewDebug(`Removed \"${viz.toString()}\" from DOM, ${visuals.live.length} live visuals left`);\n    }\n    else warn('d3-visual without __visual__ object');\n}\n","export default function (o, prefix, name, objectOnly) {\n    if (name.substring(0, prefix.length) !== prefix)\n        name = `${prefix}${name[0].toUpperCase()}${name.substring(1)}`;\n    return objectOnly ? o[name] : o[name]();\n}\n","import assign from 'object-assign';\nimport {isFunction, isArray} from 'd3-let';\nimport {require} from 'd3-view';\nimport * as d3_scale from 'd3-scale';\n\nimport createVisual, {visuals} from './base';\nimport Visual from './visual';\nimport camelFunction from '../utils/camelfunction';\nimport warn from '../utils/warn';\n\n//\n//  crateChart\n//\n//  A chart is a drawing of series data in two dimensional\nexport default function (type) {\n    var protos = [{}, vizPrototype, chartPrototype];\n    for (var i=1; i<arguments.length; ++i) protos.push(arguments[i]);\n    return createVisual(type, assign.apply(undefined, protos));\n}\n\n\n//  Viz Prototype\n//  =================\nexport const vizPrototype = {\n\n    initialise (element) {\n        // No visual parent, create the visual\n        var visual = this.visualParent;\n        if (!visual) {\n            this.visualParent = visual = new Visual(element, this.options, null, this.model);\n            this.model = visual.model.$new();\n            this.options = {};\n        } else if (visual.visualType !== 'visual')\n            throw new Error(`visual parent of ${this.visualType} can only be \"visual\"`);\n        visual.layers.push(this);\n    },\n\n    //\n    // paper object for this visualisation\n    paper () {\n        var visual = this.getModel('visual'),\n            paper = this._paper;\n        if (paper && paper.paperType === visual.render) return paper;\n        var PaperType = visuals.papers[visual.render];\n        if (!PaperType) throw new Error(`Unknown paper ${visual.render}`);\n        paper = new PaperType(this);\n        this._paper = paper;\n        return paper;\n    },\n\n    translate (x, y) {\n        if (isFunction(x)) {\n            return function (d) {\n                var xt = x(d) || 0,\n                    yt = y(d) || 0;\n                return `translate(${xt}, ${yt})`;\n            };\n        } else return `translate(${x}, ${y})`;\n    },\n\n    getScale (name) {\n        return camelFunction(d3_scale, 'scale', name);\n    },\n\n    displayError () {}\n};\n\n\nexport const chartPrototype = {\n\n    //  override draw method\n    draw () {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        var self = this,\n            doDraw = this.doDraw;\n\n        visuals.events.call('before-draw', undefined, this);\n\n        return Promise.all([\n            this.requires ? require.apply(undefined, this.requires) : [],\n            // this.getMetaData(),\n            this.getData()\n        ]).then(args => {\n            delete self.drawing;\n            var frame = args[1];\n            if (frame) {\n                args = isArray(args[0]) ? args[0] : [args[0]];\n                args.unshift(frame);\n                doDraw.apply(self, args);\n                visuals.events.call('after-draw', undefined, self);\n            }\n        }, err => {\n            delete self.drawing;\n            warn(`Could not draw ${self.toString()}: ${err}`);\n            this.displayError(err);\n        });\n    }\n};\n","import assign from 'object-assign';\nimport {select} from 'd3-selection';\n\nimport {visuals} from './base';\n\n\nexport default function createPaper (type, proto) {\n\n    function Paper (viz) {\n        var element = this.initialise(viz);\n        Object.defineProperties(this, {\n            element: {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            paperType: {\n                get () {\n                    return type;\n                }\n            }\n        });\n    }\n\n    Paper.prototype = assign({}, paperPrototype, proto);\n\n    visuals.papers[type] = Paper;\n    return Paper;\n}\n\n\nconst paperPrototype = {\n\n    initialise () {},\n    transition () {},\n    size (box) {\n        this.sel\n            .attr('width', box.width)\n            .attr('height', box.height);\n        return this;\n    },\n\n    group (cname) {\n        if (!cname) cname = 'main';\n        var sel = this.sel;\n        sel\n            .selectAll(`.${cname}`)\n            .data([0]).enter()\n            .append('g').classed(cname, true);\n        return sel.select(`.${cname}`);\n    },\n\n    dim (value) {\n        return value;\n    }\n};\n\n\nexport const Svg = createPaper('svg', {\n\n    initialise (viz) {\n        var svg = viz.visualParent.paper.append('svg')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true)\n            .style('position', 'absolute');\n        return svg.node();\n    }\n});\n\n\nexport const Div = createPaper('div', {\n\n    initialise (viz) {\n        var div = viz.visualParent.paper.append('div')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true);\n            //.style('position', 'absolute');\n        return div.node();\n    },\n\n    group (cname) {\n        if (!cname) cname = 'main';\n        var sel = this.sel;\n        sel\n            .selectAll(`.${cname}`)\n            .data([0]).enter()\n            .append('div').classed(cname, true);\n        return sel.select(`.${cname}`);\n    },\n});\n","//\n//  Add a menu buttom to a visual\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\n\n\nglobalOptions.menu = {\n    display: false,\n    height: '8%',\n    maxHeight: 50,\n    minHeight: 20\n};\n\n\nvisuals.events.on('after-init.menu', viz => {\n    if (viz.visualType === 'visual') {\n        var menu = viz.getModel('menu');\n        if (menu.display) {\n            viz.menu = viz.sel.insert('nav', ':first-child').classed('d3-nav navbar p-1', true);\n            viz.menu.append('h4').classed('title', true);\n        }\n    }\n});\n\nvisuals.events.on('before-draw.menu', viz => {\n    if (viz && viz.menu) {\n        refreshMenu(viz);\n    }\n});\n\n\nfunction refreshMenu(viz) {\n    var menu = viz.getModel('menu'),\n        height = viz.dim(menu.height, viz.height, menu.minHeight, menu.maxHeight);\n    viz.menu.style('height', `${height}px`);\n}\n","import {format} from 'd3-format';\nimport {map} from 'd3-collection';\n\nconst formats = map();\n\nexport default function (specifier, value) {\n    var fmt = formats.get(specifier);\n    if (!fmt) {\n        fmt = format(specifier);\n        formats.set(specifier, fmt);\n    }\n    return fmt(value);\n}\n","//\n//  dataStore integration with visuals\nimport {isString, pop} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport {visuals} from '../core/base';\nimport DataStore from '../data/store';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\nimport cachedFormat from '../utils/format';\n\n//\n// Visual Data Context\nvisuals.options.dataContext = {\n    $format: cachedFormat\n};\n\n//  getData method\n//  =====================\n//\n//  Inject a method for easily retrieving data from the datastore\nvizPrototype.getData = function () {\n    var name = this.model.data;\n    if (!name) {\n        warn(`Visual ${this.visualType} without data name, cannot get data`);\n        return resolvedPromise();\n    }\n    return this.dataStore.getData(name);\n};\n\n//\n// Context for expression evaluation\nvizPrototype.getContext = function (context) {\n    return this.dataStore.model.$child(context);\n};\n\n\nvisuals.events.on('before-init.data', viz => {\n    if (!viz.isViz) return;\n    // remove data from options\n    viz.data = pop(viz.options, 'data');\n});\n\n\nvisuals.events.on('after-init.data', viz => {\n    Object.defineProperties(viz, {\n        dataStore : {\n            get () {\n                if (viz.visualParent) return viz.visualParent.dataStore;\n                return viz.model.dataStore;\n            }\n        },\n    });\n    if (viz.isViz) setupLayer(viz);\n    else setupVisual(viz);\n});\n\n\nfunction setupVisual (visual) {\n    var store = visual.dataStore,\n        data = pop(visual.options, 'data');\n    //\n    if (!store) {\n        // create the data store for the visual or container\n        store = new DataStore(visual.getModel('dataContext'));\n        visual.model.dataStore = store;\n    }\n    store.addSources(data);\n}\n\n\nfunction setupLayer (layer) {\n    var store = layer.dataStore,\n        data = pop(layer, 'data');\n    if (!data) return;\n    if (isString(data)) data = {source: data};\n    if (!data.name) data.name = layer.model.uid;\n    data = store.addSources(data);\n    if (data)\n        layer.model.$set('data', data.name);\n    else\n        warn(`Could not create data source ${data.name}`);\n}\n","import {vizPrototype} from '../core/chart';\nimport {visuals} from '../core/base';\n\n\nvisuals.options.font = {\n    size: '3%',\n    minSize: 10,\n    maxSize: 20\n};\n\n\nvizPrototype.font = function (box) {\n    var model = this.getModel(),\n        font = this.getModel('font'),\n        size = this.dim(font.size, box.height, font.minSize, font.maxSize);\n    if (model.fontSizeMultiplier)\n        size *= model.fontSizeMultiplier;\n    return size;\n};\n","import {inBrowser} from 'd3-let';\nimport {viewDebounce} from 'd3-view';\nimport {select} from 'd3-selection';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nif (!globalOptions.resizeDelay)\n    globalOptions.resizeDelay = 200;\n\n\nif (inBrowser) {\n    var resize = viewDebounce(() => {\n        visuals.live.forEach(p => p.resize());\n    }, globalOptions.resizeDelay);\n\n    select(window).on('resize.visuals', resize);\n}\n","// Title plot annotation\nimport {isString} from 'd3-let';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.title = {\n    text: null,\n    fontSize: '5%',\n    minFontSize: 15,\n    maxFontSize: 25\n};\n\n\nvisuals.events.on('before-init.title', viz => {\n    var title = viz.options.title;\n    if (isString(title)) viz.options.title = {text: title};\n});\n\n\nvisuals.events.on('before-draw.title', viz => {\n    var title = viz.getModel('title');\n    if (!title.text) return;\n    var visual = viz.isViz ? viz.visualParent : viz;\n    if (visual.visualType === 'visual' && visual.menu) menuTitle(visual, title, viz);\n});\n\n\nfunction menuTitle(visual, title, viz) {\n    var height = number(visual.menu.style('height')),\n        maxSize = title.maxFontSize ? Math.min(height-4, title.maxFontSize) : height-4,\n        size = viz.dim(title.fontSize, visual.width, title.minFontSize, maxSize);\n    visual.menu.select('.title')\n        .html(title.text)\n        .style('font-size', `${size}px`)\n        .style('line-height', `${height}px`);\n}\n\n\nfunction number (px) {\n    return +px.substring(0, px.length-2);\n}\n","import {isObject} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst KEYS = ['top', 'bottom', 'left', 'right'];\nconst LEFTRIGHT = ['left', 'right'];\n\n\n// margin for visual marks\nglobalOptions.margin = {\n    top: 20,\n    bottom: 20,\n    left: 20,\n    right: 20\n};\n// padding for the visual paper\nglobalOptions.padding = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n};\n\n\n//\n//  Bounding box for a viz\n//  ==========================\nvizPrototype.boundingBox = function () {\n    var width = this.visualParent.width,\n        height = this.visualParent.height,\n        margin = calculate(this.getModel('margin'), width, height),\n        padding = calculate(this.getModel('padding'), width, height),\n        total = KEYS.reduce((o, key) => {\n            o[key] = margin[key] + padding[key];\n            return o;\n        }, {});\n    return {\n        width: width,\n        height: height,\n        margin: margin,\n        padding: margin,\n        total: total,\n        innerWidth: width - total.left - total.right,\n        innerHeight: height - total.top - total.bottom\n    };\n};\n\n\nvisuals.events.on('after-init.margin', viz => {\n    viz.margin = margins('margin', viz);\n    viz.padding = margins('padding', viz);\n});\n\n\nfunction margins (name, viz) {\n    var value = viz.options[name];\n\n    if (value !== undefined && !isObject(value)) {\n        var v = value || 0;\n        viz.options[name] = {\n            left: v,\n            right: v,\n            top: v,\n            bottom: v\n        };\n    }\n}\n\n\nfunction calculate (model, width, height) {\n    return KEYS.reduce((o, key) => {\n        o[key] = sizeValue(model[key], LEFTRIGHT.indexOf(key) > -1 ? width : height);\n        return o;\n    }, {});\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {axisTop, axisBottom, axisLeft, axisRight} from 'd3-axis';\n\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\n\n\nconst axisOrientation = map({\n    top: axisTop,\n    bottom: axisBottom,\n    left: axisLeft,\n    right: axisRight\n});\n\nconst axisDefaults = {\n    tickSize: 6,\n    tickSizeOuter: null,\n    stroke: '#333'\n};\n\n\nvisuals.options.xAxis = assign({\n    location: \"bottom\"\n}, axisDefaults);\n\n\nvisuals.options.yAxis = assign({\n    location: \"left\"\n}, axisDefaults);\n\n\nvizPrototype.xAxis = function (scale, x, y) {\n    var model = this.getModel('xAxis'),\n        axis = axisOrientation.get(model.location)(scale).tickSize(model.tickSize);\n    if (model.tickSizeOuter !== null) axis.tickSizeOuter(model.tickSizeOuter);\n    this.paper()\n        .group('x-axis')\n        .attr(\"transform\", this.translate(x, y))\n        .call(axis).select('path.domain').attr('stroke', model.stroke);\n};\n\nvizPrototype.yAxis = function (scale, x, y) {\n    var model = this.getModel('yAxis'),\n        axis = axisOrientation.get(model.location)(scale).tickSize(model.tickSize);\n    if (model.tickSizeOuter !== null) axis.tickSizeOuter(model.tickSizeOuter);\n    this.paper()\n        .group('y-axis')\n        .attr(\"transform\", this.translate(x, y))\n        .call(axis).select('path.domain').attr('stroke', model.stroke);\n};\n\n\nvizPrototype.axis = function (orientation, scale) {\n    return axisOrientation.get(orientation)(scale);\n};\n","import {symbol, symbolCircle, symbolSquare, symbolStar} from 'd3-shape';\nimport {map} from 'd3-collection';\n\nimport {vizPrototype} from '../core/chart';\n\nconst symbols = map({\n    circle: symbolCircle,\n    square: symbolSquare,\n    star: symbolStar\n});\n\n\nvizPrototype.getSymbol = function (name) {\n    var s = symbols.get(name);\n    return symbol().type(s);\n};\n","import {map} from 'd3-collection';\nimport {range} from 'd3-array';\nimport {color} from 'd3-color';\nimport {isObject} from 'd3-let';\nimport {\n    scaleSequential,\n    interpolateViridis, interpolateInferno, interpolateMagma,\n    interpolatePlasma, interpolateWarm, interpolateCool,\n    interpolateRainbow, interpolateCubehelixDefault\n} from 'd3-scale';\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\nexport const colorScales = map();\n\n\nglobalOptions.color = {\n    scale: 'cool',\n    // Minumim number of colors in a sequantial color scale\n    // This helps in keeping a consistent palette when few colors are used\n    scaleMinPoints: 6,\n    // An offset in the color scale, useful for combined visuals\n    scaleOffset: 0,\n    stroke: '#333',\n    strokeOpacity: 1,\n    fillOpacity: 1,\n};\n\ncolorScales.set('viridis', () =>  scaleSequential(interpolateViridis));\ncolorScales.set('inferno', () =>  scaleSequential(interpolateInferno));\ncolorScales.set('magma', () =>  scaleSequential(interpolateMagma));\ncolorScales.set('plasma', () =>  scaleSequential(interpolatePlasma));\ncolorScales.set('warm', () =>  scaleSequential(interpolateWarm));\ncolorScales.set('cool', () =>  scaleSequential(interpolateCool));\ncolorScales.set('rainbow', () =>  scaleSequential(interpolateRainbow));\ncolorScales.set('cubehelix', () =>  scaleSequential(interpolateCubehelixDefault));\n\n//\n//  Color scale method\n//  ==========================\nvizPrototype.colors = function (n) {\n    var color = this.getModel('color'),\n        scaleDef = colorScales.get(color.scale);\n\n    if (!scaleDef) throw new Error(`Unknown scale ${color.scale}`);\n    if (!isObject(scaleDef)) scaleDef = {scale: scaleDef};\n    if (scaleDef.minPoints === undefined) scaleDef.minPoints = color.scaleMinPoints;\n\n    var offset = color.scaleOffset,\n        npoints = n + offset,\n        points = Math.max(npoints, scaleDef.minPoints),\n        domain = scaleDef.reversed ? [points-1, 0] : [0, points-1],\n        scale = scaleDef.scale().domain(domain);\n    return range(offset, Math.min(npoints, points)).map(v => scale(v));\n};\n\n//\n//  Linear Gradient method\n//  ==========================\n//\n//  Create a monocromatic linear gradient in the visualization box,\n//  either horizontal or vertical\nvizPrototype.linearGradient = function (col, box, orientation, gid) {\n    var paper = this.paper().sel,\n        defs = paper.select('defs');\n    if (!defs.node()) defs = paper.append('defs');\n    const\n        grad = defs.selectAll(`#${gid}`).data([0]),\n        colto = color(col);\n\n    colto.opacity = 0.1;\n\n    grad.enter()\n        .append('linearGradient')\n        .attr('id', gid)\n        .attr('x1', '0%')\n        .attr('y1', '0%')\n        .attr('x2', orientation === 'vertical' ? '0%' : '100%')\n        .attr('y2', orientation === 'vertical' ? '100%' : '0%');\n\n    var stops = defs.select(`#${gid}`)\n                    .selectAll('stop')\n                    .data([{offset: '0%', color: col}, {offset: '100%', color: colto}]);\n\n    stops.enter()\n            .append('stop')\n        .merge(stops)\n            .attr('offset', d => d.offset)\n            .attr('stop-color', d => d.color);\n\n    return `url(#${gid})`;\n};\n","import {legendColor, legendSize, legendSymbol} from 'd3-svg-legend';\nimport {map} from 'd3-collection';\nimport {pop} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\nglobalOptions.legend = {\n    location: \"top-right\",\n    orient: \"vertical\",\n    fontSize: '3%',\n    title: '',\n    titleWidth: \"20%\",\n    labelFormat: null,\n    titleMinWidth: 30,\n    titleMaxWidth: 60,\n    minFontSize: 10,\n    maxFontSize: 20,\n    offsetX: 10,\n    offsetY: 10\n};\n\n\nconst legends = {\n    color: legendColor,\n    size: legendSize,\n    symbol: legendSymbol\n};\n\n\n//\n//  Legend method\n//  ==========================\nvizPrototype.legend = function (cfg, box) {\n    var vizModel = this.getModel(),\n        lgModel = this.getModel('legend'),\n        name = pop(cfg, 'type') || vizModel.legendType,\n        size = this.dim(lgModel.fontSize, box.height, lgModel.minFontSize, lgModel.maxFontSize);\n    if (!name) return;\n    var legend = legends[name];\n    if (!legend) return warn(`Could not load legend ${name}`);\n    legend = legend().orient(lgModel.orient);\n    if (lgModel.title) {\n        var width = this.dim(lgModel.titleWidth, box.width, lgModel.titleMinWidth, lgModel.titleMaxWidth);\n        legend.title(lgModel.title).titleWidth(width);\n    }\n\n    if (lgModel.labelFormat) legend.labelFormat(lgModel.labelFormat);\n\n    // apply cfg parameters\n    for (let key in cfg) legend[key](cfg[key]);\n\n    var g = this.paper()\n            .group('legend')\n            .style('font-size', `${size}px`)\n            .call(legend),\n        bb = locations.get(lgModel.location)(g.node().getBBox(), box, lgModel);\n    g.attr('transform', this.translate(bb.x, bb.y));\n};\n\n\nconst locations = map({\n    top,\n    bottom,\n    right,\n    left,\n    'top-left': topLeft,\n    'top-right': topRight,\n    'bottom-left': bottomLeft,\n    'bottom-right': bottomRight\n});\n\n\nfunction top (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottom (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction right (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: box.total.top + (box.innerHeight - bb.height)/2 \n    };\n}\n\n\nfunction left (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottomLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction bottomRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n","import createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\n\n\nexport default createVisual('container', {\n\n    initialise () {\n        this.live = [];\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    draw() {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        var self = this;\n        visuals.events.call('before-draw', undefined, self);\n        return Promise.all(this.live.map(visual => visual.redraw())).then(() => {\n            delete self.drawing;\n            visuals.events.call('after-draw', undefined, self);\n        });\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n    }\n});\n","import assign from 'object-assign';\nimport {isString, isObject} from 'd3-let';\n\nimport VisualContainer from '../core/container';\nimport warn from '../utils/warn';\n\n//\n//  vizComponent base prototype\n//  =============================\n//\n//  Some common properties and methods for all visualize components\n//\nexport const vizComponent = {\n    props: [\n        'schema',\t    // Schema is a collection of fields to display in the table\n        'datasource',\t// Data source\n        'plugins',      // list of string/objects\n\t],\n\n    render (props, attrs, el) {\n        var self = this,\n            inner = this.select(el).html();\n        //\n        // build\n        return this.getSchema(props.schema, schema => {\n            if (!isObject(schema)) schema = {};\n            return self.build(schema, inner, attrs);\n        });\n    },\n\n    // get the schema from the input schema property\n    getSchema (input, build) {\n        var parent = this.model.visual;\n\n        // allow to specify the schema as an entry of\n        // visuals object in the dashboard schema\n        if (parent && parent !== this.model && isString(input)) {\n            var schema = parent.getVisualSchema(input);\n            if (schema) input = schema;\n        }\n\n        if (isString(input)) {\n            return this.json(input).then(build).catch(err => {\n                warn(`Could not reach ${input}: ${err}`);\n            });\n        }\n        else return build(input);\n    },\n    //\n    // build the visual component has the schema available\n    build () {}\n};\n//\n//  Dashboard Component\n//  ========================\n//\n//  A collection of visual components arranged according\n//  to a custom layout.\n//\n//  * Dashboard visuals are independent of each other but\n//    interact via the data object\n//  * The Dashboard layout is given by the inner HTML elements\n//  * The configuration is obtained via the schema property which\n//    can be either:\n//      1) an object\n//      2) a url\nexport default assign({}, vizComponent, {\n\n    build (schema, inner, attrs) {\n        var model = this.model,\n            sel = this.createElement('div'),\n            root = model.root;\n        if (attrs.class) sel.attr('class', attrs.class);\n        if (!schema.visuals) schema.visuals = {};\n        model.visual = new VisualContainer(sel.node(), schema, model.visual);\n        if (!root.visualDashboard) root.visualDashboard = model.visual;\n        return this.mountInner(sel, inner);\n    }\n});\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\n\nimport {vizComponent} from './dashboard';\nimport Visual from '../core/visual';\n\n\n//\n//  Visual component\n//  ======================\n//\n//  An element containing a visualization\nexport default assign({}, vizComponent, {\n\n    build (schema) {\n        var sel = this.createElement('div'),\n            type = schema.type || 'visual',\n            model = this.model,\n            options = {},\n            layers;\n\n        if (type === 'visual') {\n            layers = pop(schema, 'layers');\n            options = schema;\n        }\n        else\n            options.visual = pop(schema, 'visual') || {};\n\n        model.visual = new Visual(sel.node(), options, model.visual);\n        if (type !== 'visual') model.visual.addVisual(schema);\n        else if (layers) {\n            layers.forEach(layer => model.visual.addVisual(layer));\n        }\n        return sel;\n    },\n\n    // once the element is mounted in the dom, draw the visual\n    mounted () {\n        this.model.visual.redraw();\n    }\n});\n","//\n//  d3-view components\n//  ======================\n//\n//  d3-view plugin for visualization components\n//\n//  visual plugins first\nimport '../plugins/menu';\nimport '../plugins/data';\nimport '../plugins/font';\nimport '../plugins/responsive';\nimport '../plugins/title';\nimport '../plugins/margin';\nimport '../plugins/axis';\nimport '../plugins/shapes';\nimport '../plugins/color';\nimport '../plugins/legend';\nimport dashboard from './dashboard';\nimport visual from './visual';\n\n\n// Visual components plugin\nexport default {\n\n    install (vm) {\n        vm.addComponent('dashboard', dashboard);\n        vm.addComponent('visual', visual);\n    }\n\n};\n","export default function (x) {\n    return function constant() {\n        return x;\n    };\n}\n","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function (d) {\n    return d;\n}\n","import constant from \"../utils/constant\";\nimport descending from \"../utils/descending\";\nimport identity from \"../utils/identity\";\n\n//\n//  Pyramid Shape generator\n//  ============================\nexport default function () {\n    var value = identity,\n        pad = constant(0),\n        height = 1,\n        base = 1;\n\n    function pyramid (data) {\n        let i, j, k, points, fraction,\n            hi, x, y, v0, ph, pj;\n        var n = data.length,\n            r = 0.5*base/height,\n            polygons = new Array(n),\n            index = new Array(n);\n\n        for (i=0; i<n; ++i) {\n            polygons[index[i] = i] = +value(data[i], i, data);\n        }\n\n        // Sort the polygons\n        index.sort((i, j) => {return descending(polygons[i], polygons[j]);});\n\n        // Compute the polygons! They are stored in the original data's order.\n        v0 = polygons[index[0]];\n        hi = null;\n\n        for (i=n-1; i>=0; --i) {\n            points = [];\n            if (hi === null)\n                points.push([0, 0]);\n            else {\n                y = hi + ph;\n                x = y*r;\n                points.push([x, y]);\n                points.push([-x, y]);\n            }\n            j = index[i];\n            k = n - i - 1;\n            fraction = polygons[j]/v0;\n            pj = Math.sqrt(fraction);\n            hi = height*pj;\n            ph = i ? pad(pj, k) : 0;\n            y = hi - ph;\n            x = y*r;\n            points.push([-x, y]);\n            points.push([x, y]);\n            polygons[j] = {\n                index: k,\n                value: polygons[j],\n                fraction: fraction,\n                points: points,\n                data: data[j]\n            };\n        }\n        return polygons;\n    }\n\n    pyramid.value = function(_) {\n        return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pyramid) : value;\n    };\n\n    pyramid.base = function (_) {\n        return arguments.length ? (base = _, pyramid) : base;\n    };\n\n    pyramid.height = function (_) {\n        return arguments.length ? (height = _, pyramid) : height;\n    };\n\n    pyramid.pad = function(_) {\n        return arguments.length ? (pad = typeof _ === \"function\" ? _ : constant(+_), pyramid) : pad;\n    };\n\n    return pyramid;\n}\n","export default function (range, splits) {\n    var x0 = range[0],\n        x1 = range[1],\n        dx = (x1 - x0)/splits,\n        n = Math.floor(Math.log10(dx)),\n        v = Math.pow(10, n);\n    if (dx/v > 5) v *= 10;\n    v *= 0.1;\n\n    var ndx = v*Math.ceil(dx/v),\n        nx0 = v*Math.floor(x0/v);\n    return [nx0, nx0 + splits*ndx];\n}\n","import * as d3_shape from 'd3-shape';\nimport {extent} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport warn from '../utils/warn';\nimport accessor from '../utils/accessor';\nimport camelFunction from '../utils/camelfunction';\n\n\nexport const lineDrawing = {\n\n    // get information about\n    //  * data []\n    //  * range {x: [min, max], y: [min, max]}\n    //  * meta []\n    //      * index\n    //      * label\n    //      * range\n    //\n    getDataInfo (frame) {\n        var model = this.getModel(),\n            range = this.newRange(),\n            nseries = frame.series.size(),\n            data = nseries ? frame.series.values() : [frame.data],\n            keys = nseries ? frame.series.keys() : [model.y],\n            x = accessor(model.x),\n            y = accessor(model.y),\n            self = this;\n        return {\n            data: data,\n            range: range,\n            meta: keys.map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            })\n        };\n    },\n\n    fill (data) {\n        var colors = this.colors(data.length);\n\n        function fill (d, index) {\n            return colors[index];\n        }\n\n        fill.colors = colors;\n\n        return fill;\n    },\n\n    curve (name) {\n        var obj = camelFunction(d3_shape, 'curve', name, true);\n        if (!obj) {\n            warn(`Could not locate curve type \"${name}\"`);\n            obj = camelFunction(d3_shape, 'curve', 'cardinalOpen', true);\n        }\n        return obj;\n    },\n\n    range (data, x, y, agg) {\n        var range = {\n            x: extent(data, x),\n            y: extent(data, y)\n        };\n        if (agg) {\n            Array.prototype.push.apply(agg.x, range.x);\n            Array.prototype.push.apply(agg.y, range.y);\n        }\n    },\n\n    newRange () {\n        return {\n            x: [],\n            y: []\n        };\n    },\n\n    x (box, ranges) {\n        var model = this.getModel(),\n            scale = this.getScale(model.scaleX)\n                .domain(extent(ranges))\n                .range([0, box.innerWidth]);\n        return function (d) {\n            return scale(d[model.x]);\n        };\n    },\n\n    y (box, ranges, value) {\n        var model = this.getModel(),\n            scale = this.getScale(model.scaleY)\n                .domain(extent(ranges))\n                .range([box.innerHeight, 0]);\n        if (arguments.length === 2) value = d => d[model.y];\n        return function (d) {\n            return scale(value(d));\n        };\n    },\n\n    getStack () {\n        var model = this.getModel();\n        if (model.stack) {\n            var s = d3_shape.stack();\n            if (model.stackOrder) s.order(model.stackOrder);\n            return s;\n        }\n    }\n};\n\n//\n//  Line Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('linechart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'cardinalOpen',\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear'\n    },\n\n    doDraw (frame) {\n        var self = this,\n            range = this.newRange(),\n            model = this.getModel(),\n            color = this.getModel('color'),\n            x = accessor(model.x),\n            y = accessor(model.y),\n            data = frame.series.values(),\n            meta = frame.series.keys().map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            }),\n            box = this.boundingBox(),\n            paper = this.paper(),\n            lines = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.line').data(data),\n            strokeColor = this.fill(meta),\n            //merge = paper.transition('update'),\n            line = d3_shape.line()\n                .x(this.x(box, range.x))\n                .y(this.y(box, range.y))\n                .curve(this.curve(model.curve));\n\n        lines\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', model.lineWidth)\n            .merge(lines)\n                //.transition(merge)\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', line);\n\n        lines\n            .exit()\n            .remove();\n    }\n});\n","import {stack, stackOrderDescending} from 'd3-shape';\nimport {max} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport {lineDrawing} from './line';\n//\n//  Bar Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('barchart', lineDrawing, {\n\n    options: {\n        orientation: 'vertical',\n        // stack multiple y series?\n        sortby: null, // specify \"x\" or \"y\"\n        stack: true,\n        normalize: false,\n        scale: 'linear',\n        padding: 0.1,\n        x: 'x',\n        y: 'y',\n        groupby: null,  // group data by a field for staked or grouped bar chart\n        //\n        // legend & tooltip\n        valueformat: '.1f',\n        legendType: 'color',\n        legendLabel: 'label'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            data = frame.data,\n            box = this.boundingBox(),\n            paper = this.paper().size(box),\n            bars = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.group'),\n            x = model.x,\n            y = model.y,\n            groupby = model.groupby,\n            sx = this.getScale('band'),\n            sy = this.getScale(model.scale),\n            sz = this.getScale('ordinal'),\n            stacked = false,\n            width = null,\n            height = null,\n            xrect = x0,\n            yrect = y0,\n            yi = 1,\n            groups,\n            axis;\n\n        if (model.orientation === 'vertical') {\n            sx.rangeRound([0, box.innerWidth]).paddingInner(model.padding);\n            sy.rangeRound([box.innerHeight, 0]);\n            width = sx.bandwidth;\n            height = bardim;\n        } else {\n            sx.rangeRound([0, box.innerHeight]).paddingInner(model.padding);\n            sy.rangeRound([0, box.innerWidth]);\n            yi = 0;\n            width = bardim;\n            height = sx.bandwidth;\n            xrect = y0;\n            yrect = x0;\n        }\n\n        if (groupby) {\n            groups = frame.dimension(groupby).group().top(Infinity).map(g => g['key']);\n            if (groups.length <= 1) groups = null;\n        }\n\n        if (groups) {\n            frame = frame.pivot(x, groupby, y);\n            if (model.sortby === 'y') frame = frame.sortby('total');\n            data = frame.data;\n            sz.domain(groups).range(this.colors(groups.length));\n            if (model.stack) {\n                if (model.normalize)\n                    this.normalize(frame.data);\n                stacked = true;\n            }\n        }\n\n        // set domain for the labels\n        sx.domain(data.map(d => d[x]));\n\n        if (stacked) {\n            sy.domain([0, max(data, d => d.total)]).nice();\n            data = stack().order(stackOrderDescending).keys(groups)(data);\n            var rects = bars.data(data)\n                            .enter()\n                                .append('g')\n                                .classed('group', true)\n                                .attr('fill', d => sz(d.key))\n                            .merge(bars)\n                                .attr('fill', d => sz(d.key))\n                                .attr('stroke', color.stroke)\n                                .attr('stroke-opacity', color.strokeOpacity)\n                                .attr('fill-opacity', color.fillOpacity)\n                                .selectAll('rect')\n                                .data(d => d);\n            rects.enter()\n                .append('rect')\n                .merge(rects)\n                    .transition()\n                    .attr('x', xrect)\n                    .attr('y', yrect)\n                    .attr('height', height)\n                    .attr('width', width);\n\n        } else {\n            var x1 = self.getScale('band').padding(0.5*model.padding);\n            return x1;\n        }\n\n        if (model.orientation === 'vertical') {\n            axis = this.axis('bottom', sx).tickSizeOuter(0);\n            paper.group('axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top+box.innerHeight))\n                .call(axis);\n        } else {\n            axis = this.axis('left', sx).tickSizeOuter(0);\n            paper.group('axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .call(axis);\n        }\n\n        if (model.legendType && groups) {\n            this.legend({scale: sz}, box);\n        }\n\n        function bardim (d) {\n            return sy(d[1-yi]) - sy(d[yi]);\n        }\n\n        function x0 (d) {\n            return sx(d.data[x]);\n        }\n\n        function y0 (d) {\n            return sy(d[yi]);\n        }\n    }\n});\n","import {ascending, range, extent, quantile} from 'd3-array';\nimport {scaleLinear} from 'd3-scale';\n\nimport createChart from '../core/chart';\nimport accessor from '../utils/accessor';\nimport constant from '../utils/constant';\nimport {lineDrawing} from './line';\n\n//\n//  Box Chart\n//  =============\n//\n//  A box-and-whisker plot uses simple glyphs that summarize a quantitative\n//  distribution with five standard statistics: the smallest value, lower\n//  quartile, median, upper quartile, and largest value.\n//  This summary approach allows the viewer to easily recognize\n//  differences between distributions.\n//\nexport default createChart('boxchart', lineDrawing, {\n\n    options: {\n        orientation: 'vertical',\n        lineWidth: 1,\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear',\n        // area with vertical gradient to zero opacity\n        gradient: true\n    },\n\n    doDraw (frame) {\n        var self = this,\n            model = this.getModel(),\n            //color = this.getModel('color'),\n            info = self.getDataInfo(frame),\n            box = this.boundingBox(),\n            chart = boxplot(),\n            paper = this.paper().size(box),\n            x = accessor(model.x),\n            //y = accessor(model.y),\n            boxes = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.box')\n                .data(info.data),\n            //fill = this.fill(info.meta),\n            groups = frame.groupby(model.x),\n            sx = this.getScale(model.scaleX)\n                .domain(extent(frame.data, x)),\n            //sy = this.getScale(model.scaleY)\n            //    .domain(extent(frame.data, y)),\n            width = box.innerWidth;\n\n        if (model.orientation === 'vertical') {\n            sx.range([0, box.innerWidth]);\n        } else {\n            sx.range([0, box.innerHeight]);\n            width = this.innerHeight;\n        }\n        chart.width(this.dim(model.width, width, width/groups.length - 2));\n\n        boxes\n            .enter()\n                .append('g')\n                    .classed('box', true)\n                    .call(chart);\n    }\n});\n\n\nfunction boxplot () {\n    var width = 1,\n        height = 1,\n        duration = 0,\n        domain = null,\n        value = Number,\n        whiskers = boxWhiskers,\n        quartiles = boxQuartiles,\n        tickFormat = null;\n\n    // For each small multiple\n    function box (g) {\n        g.each((d, i) => {\n            d = d.map(value).sort(ascending);\n\n            const\n                n = d.length,\n                min = d[0],\n                max = d[n - 1],\n                // Compute quartiles. Must return exactly 3 elements.\n                quartileData = d.quartiles = quartiles(d),\n                // Compute whiskers. Must return exactly 2 elements, or null.\n                whiskerIndices = whiskers && whiskers(d),\n                whiskerData = whiskerIndices && whiskerIndices.map(i => d[i]),\n                // Compute outliers. If no whiskers are specified, all data are \"outliers\".\n                // We compute the outliers as indices, so that we can join across transitions!\n                outlierIndices = whiskerIndices\n                    ? range(0, whiskerIndices[0]).concat(range(whiskerIndices[1] + 1, n))\n                    : range(n),\n                // Compute the new x-scale.\n                x1 = scaleLinear()\n                    .domain(domain && domain.call(this, d, i) || [min, max])\n                    .range([height, 0]),\n                // Retrieve the old x-scale, if this is an update.\n                x0 = this.__chart__ || scaleLinear()\n                  .domain([0, Infinity])\n                  .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n            // Note: the box, median, and box tick elements are fixed in number,\n            // so we only have to handle enter and update. In contrast, the outliers\n            // and other elements are variable, so we need to exit them! Variable\n            // elements also fade in and out.\n\n            // Update center line: the vertical line spanning the whiskers.\n            var center = g.selectAll(\"line.center\")\n              .data(whiskerData ? [whiskerData] : []);\n\n            center.enter().insert(\"line\", \"rect\")\n              .attr(\"class\", \"center\")\n              .attr(\"x1\", width / 2)\n              .attr(\"y1\", function(d) { return x0(d[0]); })\n              .attr(\"x2\", width / 2)\n              .attr(\"y2\", function(d) { return x0(d[1]); })\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .style(\"opacity\", 1)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); });\n\n            center.transition()\n              .duration(duration)\n              .style(\"opacity\", 1)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); });\n\n            center.exit().transition()\n              .duration(duration)\n              .style(\"opacity\", 1e-6)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); })\n              .remove();\n\n            // Update innerquartile box.\n            var box = g.selectAll(\"rect.box\")\n              .data([quartileData]);\n\n            box.enter().append(\"rect\")\n              .attr(\"class\", \"box\")\n              .attr(\"x\", 0)\n              .attr(\"y\", function(d) { return x0(d[2]); })\n              .attr(\"width\", width)\n              .attr(\"height\", function(d) { return x0(d[0]) - x0(d[2]); })\n            .transition()\n              .duration(duration)\n              .attr(\"y\", function(d) { return x1(d[2]); })\n              .attr(\"height\", function(d) { return x1(d[0]) - x1(d[2]); });\n\n            box.transition()\n              .duration(duration)\n              .attr(\"y\", function(d) { return x1(d[2]); })\n              .attr(\"height\", function(d) { return x1(d[0]) - x1(d[2]); });\n\n            // Update median line.\n            var medianLine = g.selectAll(\"line.median\")\n              .data([quartileData[1]]);\n\n            medianLine.enter().append(\"line\")\n              .attr(\"class\", \"median\")\n              .attr(\"x1\", 0)\n              .attr(\"y1\", x0)\n              .attr(\"x2\", width)\n              .attr(\"y2\", x0)\n            .transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1);\n\n            medianLine.transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1);\n\n            // Update whiskers.\n            var whisker = g.selectAll(\"line.whisker\")\n              .data(whiskerData || []);\n\n            whisker.enter().insert(\"line\", \"circle, text\")\n              .attr(\"class\", \"whisker\")\n              .attr(\"x1\", 0)\n              .attr(\"y1\", x0)\n              .attr(\"x2\", width)\n              .attr(\"y2\", x0)\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1);\n\n            whisker.transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1);\n\n            whisker.exit().transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1e-6)\n              .remove();\n\n            // Update outliers.\n            var outlier = g.selectAll(\"circle.outlier\")\n              .data(outlierIndices, Number);\n\n            outlier.enter().insert(\"circle\", \"text\")\n              .attr(\"class\", \"outlier\")\n              .attr(\"r\", 5)\n              .attr(\"cx\", width / 2)\n              .attr(\"cy\", function(i) { return x0(d[i]); })\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1);\n\n            outlier.transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1);\n\n            outlier.exit().transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1e-6)\n              .remove();\n\n            // Compute the tick format.\n            var format = tickFormat || x1.tickFormat(8);\n\n            // Update box ticks.\n            var boxTick = g.selectAll(\"text.box\")\n              .data(quartileData);\n\n            boxTick.enter().append(\"text\")\n              .attr(\"class\", \"box\")\n              .attr(\"dy\", \".3em\")\n              .attr(\"dx\", (d, i) => i & 1 ? 6 : -6)\n              .attr(\"x\", (d, i) => i & 1 ? width : 0)\n              .attr(\"y\", x0)\n              .attr(\"text-anchor\", function(d, i) { return i & 1 ? \"start\" : \"end\"; })\n              .text(format)\n            .transition()\n              .duration(duration)\n              .attr(\"y\", x1);\n\n            boxTick.transition()\n              .duration(duration)\n              .text(format)\n              .attr(\"y\", x1);\n\n            // Update whisker ticks. These are handled separately from the box\n            // ticks because they may or may not exist, and we want don't want\n            // to join box ticks pre-transition with whisker ticks post-.\n            var whiskerTick = g.selectAll(\"text.whisker\")\n              .data(whiskerData || []);\n\n            whiskerTick.enter().append(\"text\")\n              .attr(\"class\", \"whisker\")\n              .attr(\"dy\", \".3em\")\n              .attr(\"dx\", 6)\n              .attr(\"x\", width)\n              .attr(\"y\", x0)\n              .text(format)\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"y\", x1)\n              .style(\"opacity\", 1);\n\n            whiskerTick.transition()\n              .duration(duration)\n              .text(format)\n              .attr(\"y\", x1)\n              .style(\"opacity\", 1);\n\n            whiskerTick\n                .exit()\n                .transition()\n                .duration(duration)\n                .attr(\"y\", x1)\n                .style(\"opacity\", 1e-6)\n                .remove();\n        });\n    }\n\n    box.width = function(x) {\n        if (!arguments.length) return width;\n        width = x;\n        return box;\n    };\n\n    box.height = function(x) {\n        if (!arguments.length) return height;\n        height = x;\n        return box;\n    };\n\n    box.tickFormat = function(x) {\n        if (!arguments.length) return tickFormat;\n        tickFormat = x;\n        return box;\n    };\n\n    box.duration = function(x) {\n        if (!arguments.length) return duration;\n        duration = x;\n        return box;\n    };\n\n    box.domain = function(x) {\n        if (!arguments.length) return domain;\n        domain = x === null ? x : constant(x);\n        return box;\n    };\n\n    box.value = function(x) {\n        if (!arguments.length) return value;\n        value = x;\n        return box;\n    };\n\n    box.whiskers = function(x) {\n        if (!arguments.length) return whiskers;\n        whiskers = x;\n        return box;\n    };\n\n    box.quartiles = function(x) {\n        if (!arguments.length) return quartiles;\n        quartiles = x;\n        return box;\n    };\n\n    return box;\n}\n\n\nfunction boxWhiskers (d) {\n    return [0, d.length - 1];\n}\n\n\nfunction boxQuartiles (d) {\n    return [\n        quantile(d, 0.25),\n        quantile(d, 0.5),\n        quantile(d, 0.75)\n    ];\n}\n","import {extent} from 'd3-array';\n\n//\n//  Create a Grouper generator\n//  ===============================\n//\n//  This is a chart transform rather than a data transform\nexport default function () {\n    var groupby = null,\n        x = 'x',\n        y = 'y',\n        sort = false,\n        stack = null,\n        normalize = false;\n\n    function grouper (frame) {\n        let stacked = false,\n            data, labels, s;\n\n        if (groupby) {\n            labels = frame.dimension(groupby).group().top(Infinity).map(g => g['key']);\n            if (labels.length <= 1) labels = null;\n        }\n\n        if (labels) {\n            frame = frame.pivot(x, groupby, y);\n            if (sort) frame = frame.sortby('total');\n            data = frame.data;\n            if (stack) {\n                if (normalize)\n                    data = normalizeData(data);\n                data = stack.keys(labels)(data);\n                stacked = true;\n            }\n        } else {\n            data = frame.data;\n            labels = [y];\n        }\n\n        if (!stacked)\n            data = labels.map((key, index) => {\n                s = data.map(d => {\n                    s = [0, d[key]];\n                    s.data = d;\n                    return s;\n                });\n                s.index = index;\n                s.key = key;\n                return s;\n            });\n\n        return new GroupedData(data, x, y, stacked);\n    }\n\n    grouper.groupby = function(_) {\n        if (arguments.length) {\n            groupby = _;\n            return grouper;\n        }\n        return groupby;\n    };\n\n    grouper.x = function(_) {\n        return arguments.length ? (x = _, grouper) : x;\n    };\n\n    grouper.y = function(_) {\n        return arguments.length ? (y = _, grouper) : y;\n    };\n\n    grouper.normalize = function(_) {\n        return arguments.length ? (normalize = _, grouper) : normalize;\n    };\n\n    grouper.stack = function(_) {\n        return arguments.length ? (stack = _, grouper) : stack;\n    };\n\n    return grouper;\n}\n\n\nfunction GroupedData (data, x, y, stacked) {\n    this.data = data;\n    this.stacked = stacked;\n    this.x = x;\n    this.y = y;\n}\n\nGroupedData.prototype = {\n    rangeX () {\n        return this.range(this.x);\n    },\n    rangeY () {\n        return this.range();\n    },\n    range (key) {\n        let range, vals;\n        if (key)\n            vals = this.data.reduce((a, d) => {\n                range = extent(d, acc);\n                a.push(range[0]);\n                a.push(range[1]);\n                return a;\n            }, []);\n        else\n        vals = this.data.reduce((a, d) => {\n            range = extent(d, acc0);\n            a.push(range[0]);\n            a.push(range[1]);\n            range = extent(d, acc1);\n            a.push(range[0]);\n            a.push(range[1]);\n            return a;\n        }, []);\n        return extent(vals);\n\n        function acc0 (d) {\n            return d[0];\n        }\n\n        function acc1 (d) {\n            return d[1];\n        }\n\n        function acc (d) {\n            return d.data[key];\n        }\n    }\n};\n\n\nfunction normalizeData (data) {\n    return data;\n}\n","import {area, line} from 'd3-shape';\nimport {format} from 'd3-format';\nimport {timeFormat} from 'd3-time-format';\nimport {isDate} from 'd3-let';\nimport {color} from 'd3-color';\n\nimport createChart from '../core/chart';\nimport grouper from '../transforms/groups';\nimport {lineDrawing} from './line';\n\n//\n//  Area Chart\n//  =============\nexport default createChart('areachart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'natural',\n        x: 'x',\n        y: 'y',\n        groupby: null,  // group data by a field for staked or grouped area chart\n        scaleX: 'linear',\n        scaleY: 'linear',\n        // area with vertical gradient to zero opacity\n        gradient: true,\n        lineDarken: 0.2,\n        //\n        axisX: 'bottom',\n        axisXticks: 5,\n        axisY: 'left',\n        axisYticks: 5,\n        //\n        axisFormat: ',',\n        axisTimeFormat: '%Y-%m-%d',\n        axisTickSizeOuter: 0\n    },\n\n    doDraw (frame) {\n        var self = this,\n            model = this.getModel(),\n            x = model.x,\n            y = model.y,\n            col = this.getModel('color'),\n            box = this.boundingBox(),\n            info = grouper()\n                        .groupby(model.groupby)\n                        .stack(this.getStack())\n                        .x(x)\n                        .y(y)(frame),\n            rangeX = info.rangeX(),\n            rangeY = info.rangeY(),\n            scaleX = this.getScale(model.scaleX)\n                            .domain(rangeX)\n                            .rangeRound([0, box.innerWidth]),\n            scaleY = this.getScale(model.scaleY)\n                            .domain(rangeY)\n                            .rangeRound([box.innerHeight, 0]).nice(),\n            paper = this.paper().size(box),\n            areas = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.areagroup').data(info.data),\n            colors = this.colors(info.data.length),\n            fill = model.gradient ? colors.map((c, i) => self.linearGradient(c, box, 'vertical', `fill${self.model.uid}-${i}`)) : colors,\n            curve = this.curve(model.curve);\n\n        var areagroup = areas\n            .enter()\n                .append('g')\n                .classed('areagroup', true)\n            .merge(areas)\n                .selectAll('path')\n                .data(arealine);\n\n        areagroup\n            .enter()\n                .append('path')\n                .attr('class', d => d.type)\n                .attr('fill', d => d.fill)\n                .attr('stroke', d => d.stroke)\n                .attr('d', d => d.draw)\n            .merge(areagroup)\n                .attr('d', d => d.draw)\n                .attr('fill', d => d.fill)\n                .attr('stroke', d => d.stroke)\n                .attr('fill-opacity', col.fillOpacity)\n                .attr('stroke-width', model.lineWidth)\n                .attr('stroke-opacity', col.strokeOpacity);\n\n        areagroup\n            .exit()\n            .transition()\n            .remove();\n\n        if (model.axisX) {\n            var xa = this.axis(model.axisX, scaleX)\n                    .ticks(this.ticks(box.innerWidth, 50))\n                    .tickFormat(this.format(rangeX[0]))\n                    .tickSizeOuter(model.axisTickSizeOuter);\n            paper\n                .group('x-axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top+box.innerHeight))\n                .call(xa);\n        }\n        if (model.axisY) {\n            var ya = this.axis(model.axisY, scaleY)\n                        .ticks(this.ticks(box.innerHeight, 30))\n                        .tickFormat(this.format(rangeY[0]))\n                        .tickSizeOuter(model.axisTickSizeOuter);\n            paper\n                .group('y-axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .call(ya);\n        }\n\n        function xx(d) {\n            return scaleX(d.data[x]);\n        }\n\n        function y0(d) {\n            return scaleY(d[0]);\n        }\n\n        function y1(d) {\n            return scaleY(d[1]);\n        }\n\n        function arealine (d) {\n            var area_ = area()\n                            .curve(curve)\n                            .x(xx)\n                            .y1(y1)\n                            .y0(y0),\n                line_ = line()\n                            .curve(curve)\n                            .x(xx)\n                            .y(y1),\n                c = color(colors[d.index]);\n\n            return [\n                {\n                    type: 'area',\n                    data: d,\n                    draw: area_(d),\n                    stroke: 'none',\n                    fill: fill[d.index]\n                },\n                {\n                    type: 'line',\n                    data: d,\n                    draw: line_(d),\n                    fill: 'none',\n                    stroke: c.darker(model.lineDarken)\n                }\n            ];\n        }\n    },\n\n    format (value) {\n        if (isDate(value)) return timeFormat(this.getModel().axisTimeFormat);\n        else return format(this.getModel().axisFormat);\n    },\n\n    ticks (size, spacing) {\n        return Math.max(Math.floor(size/spacing), 1);\n    }\n});\n","import {select} from 'd3-selection';\n\n//Text wrapping code adapted from Mike Bostock\nexport default function (text, width) {\n\n    text.each(function() {\n        var text = select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineHeight = 1.2,\n            dy = parseFloat(text.attr(\"dy\")) || 0,\n            tspan = text.text(null)\n                        .append(\"tspan\")\n                        .attr(\"x\", 0)\n                        .attr(\"dy\", dy + \"em\");\n\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\")\n                            .attr(\"x\", 0)\n                            .attr(\"dy\", lineHeight + dy + \"em\").text(word);\n            }\n        }\n    });\n}\n","import {pie, arc} from 'd3-shape';\nimport {scaleOrdinal} from 'd3-scale';\nimport {viewExpression} from 'd3-view';\nimport {format} from 'd3-format';\n\nimport createChart from '../core/chart';\nimport {sizeValue} from '../utils/size';\nimport textWrap from '../utils/text-wrapping';\n\n\nconst pi = Math.PI;\nconst rad = pi/180;\n\n\nexport const proportional = {\n\n    fill (data) {\n        var colors = this.colors(data.length);\n\n        function fill (d, idx) {\n            return colors[idx];\n        }\n\n        fill.colors = colors;\n\n        return fill;\n    },\n\n    proportionalData (frame, field) {\n        return frame.dimension(field).top(Infinity);\n    },\n\n    total (field) {\n        var total = 0;\n\n        function value (d) {\n            total += d[field];\n            return d[field];\n        }\n\n        value.total = () => total;\n        return value;\n    }\n};\n\n//\n//  Pie Chart\n//  =============\n//\nexport default createChart('piechart', proportional, {\n\n    options: {\n        // The data values from this field will be encoded as angular spans.\n        // If omitted, all pie slices will have equal spans\n        field: 'data',\n        label: 'label',\n        startAngle: 0,\n        endAngle: 360,\n        sort: false,\n        innerRadius: 0,\n        padAngle: 0,\n        cornerRadius: 0,\n        lineWidth: 1,\n        //\n        fractionFormat: '.1%',\n        legendType: 'color',\n        legendLabel: \"label + ' - ' + format(fraction)\",\n        //\n        // display information in the center of the pie chart\n        // Should be used with innerRadius greater than 0\n        center: null,\n        centerOpacity: 1,\n        centerFontSize: '7%'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            field = model.field,\n            box = this.boundingBox(),\n            outerRadius = Math.min(box.innerWidth, box.innerHeight)/2,\n            innerRadius = sizeValue(model.innerRadius, outerRadius),\n            total = this.total(field),\n            angles = pie()\n                .padAngle(rad*model.padAngle)\n                .startAngle(rad*model.startAngle)\n                .endAngle(rad*model.endAngle)\n                .value(total),\n            arcs = arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius)\n                .cornerRadius(model.cornerRadius),\n            paper = this.paper().size(box),\n            //update = paper.transition('update'),\n            data = angles(this.proportionalData(frame, field)),\n            fill = this.fill(data),\n            slices = paper.group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                .selectAll('.slice').data(data);\n\n        slices\n            .enter()\n                .append('path')\n                .attr('class', 'slice')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n            .merge(slices)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', arcs)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        slices.exit().transition().remove();\n\n        if (model.center) {\n            var text = this.dataStore.eval(model.center, {total: total.total()});\n            if (text) {\n                var size = this.dim(model.centerFontSize, box.innerWidth),\n                    center = paper.group('center-notation')\n                        .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                        .selectAll('.info').data([text]);\n                center\n                    .enter()\n                        .append('text')\n                        .attr('class', 'info')\n                        .attr(\"text-anchor\", \"middle\")\n                        .attr(\"alignment-baseline\", \"middle\")\n                        .style(\"font-size\", `${size}px`)\n                        .style('fill-opacity', 0)\n                    .merge(center)\n                        .text(text)\n                        .style('fill-opacity', model.centerOpacity)\n                        .call(textWrap, 1.5*(innerRadius || outerRadius));\n\n            }\n        }\n        if (!model.legendType) return;\n        total = total.total();\n        var expr = viewExpression(model.legendLabel),\n            fmt = format(model.fractionFormat),\n            labels = data.map((d, idx) => {\n                return expr.eval({\n                    d: d,\n                    value: d.value,\n                    format: fmt,\n                    total: total,\n                    fraction: d.value/total,\n                    label: d.data[model.label] || idx\n                });\n            });\n        this.legend({\n            scale: scaleOrdinal().domain(labels).range(fill.colors)\n        }, box);\n    }\n});\n","//\n//  Custom Symbol type\n//  =====================\n//\n//  Draw a polygon given an array of points\n//  This can be used as type in a d3-shape symbol\nexport default function (points) {\n\n    return {\n        draw (context) {\n            points.forEach((point, idx) => {\n                if (!idx) context.moveTo(point[0], point[1]);\n                else context.lineTo(point[0], point[1]);\n            });\n            context.closePath();\n        }\n    };\n}\n","import {symbol} from 'd3-shape';\nimport {viewExpression} from 'd3-view';\n\nimport createChart from '../core/chart';\nimport pyramid from '../transforms/pyramid';\nimport polygon from '../utils/polygon';\nimport {proportional} from './pie';\n\n\nexport default createChart('pyramidchart', proportional, {\n\n    options: {\n        field: 'data',\n        label: 'label',\n        pad: 0.005,\n        lineWidth: 1,\n        inverted: false,\n        legendType: 'color',\n        invereted: false,\n        legendLabel: \"label + ' - ' + format('.1%', fraction)\"\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            field = model.field,\n            color = this.getModel('color'),\n            box = this.boundingBox(),\n            pad = this.dim(model.pad, Math.min(box.innerWidth, box.innerHeight)),\n            polygons = pyramid()\n                .pad(pad)\n                .value(d => d[field]),\n            scaleX = this.getScale('linear').rangeRound([0, box.innerWidth]),\n            scaleY = this.getScale('linear').rangeRound(model.inverted ? [box.innerHeight, 0] : [0, box.innerHeight]),\n            data = frame.new(polygons(this.proportionalData(frame, field))).dimension('fraction').bottom(Infinity),\n            marks = symbol().type(d => polygon(d.points.map(xy => [scaleX(xy[0]), scaleY(xy[1])]))).size(1),\n            fill = this.fill(data),\n            paper = this.paper(),\n            segments = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top))\n                .selectAll('.segment').data(data);\n\n        segments\n            .enter()\n                .append('path')\n                .attr('class', 'segment')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', marks)\n            .merge(segments)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', marks)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        segments.exit().remove();\n\n        if (!model.legendType) return;\n        var expr = viewExpression(model.legendLabel),\n            self = this,\n            labels = data.map((d, idx) => {\n                return expr.eval(self.getContext({\n                    d: d,\n                    value: d.value,\n                    fraction: d.fraction,\n                    label: d.data[model.label] || idx\n                }));\n            });\n        this.legend({\n            scale: this.getScale('ordinal').domain(labels).range(fill.colors)\n        }, box);\n    }\n\n});\n","import createChart from '../core/chart';\n\n//\n//  Treemap\n//  =============\n//\nexport default createChart('treemap', {\n    requires: ['d3-hierarchy'],\n\n    doDraw () {\n\n    }\n});\n","import createChart from '../core/chart';\n\n\nexport default createChart('text', {\n\n    options: {\n        scale: 'linear',\n        field: 'data',\n        label: 'label'\n    },\n\n    doDraw () {\n    }\n});\n","import {extent, range} from 'd3-array';\nimport {map} from 'd3-collection';\n\nimport accessor from '../utils/accessor';\nimport niceRange from '../utils/nicerange';\nimport createChart from '../core/chart';\nimport {lineDrawing} from './line';\n//\n//  Heatmap\n//  =============\n//\n//  A heatmap is a graphical representation of data where the individual\n//  values contained in a matrix are represented as colors.\n//  This chart type allow to specify to types of layout:\n//  * heatmap - classical heatmap\n//  * punchcard - the z dimension is converted into different sizes of the shape elements\n//  * contour - similar to heatmap but continous rather than descrete\nexport default createChart('heatmap', lineDrawing, {\n\n    options: {\n        shape: 'square',\n        layout: 'heatmap',\n        buckets: 10,\n        pad: 0.005,     // padding for heatmap & punchcard\n        x: 'x',\n        y: 'y',\n        z: 'data',\n        axisX: 'bottom',\n        axisY: 'left'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n        color = this.getModel('color'),\n            layout = model.layout,\n            box = this.boundingBox(),\n            zrange = extent(frame.data, accessor(model.z)),\n            paper = this.paper().size(box);\n\n        if (zrange[0] < 0 && layout === 'punchcard') layout = 'heatmap';\n\n        var heat = this.heatmap(layout, frame, box, zrange),\n            dx = (box.innerWidth - heat.width)/2,\n            dy = (box.innerHeight - heat.height)/2,\n            shape = this.getSymbol(model.shape).size(d => d.size*d.size),\n            shapes = paper.group()\n                        .attr(\"transform\", this.translate(box.total.left + dx, box.total.top + dy))\n                        .selectAll('.shape')\n                        .data(heat.data);\n\n        if (range[0] < 0 && layout === 'punchcard') layout = 'heatmap';\n\n        shapes\n            .enter()\n                .append('path')\n                .classed('shape', true)\n                .attr(\"transform\", d => `translate(${d.x}, ${d.y})`)\n                .attr(\"fill\", d => d.color)\n                .attr(\"fill-opacity\", 0)\n                .attr(\"stroke-opacity\", 0)\n                .attr(\"stroke\", color.stroke)\n                .attr('d', shape)\n            .merge(shapes)\n                .transition()\n                .attr(\"transform\", d => `translate(${d.x}, ${d.y})`)\n                .attr(\"fill-opacity\", color.fillOpacity)\n                .attr(\"fill\", d => d.color)\n                .attr(\"stroke-opacity\", color.strokeOpacity)\n                .attr(\"stroke\", color.stroke)\n                .attr('d', shape);\n\n        if (model.axisX === 'bottom')\n            this.xAxis(heat.scaleX, box.total.left, box.total.top + heat.height + dy);\n        if (model.axisY === 'left')\n            this.yAxis(heat.scaleY, box.total.left, box.total.top + dy);\n\n        if (layout === 'heatmap')\n            this.legend({\n                type: 'color',\n                shape: model.shape,\n                scale: heat.colors\n            }, box);\n        else if (layout === 'punchcard')\n            this.legend({\n                type: 'size',\n                shape: model.shape,\n                scale: heat.sizes\n            }, box);\n    },\n\n    heatmap (layout, frame, box, zrange) {\n        var model = this.getModel(),\n            pad = model.pad,\n            x = model.x,\n            y = model.y,\n            z = model.z,\n            gx = frame.dimension(model.x).group().size(),\n            gy = frame.dimension(model.y).group().size(),\n            buckets = Math.min(model.buckets, gx*gy),\n            dx = (1 - pad*(gx + 1))*box.innerWidth/gx,\n            dy = (1 - pad*(gy + 1))*box.innerHeight/gy,\n            data = [],\n            labelsX = [],\n            labelsY = [],\n            xp = map(), yp = map();\n\n        let xv, yv, zv, i, j, colors, sizes, dd, width, height;\n\n        if (dx < dy) {\n            dd = dx;\n            width = box.innerWidth;\n            pad = width*pad;\n            height = gy*(dd + pad) + pad;\n        } else {\n            dd = dy;\n            height = box.innerHeight;\n            pad = height*pad;\n            width = gx*(dd + pad) + pad;\n        }\n\n        zrange = niceRange(zrange, buckets);\n\n        if (layout === 'heatmap') {\n            colors = this.getScale('quantile').range(this.colors(buckets).reverse()).domain(zrange);\n            sizes = () => 1;\n        } else {\n            var color = this.colors(1)[0];\n            colors = () => color;\n            sizes = this.getScale('quantile').range(range(buckets).map(s => (s+1)/buckets)).domain(zrange);\n        }\n        frame.data.forEach(d => {\n            xv = d[x];\n            yv = d[y];\n            zv = d[z];\n            if (!xp.has(xv)) {\n                xp.set(xv, labelsX.length);\n                labelsX.push(xv);\n            }\n            if (!yp.has(yv)) {\n                yp.set(yv, labelsY.length);\n                labelsY.push(yv);\n            }\n            i = xp.get(xv);\n            j = yp.get(yv);\n            data.push({\n                i: i,\n                j: j,\n                x: pad + dd/2 + i*(dd + pad),\n                y: pad + dd/2 + j*(dd + pad),\n                color: colors(zv),\n                size: dd*sizes(zv),\n                data: d\n            });\n        });\n        return {\n            data: data,\n            size: dd,\n            width: width,\n            height: height,\n            scaleX: this.getScale('band').domain(labelsX).range([0, width]),\n            scaleY: this.getScale('band').domain(labelsY).range([0, height]),\n            colors: colors,\n            sizes: sizes\n        };\n    }\n});\n","//\nexport {version as visualizeVersion} from './package.json';\n//\nexport {default as randomPath} from './src/utils/randompath';\n//\n// Data layer\nexport {default as DataStore} from './src/data/store';\nexport {default as dataSources} from './src/data/sources';\n//export {default as dataLocale} from './src/data/locale';\n\n//\n//  Core API\nexport {visuals} from './src/core/base';\nexport {default as createChart} from './src/core/chart';\nexport {default as createPaper, Svg, Div} from './src/core/paper';\nexport {default as visualTransforms} from './src/transforms/index';\n//\n//  Components\nexport {default as visualComponents} from './src/components/index';\n\n// utilities\nexport {colorScales} from './src/plugins/color';\nexport {default as pyramid} from './src/transforms/pyramid';\nexport {default as niceRange} from './src/utils/nicerange';\n//\n//  Charts\n//  =========\n//\n//  Last import, important!\nexport {default as Visual} from './src/core/visual';\nexport {default as BarChart} from './src/charts/bar';\nexport {default as BoxChart} from './src/charts/box';\nexport {default as LineChart} from './src/charts/line';\nexport {default as AreaChart} from './src/charts/area';\nexport {default as PieChart} from './src/charts/pie';\nexport {default as PyramidChart} from './src/charts/pyramid';\nexport {default as Treemap} from './src/charts/treemap';\nexport {default as TextChart} from './src/charts/text';\nexport {default as Heatmap} from './src/charts/heatmap';\n"],"names":["defaults","size","options","assign","t","range","S","sigma","drift","data","x","y","norm","randomNormal","dx","i","length","config","_data","isArray","isObject","resolvedPromise","asFrame","prefix","msg","logger","warn","schemes","value","isString","indexOf","split","CSV","set","isUrl","url","fetch","viewProviders","self","then","parse","response","ct","headers","get","has","text","csvParse","json","source","store","frame","Promise","all","map","getData","frames","mergeFrames","expression","viewExpression","model","eval","field","d","DataFrame","serie","defineProperties","dimensions","series","prototype","_inner","cf","crossfilter","name","keepExisting","arguments","current","dispose","accessor","dimension","top","new","Infinity","key","total","group","reduce","pivoter","Object","m","pk","pv","o","record","mapper","transform","schema","jsonValidator","dummyValidator","type","transformFactory","valid","validate","logError","doTransform","expr","index","safeEval","push","a","Array","fill","operations","scalar_operations","agg","v","Math","max","min","count","array","undefined","fields","ops","as","groupby","countAll","fillArray","aggregate","op","forEach","entries","oo","entry","query","dim","q","filterAll","filter","sortby","timeseries","groups","newframe","tmp","filterExact","globalOptions","dateFormat","converters","utcParse","parseFloat","mappers","converter","each","DEFAULT_METHOD","DEFAULT_PERIOD","DEFAULT_ALPHA","MAXALPHA","method","fieldto","s","period","cumulate","buffer","splice","alpha","minmax","applyTransforms","transforms","ts","dataEvents","dispatch","dataSourcePrototype","transformStore","constructor","DataSource","sources","values","cfg","getConfig","initDataSource","dataSource","dataName","pop","initialise","addTransforms","call","dataSources","add","remote","composite","DataStore","dataCount","create","p","remove","ds","cachedFrame","Error","cache","context","ctx","$child","def","n","round","pow","WIDTH","HEIGHT","sizeValue","getSize","element","width","height","getWidth","widthElement","getWidthElement","getHeight","heightElement","getHeightElement","el","getParentElementRect","elementWidth","elementHeight","w","getBoundingClientRect","select","left","padding","style","right","bottom","parent","node","tagName","parentNode","substring","clone","CONTAINERS","visuals","visualPrototype","drawing","event","toString","events","on","redraw","draw","visualType","uid","visualParent","getModel","$new","$update","$on","refSize","minSize","maxSize","container","idx","live","getVisualSchema","viewBase","proto","opts","Visual","visualRoot","viewModel","types","createVisual","append","classed","sel","layers","drawCount","__visual__","fit","clear","visual","err","VisualClass","resize","currentSize","viewDebug","paper","inBrowser","observer","MutationObserver","visualManager","observe","document","documentElement","records","nodes","removedNodes","nodeName","selectAll","destroy","viz","objectOnly","toUpperCase","protos","vizPrototype","chartPrototype","apply","_paper","paperType","render","PaperType","papers","isFunction","xt","yt","camelFunction","d3_scale","doDraw","requires","require","args","unshift","displayError","createPaper","Paper","paperPrototype","box","attr","cname","enter","Svg","svg","Div","div","menu","display","insert","refreshMenu","minHeight","maxHeight","formats","specifier","fmt","format","dataContext","cachedFormat","dataStore","getContext","isViz","setupLayer","setupVisual","addSources","layer","$set","font","fontSizeMultiplier","resizeDelay","viewDebounce","window","title","menuTitle","number","maxFontSize","fontSize","minFontSize","html","px","KEYS","LEFTRIGHT","margin","boundingBox","calculate","margins","axisOrientation","axisTop","axisBottom","axisLeft","axisRight","axisDefaults","xAxis","yAxis","scale","axis","location","tickSize","tickSizeOuter","translate","stroke","orientation","symbols","symbolCircle","symbolSquare","symbolStar","getSymbol","symbol","colorScales","color","scaleSequential","interpolateViridis","interpolateInferno","interpolateMagma","interpolatePlasma","interpolateWarm","interpolateCool","interpolateRainbow","interpolateCubehelixDefault","colors","scaleDef","minPoints","scaleMinPoints","offset","scaleOffset","npoints","points","domain","reversed","linearGradient","col","gid","defs","grad","colto","opacity","stops","merge","legend","legends","legendColor","legendSize","legendSymbol","vizModel","lgModel","legendType","orient","titleWidth","titleMinWidth","titleMaxWidth","labelFormat","g","bb","locations","getBBox","topLeft","topRight","bottomLeft","bottomRight","innerWidth","offsetY","offsetX","innerHeight","vizComponent","props","attrs","inner","getSchema","build","input","catch","createElement","root","class","VisualContainer","visualDashboard","mountInner","addVisual","vm","addComponent","dashboard","constant","b","NaN","identity","pad","base","pyramid","j","k","fraction","hi","v0","ph","pj","r","polygons","sort","descending","sqrt","_","splits","x0","x1","floor","log10","ndx","ceil","nx0","lineDrawing","newRange","nseries","keys","label","obj","d3_shape","extent","ranges","getScale","scaleX","scaleY","stack","stackOrder","order","createChart","meta","lines","strokeColor","curve","lineWidth","strokeOpacity","line","exit","bars","sx","sy","sz","stacked","xrect","yrect","y0","yi","rangeRound","paddingInner","bandwidth","bardim","pivot","normalize","nice","stackOrderDescending","rects","fillOpacity","transition","getDataInfo","chart","boxplot","info","duration","Number","whiskers","boxWhiskers","quartiles","boxQuartiles","tickFormat","ascending","whiskerData","whiskerIndices","concat","scaleLinear","__chart__","center","quartileData","medianLine","whisker","outlier","outlierIndices","boxTick","whiskerTick","quantile","grouper","labels","normalizeData","GroupedData","vals","acc","acc0","acc1","getStack","rangeX","rangeY","areas","gradient","c","areagroup","arealine","axisX","xa","ticks","axisTickSizeOuter","axisY","ya","xx","y1","area_","area","line_","darker","lineDarken","isDate","timeFormat","axisTimeFormat","axisFormat","spacing","words","reverse","word","lineHeight","dy","tspan","join","getComputedTextLength","pi","PI","rad","proportional","outerRadius","innerRadius","angles","pie","padAngle","startAngle","endAngle","arcs","arc","cornerRadius","proportionalData","slices","centerFontSize","centerOpacity","textWrap","legendLabel","fractionFormat","scaleOrdinal","point","moveTo","lineTo","closePath","inverted","marks","polygon","xy","segments","layout","zrange","z","heat","heatmap","shape","shapes","sizes","gx","gy","buckets","labelsX","labelsY","xp","yp","xv","yv","zv","dd","niceRange"],"mappings":"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"}