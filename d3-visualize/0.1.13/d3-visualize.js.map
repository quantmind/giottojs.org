{"version":3,"file":"d3-visualize.js","sources":["../src/utils/randompath.js","../src/data/array.js","../src/data/warn.js","../src/utils/isurl.js","../src/data/remote.js","../src/data/composite.js","../src/data/expression.js","../src/utils/accessor.js","../src/data/dataframe.js","../src/transforms/base.js","../src/transforms/filter.js","../src/utils/warn.js","../src/utils/fillarray.js","../src/transforms/aggregate.js","../src/transforms/crossfilter.js","../src/transforms/timeseries.js","../src/core/options.js","../src/transforms/mapfields.js","../src/utils/minmax.js","../src/transforms/moving-average.js","../src/transforms/index.js","../src/data/sources.js","../src/data/store.js","../src/utils/round.js","../src/utils/size.js","../src/utils/clone.js","../src/core/base.js","../src/core/visual.js","../src/utils/camelfunction.js","../src/core/chart.js","../src/core/paper.js","../src/plugins/menu.js","../src/utils/format.js","../src/plugins/data.js","../src/plugins/font.js","../src/plugins/responsive.js","../src/plugins/title.js","../src/plugins/margin.js","../src/plugins/axis.js","../src/plugins/shapes.js","../src/plugins/color.js","../src/plugins/legend.js","../src/utils/constant.js","../src/utils/functor.js","../src/utils/identity.js","../src/plugins/mouse.js","../src/plugins/tooltip.js","../src/core/container.js","../src/components/dashboard.js","../src/components/visual.js","../src/components/index.js","../src/utils/descending.js","../src/transforms/pyramid.js","../src/utils/nicerange.js","../src/charts/line.js","../src/charts/bar.js","../src/charts/box.js","../src/transforms/groups.js","../src/charts/area.js","../src/utils/text-wrapping.js","../src/charts/pie.js","../src/utils/polygon.js","../src/charts/pyramid.js","../src/charts/treemap.js","../src/charts/text.js","../src/charts/heatmap.js","../src/charts/geo.js","../index.js"],"sourcesContent":["import assign from 'object-assign';\nimport {range} from 'd3-array';\nimport {randomNormal} from 'd3-random';\n\n\nconst defaults = {\n    sigma: 0.1,\n    drift: 0\n};\n\n\nexport default function (size, options) {\n    options = assign({}, defaults, options);\n    var t = range(0, +size, 1),\n        S = options.sigma,\n        drift = options.drift,\n        data = [{x: 0, y: 0}],\n        norm = randomNormal(0, 1),\n        dx;\n\n    for (var i = 1; i < t.length; i++) {\n        dx = drift + S * norm();\n        data[i] = {\n            x: i,\n            y: data[i - 1].y + dx\n        };\n    }\n\n    return data;\n}\n","import {isArray, isObject} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\n//\n//  Array DataSource\n//  ====================\n//\n//  Data is given in an array, pkain & simple\nexport default {\n\n    initialise (config) {\n        this._data = config.data;\n    },\n\n    getConfig (config) {\n        if (isArray(config)) return {data: config};\n        else if (isObject(config) && isArray(config.data)) return config;\n    },\n\n    getData () {\n        return resolvedPromise(this.asFrame(this._data));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-data-source]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import {isString} from 'd3-let';\n\n\nconst schemes = ['http', 'https', 'ws', 'wss'];\n\n\nexport default function (value) {\n    return isString(value) && schemes.indexOf(value.split('://')[0]) > -1;\n}\n","import {csvParse} from 'd3-dsv';\nimport {set} from 'd3-collection';\nimport {isObject} from 'd3-let';\nimport {viewProviders} from 'd3-view';\n\nimport warn from './warn';\nimport isUrl from '../utils/isurl';\n\nconst CSV = set(['text/plain', 'text/csv', 'application/vnd.ms-excel']);\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isUrl(config)) return {url: config};\n        else if (isObject(config) && config.url)\n            return config;\n    },\n\n    initialise (config) {\n        this.url = config.url;\n    },\n\n    getData () {\n        var fetch = viewProviders.fetch,\n            self = this;\n        if (!fetch) {\n            warn('fetch provider not available, cannot submit');\n            return [];\n        }\n        return fetch(this.url).then(parse).then(data => self.asFrame(data));\n    }\n};\n\n\nfunction parse (response) {\n    var ct = (response.headers.get('content-type') || '').split(';')[0];\n    if (CSV.has(ct))\n        return response.text().then(csvParse);\n    else if (ct === 'application/json')\n        return response.json();\n    else {\n        warn(`Cannot load content type '${ct}'`);\n        return [];\n    }\n}\n","import {isArray, isObject} from 'd3-let';\n//\n//  A composite dataSource\n//  ===================\n//\n//  A composite data source has the source attribute with the name of one\n//  or more data sets to use as the source for this data set.\n//  The source property is useful in combination with a transform pipeline\n//  to derive new data.\n//  If string-valued, indicates the name of the source data set.\n//  If array-valued, specifies a collection of data source names that\n//  should be merged (unioned) together.\nexport default {\n\n    initialise (config) {\n        this.source = config.source;\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.source) {\n            if (!isArray(config.source)) config.source = [config.source];\n            return config;\n        }\n    },\n\n    getData () {\n        var store = this.store,\n            sources = this.source,\n            self = this;\n\n        return Promise.all(sources.map(source => {\n             return store.getData(source);\n        })).then(frames => {\n            if (frames.length === 1) return frames[0];\n            else if (self.config.merge) return self.mergeFrames(frames);\n            else return frames.reduce((o, frame, index) => {\n                o[sources[index]] = frame;\n                return o;\n            }, {type: 'frameCollection'});\n        });\n    },\n\n    // TODO: implement frame merging\n    mergeFrames (frames) {\n        return frames[0];\n    }\n};\n","import {isObject, isPromise} from 'd3-let';\nimport {viewExpression} from 'd3-view';\n\n\nexport default {\n\n    initialise (config) {\n        this.expression = viewExpression(config.expression);\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.expression)\n            return config;\n    },\n\n    getData () {\n        var self = this,\n            model = this.store.model,\n            result = this.expression.eval(model);\n        if (isPromise(result)) return result.then(data => self.asFrame(data));\n        else return self.asFrame(result);\n    }\n};\n","export default function (field) {\n    return function (d) {\n        return d[field];\n    };\n}\n","import {isArray} from 'd3-let';\nimport {map} from 'd3-collection';\nimport crossfilter from 'crossfilter';\n\nimport accessor from '../utils/accessor';\n\n\nexport default function DataFrame (data, serie, store) {\n    if (isArray(data)) data = {\n        store: store,\n        data: data,\n        dimensions: {},\n        series: map()\n    };\n    Object.defineProperties(this, {\n        _inner: {\n            get () {\n                return data;\n            }\n        },\n        store: {\n            get () {\n                return data.store;\n            }\n        },\n        data: {\n            get () {\n                return data.data;\n            }\n        },\n        dimensions: {\n            get () {\n                return data.dimensions;\n            }\n        },\n        series: {\n            get () {\n                return data.series;\n            }\n        }\n    });\n    this.serie = serie;\n}\n\n\nDataFrame.prototype = {\n\n    size () {\n        return this.data.length;\n    },\n\n    new (serie) {\n        if (isArray(serie)) return new DataFrame(serie, null, this.store);\n        else return new DataFrame(this._inner, serie);\n    },\n\n    cf () {\n        if (!this._inner.cf) this._inner.cf = crossfilter(this.data);\n        return this._inner.cf;\n    },\n\n    //  Create and return a crossfilter dimension\n    //  If value is not specified, keepExisting is by default true, and any\n    //  existing dimension name is recycled.\n    dimension (name, value, keepExisting) {\n        if (arguments.length === 1) keepExisting = true;\n        var current = this.dimensions[name];\n        if (current) {\n            if (keepExisting) return current;\n            current.dispose();\n        }\n        if (!value) value = accessor(name);\n        this.dimensions[name] = this.cf().dimension(value);\n        return this.dimensions[name];\n    },\n\n    //  Sort a dataframe by name and return the top values or all of them if\n    //  top is not defined. The name can be a function.\n    sortby (name, top) {\n        return this.new(this.dimension(name).top(top || Infinity));\n    },\n\n    // return a new dataframe by pivoting values for field name\n    pivot (dimension, key, value, total) {\n        var group = this.dimension(dimension).group();\n        if (!total) total = 'total';\n        return this.new(group.reduce(pivoter(1), pivoter(-1), Object).all().map(d => d.value));\n\n        function pivoter (m) {\n            let pk, pv;\n            return function (o, record) {\n                pk = ''+record[key];\n                pv = m*record[value];\n                o[dimension] = record[dimension];\n                if (pk in o) o[pk] += pv;\n                else o[pk] = pv;\n                if (total in o) o[total] += pv;\n                else o[total] = pv;\n                return o;\n            };\n        }\n    },\n\n    add () {\n        //this._inner.cf.add(data);\n    },\n\n    map (mapper) {\n        return this.new(this.data.map(mapper));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\n\nexport default function (options) {\n    const\n        transform = options.transform,\n        schema = options.schema || {},\n        jsonValidator = viewProviders.jsonValidator ? viewProviders.jsonValidator(options.schema) : dummyValidator;\n    if (!schema.type) schema.type = 'object';\n\n    function transformFactory (config) {\n        const valid = jsonValidator.validate(config);\n\n        if (!valid) return jsonValidator.logError();\n\n        return doTransform;\n\n        function doTransform (frame) {\n            return transform(frame, config);\n        }\n    }\n\n    transformFactory.schema = schema;\n\n    return transformFactory;\n}\n\n\nconst dummyValidator = {\n    validate () {\n        return true;\n    }\n};\n","import {viewExpression} from 'd3-view';\n\nimport transformFactory from './base';\n\n//\n// Create a groupby transform from a config object\nexport default transformFactory ({\n    schema: {\n        description: \"The filter transform removes objects from a data frame based on a provided filter expression\",\n        properties: {\n            expr: {\n                type: \"string\"\n            }\n        },\n        required: [\"expr\"]\n    },\n    transform (frame, config) {\n        var expr = viewExpression(config.expr);\n        return frame.data.reduce((data, d, index) => {\n            if (expr.safeEval({d: d, index: index, frame: frame})) data.push(d);\n            return data;\n        }, []);\n    }\n});\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-visualize]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","export default function (size, value) {\n    var a = new Array(size);\n    a.fill(value);\n    return a;\n}\n","import {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {max, min, sum, mean, median, variance, deviation} from 'd3-array';\n\nimport warn from '../utils/warn';\nimport fillArray from '../utils/fillarray';\n\nexport const operations = map({\n    count,\n    max,\n    min,\n    sum,\n    mean,\n    median,\n    variance,\n    deviation\n});\n\nexport const scalar_operations = map({\n    count (agg) {return agg + 1;},\n    sum (agg, v) {return agg + v;},\n    max: Math.max,\n    min: Math.min\n});\n\n\nfunction count (array, accessor) {\n    return array.reduce((v, d) => {\n        if (accessor(d) !== undefined) v += 1;\n        return v;\n    }, 0);\n}\n//\n// The aggregate transform groups and summarizes an imput data stream to\n// produce a derived output data stream. Aggregate transforms can be used\n// to compute counts, sums, averages and other descriptive statistics over\n// groups of data objects.\nexport default function (config) {\n    let fields = config.fields,\n        ops = config.ops,\n        as = config.as,\n        groupby = config.groupby;\n\n    if (!fields && !ops) return countAll;\n\n    if (!isArray(fields)) return warn('Aggregate transforms expect an array of fields');\n    if (!ops) ops = 'count';\n    if (isString(ops)) ops = fillArray(fields.length, ops);\n    if (!isArray(ops)) return warn('Aggregate transform expects an array of ops');\n    if (ops.length < fields.length) warn('Aggregate transforms expects an ops array with same length as fields');\n    if (!as) as = [];\n    if (!isArray(as)) return warn('Aggregate transform expects an array of as fields');\n    return aggregate;\n\n\n    function countAll (frame) {\n        let key;\n        return frame.data.reduce((o, d) => {\n            for (key in d) {\n                if (key in o) o[key] += 1;\n                else o[key] = 1;\n            }\n            return o;\n        }, {});\n    }\n\n    function aggregate (frame) {\n        var data = [],\n            name, op;\n\n        if (groupby) return group(frame);\n\n        fields.forEach((field, index) => {\n            name = ops[index];\n            op = count;\n            if (name) {\n                op = operations.get(name);\n                if (!op) {\n                    op = count;\n                    warn(`Operation ${ops[index]} is not supported, use count`);\n                }\n            }\n            data.push({\n                label: as[index] || field,\n                data: op(frame.data, d => d[field])\n            });\n        });\n        return data;\n    }\n\n    //\n    //  Perform aggregation with a set of data fields to group by\n    function group (frame) {\n        let v, name, op;\n        const entries = fields.map((field, index) => {\n            name = ops[index];\n            op = scalar_operations.get('count');\n            if (name) {\n                op = scalar_operations.get(name);\n                if (!op) {\n                    op = scalar_operations.get('count');\n                    warn(`Operation ${name} is not supported, use count`);\n                }\n            }\n            return {\n                field: field,\n                as: as[index] || field,\n                op: op\n            };\n        });\n\n        return frame.dimension(groupby).group().reduce((o, record) => {\n            return entries.reduce((oo, entry) => {\n                v = 0;\n                if (entry.as in oo) v = oo[entry.as];\n                oo[entry.as] = entry.op(v, record[entry.field]);\n                return oo;\n            }, o);\n        }, null, Object).all().map(d => {\n            d.value[groupby] = d.key;\n            return d.value;\n        });\n    }\n}\n","import {isArray, isString} from 'd3-let';\nimport warn from '../utils/warn';\n\n//\n// Apply a cross filter to an array of fields\nexport default function (config) {\n    let fields = config.fields,\n        query = config.query;\n\n    if (!isArray(fields)) return warn('crossfilter transform expects an array of fields');\n    if (!isArray(query)) return warn('crossfilter transform expects an array of query');\n    if (query.length != fields.length) return warn('crossfilter transform expects an query array with same length as fields');\n\n    return crossfilter;\n\n    function crossfilter (frame) {\n        let dim, q;\n        fields.forEach((field, index) => {\n            q = query[index];\n            if (isString(q)) q = frame.store.eval(q);\n            dim = frame.dimension(field).filterAll();\n            if (q) dim.filter(q);\n        });\n        if (dim) return frame.new(dim.top(Infinity));\n        return frame;\n    }\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var sortby = config.sortby,\n        groupby = config.groupby;\n\n    if (!sortby) warn('timeseries transform requires a \"sortby\" entry');\n\n    return timeseries;\n\n    function timeseries (frame) {\n        if (sortby) {\n            if (groupby) {\n                var dim = frame.dimension(groupby),\n                    groups = dim.group().top(Infinity),\n                    newframe = frame.new([]),\n                    tmp;\n                groups.forEach(group => {\n                    tmp = frame.new(dim.filterExact(group.key).top(Infinity)).dimension(sortby).group().top(Infinity);\n                    newframe.series.set(group.key, frame.new(tmp).dimension('key').top(Infinity));\n                });\n                return newframe;\n            } else {\n                return frame.new(frame.dimension(sortby).top(Infinity));\n            }\n        }\n        return frame;\n    }\n}\n","//\n//  Global options for visuals\n//  ============================\n//\nexport default {\n    // visual data source\n    dataSource: null,\n    //\n    size: {\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    }\n};\n","//\n//  Map Fields Transform\n//  ========================\n//\n//  Convert a set af fields to a different data type\n//\nimport {map} from 'd3-collection';\nimport {isString} from 'd3-let';\nimport {utcParse} from 'd3-time-format';\n\nimport transformFactory from './base';\nimport warn from '../utils/warn';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.dateFormat = '%d-%b-%y';\n\n\nconst converters = {\n    date (entry) {\n        return utcParse(entry.dateFormat || globalOptions.dateFormat);\n    },\n    number () {\n        return parseFloat;\n    }\n};\n\nexport default transformFactory({\n    shema: {\n        description: \"map a field values into another type\",\n        properties: {\n            fields: {\n                type: \"object\"\n            },\n            dateFormat: {\n                type: \"string\"\n            }\n        },\n        required: [\"fields\"]\n    },\n    transform (frame, config) {\n        var fields = map(config.fields),\n            mappers = [];\n        let i, converter;\n\n        fields.each((entry, key) => {\n            if (isString(entry)) entry = {type: entry};\n            converter = converters[entry.type];\n            if (!converter) warn(`Cannot convert field ${key} to type ${entry.type}`);\n            else mappers.push([key, converter(entry)]);\n        });\n\n        if (mappers.length)\n            frame = frame.map(d => {\n                for (i=0; i<mappers.length; ++i)\n                    d[mappers[i][0]] = mappers[i][1](d[mappers[i][0]]);\n                return d;\n            });\n\n        return frame;\n    }\n});\n","export default function (value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n","import transformFactory from './base';\nimport minmax from '../utils/minmax';\n\nconst\n    DEFAULT_METHOD = 'ema',   // or sma simple moving average\n    DEFAULT_PERIOD = 10,\n    DEFAULT_ALPHA = 0.5,\n    MAXALPHA = 0.999999;\n\n//\n// Exponential moving average transform\n// Useful for smoothing out volatile timeseries\nexport default transformFactory({\n    shema: {\n        description: \"Create moving average series from existing one. The new series override the existing one unless the as array is provided\",\n        properties: {\n            method: {\n                type: \"string\"\n            },\n            alpha: {\n                type: \"number\"\n            },\n            period: {\n                type: \"number\"\n            },\n            fields: {\n                type: \"array\",\n                items: {\n                    type: \"string\"\n                }\n            },\n            as: {\n                type: \"array\",\n                items: {\n                    type: \"string\"\n                }\n            }\n        },\n        required: [\"fields\"]\n    },\n    transform (frame, config) {\n        const as = config.as || [],\n            method = config.method || DEFAULT_METHOD;\n        let fieldto, y, s;\n\n        config.fields.forEach((field, index) => {\n            fieldto = as[index] || field;\n            //\n            // Simple Moving Average\n            if (method === 'sma') {\n                const period = Math.max(config.period || DEFAULT_PERIOD, 1),\n                    cumulate = [],\n                    buffer = [];\n                frame.data.forEach((d, index) => {\n                    y = d[field];\n                    if (cumulate.length === period) y -= buffer.splice(0, 1)[0];\n                    buffer.push(y);\n                    if (index) y += cumulate[cumulate.length-1];\n                    cumulate.push(y);\n                    d[fieldto] = y/cumulate.length;\n                });\n            //\n            // Exponential moving average\n            } else {\n                const alpha = minmax(config.alpha || DEFAULT_ALPHA, 1-MAXALPHA, MAXALPHA);\n\n                frame.data.forEach((d, index) => {\n                    y = d[field];\n                    if (!index) s = y;\n                    else s = alpha*s + (1-alpha)*y;\n                    d[fieldto] = s;\n                });\n            }\n        });\n    }\n});\n","// Collection of transforms\nimport {map} from 'd3-collection';\nimport {isArray} from 'd3-let';\n\nimport filter from './filter';\nimport aggregate from './aggregate';\nimport crossfilter from './crossfilter';\nimport timeseries from './timeseries';\nimport mapfields from './mapfields';\nimport movingaverage from './moving-average';\n\n//\n//  transforms Store\nexport default map({\n    filter,\n    aggregate,\n    mapfields,\n    timeseries,\n    crossfilter,\n    movingaverage\n});\n\n\n// Apply data transforms to a series\nexport function applyTransforms (frame, transforms) {\n    let ts;\n    if (!transforms) return frame;\n    transforms.forEach(transform => {\n        if (transform) {\n            ts = transform(frame);\n            if (isArray(ts)) frame = frame.new(ts);\n            else if (ts) frame = ts;\n        }\n    });\n    return frame;\n}\n","import assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {pop, isArray} from 'd3-let';\n\nimport DataFrame from './dataframe';\nimport transformStore, {applyTransforms} from '../transforms/index';\nimport warn from '../utils/warn';\n\nconst dataEvents = dispatch('init', 'data');\n\n\n//\n//  DataSource prototype\n//  ======================\nconst dataSourcePrototype = {\n\n    // get the config object-assign// This method is used by the prototype\n    // to check if the config object is a valid one\n    getConfig () {},\n\n    // initialise the data source with a config object\n    initialise () {},\n\n    getData () {},\n\n    //\n    addTransforms (transforms) {\n        var self = this;\n        let t;\n        if (!transforms) return;\n        if (!isArray(transforms)) transforms = [transforms];\n        transforms.forEach(transform => {\n            t = transformStore.get(transform.type);\n            if (!t) warn(`Transform \"${transform.type}\" not known`);\n            else self.transforms.push(t(transform));\n        });\n    },\n    //\n    // given a data object returns a Cross filter object\n    asFrame (data) {\n        if (isArray(data)) {\n            data = data.map(entry => {\n                if (entry.constructor !== Object) entry = {data: entry};\n                return entry;\n            });\n            data = new DataFrame(data, null, this.store);\n        }\n        return applyTransforms(data, this.transforms);\n    }\n};\n\n\n// DataSource container\nexport default assign(map(), {\n    events: dataEvents,\n\n    add (type, source) {\n\n        // DataSource constructor\n        function DataSource (config, store) {\n            initDataSource(this, type, config, store);\n        }\n\n        DataSource.prototype = assign({}, dataSourcePrototype, source);\n\n        this.set(type, DataSource);\n        return DataSource;\n    },\n\n    // Create a new DataSource\n    create (config, store) {\n        var sources = this.values(),\n            cfg;\n        for (var i=0; i<sources.length; ++i) {\n            cfg = sources[i].prototype.getConfig(config);\n            if (cfg) return new sources[i](cfg, store);\n        }\n    }\n});\n\n\nfunction initDataSource(dataSource, type, config, store) {\n\n    var name = store.dataName(pop(config, 'name')),\n        transforms = [];\n\n    // store.natural = cf.dimension(d => d._id);\n\n    Object.defineProperties(dataSource, {\n        name: {\n            get () {\n                return name;\n            }\n        },\n        store: {\n            get () {\n                return store;\n            }\n        },\n        type: {\n            get () {\n                return type;\n            }\n        },\n        // transforms to apply to data\n        transforms: {\n            get () {\n                return transforms;\n            }\n        },\n        config: {\n            get () {\n                return config;\n            }\n        }\n    });\n\n    dataSource.initialise(config);\n    dataSource.addTransforms(pop(config, 'transforms'));\n    store.sources.set(name, dataSource);\n    dataEvents.call('init', undefined, dataSource);\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {isArray, isString, isPromise} from 'd3-let';\nimport {viewExpression, resolvedPromise} from 'd3-view';\n\nimport array from './array';\nimport remote from './remote';\nimport composite from './composite';\nimport expression from './expression';\nimport dataSources from './sources';\nimport transformStore from '../transforms/index';\n\n\ndataSources.add('array', array);\ndataSources.add('remote', remote);\ndataSources.add('composite', composite);\ndataSources.add('expression', expression);\n\n//\n//  DataStore\n//  ==============\n//\n//  Map names to datasets\n//  Individual data sets are assumed to contain a collection of records\n//  (or “rows”), which may contain any number of named data\n//  attributes (fields, or “columns”).\n//  Records are modeled using standard JavaScript objects.\nexport default function DataStore(model) {\n    var sources = map();\n\n    Object.defineProperties(this, {\n        sources: {\n            get () {\n                return sources;\n            }\n        }\n    });\n\n    // transforms function\n    this.transforms = assign({}, transformStore);\n    this.dataCount = 0;\n    this.model = model;\n}\n\n\nDataStore.prototype = {\n    size () {\n        return this.sources.size();\n    },\n\n    // Add a new serie from a data source\n    addSources (config) {\n        //\n        // data is a string, it must be already registered with store\n        if (isString(config)) config = {source: config};\n\n        if (isArray(config)) {\n            var self = this;\n            return config.map(cfg => {\n                return dataSources.create(cfg, self);\n            });\n        } else if (config) {\n            return dataSources.create(config, this);\n        }\n    },\n\n    addTransforms (transforms) {\n        assign(this.transforms, transforms);\n    },\n\n    // set, get or remove a data source\n    source (name, source) {\n        if (arguments.length === 1) return this.sources.get(name);\n        if (source === null) {\n            var p = this.sources.get(name);\n            this.sources.remove(name);\n            return p;\n        }\n        this.sources.set(name, source);\n        return this;\n    },\n\n    clearCache () {\n        this.sources.each(ds => {\n            delete ds.cachedFrame;\n        });\n    },\n\n    // get data from a source\n    getData (source) {\n        var ds = this.sources.get(source);\n        if (!ds) throw new Error(`Data source ${source} not available`);\n        if (ds.cachedFrame) return resolvedPromise(ds.cachedFrame);\n        var data = ds.getData();\n        if (!isPromise(data)) data = resolvedPromise(data);\n        return data.then(frame => {\n            if (ds.config.cache) ds.cachedFrame = frame;\n            return frame;\n        });\n    },\n\n    eval (expr, context) {\n        let ctx = this.model;\n        if (context) ctx = ctx.$child(context);\n        return viewExpression(expr).safeEval(ctx);\n    },\n\n    dataName (name) {\n        this.dataCount++;\n        if (name) return '' + name;\n        var def = this.source('default');\n        if (!def) return 'default';\n        return `source${this.dataCount}`;\n    }\n};\n","export default function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n}\n","import {select} from 'd3-selection';\n\nimport round from './round';\n\n\nconst WIDTH = 400;\nconst HEIGHT = '75%';\n\n\nexport function sizeValue (value, size) {\n    if (typeof(value) === \"string\" && value.indexOf('%') === value.length-1)\n        return round(0.01*parseFloat(value)*size);\n    return +value;\n}\n\n// Internal function for evaluating paper dom size\nexport function getSize (element, options) {\n    var size = {\n        width: options.width,\n        height: options.height\n    };\n\n    if (!size.width) {\n        size.width = getWidth(element);\n        if (size.width)\n            size.widthElement = getWidthElement(element);\n        else\n            size.width = WIDTH;\n    }\n\n    if (!size.height) {\n        size.height = getHeight(element);\n        if (size.height)\n            size.heightElement = getHeightElement(element);\n        else\n            size.height = HEIGHT;\n    }\n\n    // Allow to specify height as a percentage of width\n    size.height = sizeValue(size.height, size.width);\n    return size;\n}\n\n\nexport function getWidth (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementWidth(el);\n}\n\n\nexport function getHeight (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementHeight(el);\n}\n\n\nexport function getWidthElement (element) {\n    return getParentElementRect(element, 'width');\n}\n\n\nexport function getHeightElement (element) {\n    return getParentElementRect(element, 'height');\n}\n\n\nfunction elementWidth (el) {\n    var w = el.getBoundingClientRect()['width'],\n        s = select(el),\n        left = padding(s.style('padding-left')),\n        right = padding(s.style('padding-right'));\n    return w - left - right;\n}\n\n\nfunction elementHeight (el) {\n    var w = el.getBoundingClientRect()['height'],\n        s = select(el),\n        top = padding(s.style('padding-top')),\n        bottom = padding(s.style('padding-bottom'));\n    return w - top - bottom;\n}\n\n\nfunction getParentElementRect (element, key) {\n    let parent = element.node ? element.node() : element,\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        v = parent.getBoundingClientRect()[key];\n        if (v)\n            return parent;\n        parent = parent.parentNode;\n    }\n}\n\n\nfunction padding (value) {\n    if (value && value.substring(value.length-2) == 'px')\n        return +value.substring(0, value.length-2);\n    return 0;\n}\n\n\nexport function boundingBox (size) {\n    var w = size.widthElement ? getWidth(size.widthElement) : size.width,\n        h;\n    if (size.heightPercentage)\n        h = round(w*size.heightPercentage, 0);\n    else\n        h = size.heightElement ? getHeight(size.heightElement) : size.height;\n    if (size.minHeight)\n        h = Math.max(h, size.minHeight);\n    return [round(w), round(h)];\n}\n","import {isArray, isObject} from 'd3-let';\n\n\nexport default function clone (o) {\n    if (isArray(o)) return o.map(clone);\n    else if (isObject(o)) {\n        var v = {};\n        for (let key in o) {\n            v[key] = clone(o[key]);\n        }\n        return v;\n    } else return o;\n}\n","import assign from 'object-assign';\nimport {pop, isString, isObject} from 'd3-let';\nimport {dispatch} from 'd3-dispatch';\nimport {select} from 'd3-selection';\nimport {viewBase, viewModel} from 'd3-view';\nimport 'd3-transition';\n\nimport globalOptions from './options';\nimport {sizeValue} from '../utils/size';\nimport clone from '../utils/clone';\n\n\nconst CONTAINERS = ['visual', 'container'];\n\n//\n//  Gloval visuals object\n//  ==========================\n//\n//  Container of\n//  * live visuals\n//  * visual types\n//  * paper types\n//  * visual events\nexport const visuals = {\n    live: [],\n    types: {},\n    papers: {},\n    options: globalOptions,\n    events: dispatch(\n        'before-init',\n        'after-init',\n        'before-draw',\n        'after-draw'\n    )\n};\n\n//\n//  Visual Interface\n//  ====================\n//\n//  Base prototype object for visuals\n//\nexport const visualPrototype = assign({}, {\n\n    // initialise the visual with options\n    initialise () {\n\n    },\n\n    // draw this visual\n    draw () {},\n\n    // redraw the visual\n    // this is the method that should be invoked by applications\n    redraw (fetchData) {\n        if (this.drawing) {\n            var self = this,\n                event = `after-draw.${this.toString()}`;\n            visuals.events.on(event, () => {\n                // remove callback\n                visuals.events.on(event, null);\n                self.redraw(fetchData);\n            });\n        } else\n            this.drawing = this.draw(fetchData);\n        return this.drawing;\n    },\n\n    select (el) {\n        return select(el);\n    },\n\n    // destroy the visual\n    destroy () {},\n\n    toString () {\n        return `${this.visualType}-${this.model.uid}`;\n    },\n\n    // get a reactive model for type\n    getModel (type) {\n        if (!type) type = this.visualType;\n        var model = this.model[type];\n        if (!model && type in globalOptions) {\n            var options = pop(this.options, type),\n                self = this;\n            if (this.visualParent)\n                model = this.visualParent.getModel(type).$child(options);\n            else {\n                model = this.model.$new(globalOptions[type]);\n                model.$update(options);\n            }\n            this.model[type] = model;\n            //\n            // Trigger redraw when model change\n            // Do not fecth data\n            model.$on(() => self.redraw(false));\n        }\n        return model;\n    },\n\n    dim (size, refSize, minSize, maxSize) {\n        size = Math.max(sizeValue(size, refSize), minSize || 0);\n        if (maxSize) {\n            maxSize = Math.max(maxSize, minSize || 0);\n            size = Math.min(size, maxSize);\n        }\n        return size;\n    },\n    // pop this visual from a container\n    pop (container) {\n        if (container) {\n            var idx = container.live.indexOf(this);\n            if (idx > -1) container.live.splice(idx, 1);\n        }\n    },\n\n    getVisualSchema (name) {\n        var schema = this.options.visuals ? this.options.visuals[name] : null,\n            parent = this.visualParent;\n        if (parent && isString(schema)) {\n            name = schema;\n            schema = parent.getVisualSchema(name);\n        } else if (parent && !schema)\n            schema = parent.getVisualSchema(name);\n        if (isObject(schema))\n            return clone(schema);\n    }\n}, viewBase);\n\n//\n//  Create a new Visual Constructor\nexport default function (type, proto) {\n    const opts = pop(proto, 'options');\n    if (opts)\n        globalOptions[type] = opts;\n\n    function Visual(element, options, parent, model) {\n        Object.defineProperties(this, {\n            visualType: {\n                get () {\n                    return type;\n                }\n            },\n            isViz: {\n                get () {\n                    return CONTAINERS.indexOf(type) === -1;\n                }\n            },\n            visualRoot: {\n                get () {\n                    if (this.visualParent) return this.visualParent.visualRoot;\n                    return this;\n                }\n            }\n        });\n        this.visualParent = parent;\n        this.model = parent ? parent.model.$new() : (model || viewModel());\n        this.options = options || {};\n        this.drawing = false;\n        visuals.events.call('before-init', undefined, this);\n        this.initialise(element);\n        visuals.events.call('after-init', undefined, this);\n    }\n\n    Visual.prototype = assign({}, visualPrototype, proto);\n    visuals.types[type] = Visual;\n    return Visual;\n}\n","import {pop, inBrowser} from 'd3-let';\nimport {select} from 'd3-selection';\nimport {viewDebug} from 'd3-view';\n\nimport createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\nimport {getSize} from '../utils/size';\n\n//\n//  Visual\n//  =============\n//\n//  A Visual is a a container of visual layers and it is\n//  associated with an HTML element\n//\n//  Usually a Visual contains one layer only, however it is possible to\n//  have more than one by combining several layers together. Importantly,\n//  layers in one visual generate HTMLElements which are children of the visual\n//  element and inherit both the width and height.\n//\n//  A visual register itself with the visuals.live array\n//\nexport default createVisual('visual', {\n\n    options: {\n        render: 'svg',\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%',\n        // heightElement - selector for an element from wich to obtain height\n        heightElement: null\n    },\n\n    initialise (element) {\n        if (!element) throw new Error('HTMLElement required by visual group');\n        if (this.visualParent && this.visualParent.visualType !== 'container')\n            throw new Error('Visual parent can be a container only');\n        if (!this.select(element).select('.paper').node())\n            this.select(element).append('div').classed('paper', true);\n\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            paper : {\n                get () {\n                    return this.sel.select('.paper');\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            size: {\n                get () {\n                    return [this.width, this.height];\n                }\n            }\n        });\n\n        this.sel.classed('d3-visual', true);\n        // list of layers which define the visual\n        this.layers = [];\n        this.drawCount = 0;\n        visuals.live.push(this);\n        element.__visual__ = this;\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    // Draw the visual\n    draw (fetchData) {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        else if (!this.drawCount) {\n            this.drawCount = 1;\n            this.fit();\n        } else {\n            this.drawCount++;\n            this.clear();\n        }\n        var self = this;\n        visuals.events.call('before-draw', undefined, this);\n        return Promise.all(this.layers.map(visual => visual.redraw(fetchData)))\n            .then(() => {\n                delete self.drawing;\n                visuals.events.call('after-draw', undefined, self);\n            }, err => {\n                delete self.drawing;\n                warn(`Could not draw ${self.toString()}: ${err}`);\n            });\n    },\n\n    clear () {},\n\n    // Add a new visual to this group\n    addVisual (options) {\n        var type = pop(options, 'type');\n        var VisualClass = visuals.types[type];\n        if (!VisualClass)\n            warn(`Cannot add visual \"${type}\", not available`);\n        else\n            return new VisualClass(this.element, options, this);\n    },\n    //\n    // Fit the root element to the size of the parent element\n    fit () {\n        this.resize(null, true);\n    },\n\n    // resize the chart\n    resize (size, fit) {\n        if (!size) size = getSize(this.element.parentNode || this.element, this.getModel());\n        var currentSize = this.size;\n\n        if (fit || (currentSize[0] !== size.width || currentSize[1] !== size.height)) {\n            if (!fit) viewDebug(`Resizing \"${this.toString()}\"`);\n            this.width = size.width;\n            this.height = size.height;\n            // this.paper.style('width', this.width + 'px').style('height', this.height + 'px');\n            this.paper.style('height', this.height + 'px');\n            // if we are not just fitting draw the visual without fetching data!!\n            if (!fit) this.draw(false);\n        }\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n        this.pop(visuals);\n    }\n});\n\n\nif (inBrowser) {\n    // DOM observer\n    // Check for changes in the DOM that leads to visual actions\n    const observer = new MutationObserver(visualManager);\n    observer.observe(document.documentElement, {\n        childList: true,\n        subtree: true\n    });\n}\n\n//\n//  Clears visualisation going out of scope\nfunction visualManager (records) {\n    records.forEach(record => {\n        var nodes = record.removedNodes;\n        if (!nodes || !nodes.length) return;  // phantomJs hack\n        nodes.forEach(node => {\n            if (node.nodeName !== '#text') {\n                if (!node.__visual__)\n                    select(node).selectAll('.d3-visual').each(destroy);\n                else\n                    destroy.call(node);\n            }\n        });\n    });\n}\n\n\nfunction destroy () {\n    var viz = this.__visual__;\n    if (viz) {\n        viz.destroy();\n        viewDebug(`Removed \"${viz.toString()}\" from DOM, ${visuals.live.length} live visuals left`);\n    }\n    else warn('d3-visual without __visual__ object');\n}\n","export default function (o, prefix, name, objectOnly) {\n    if (name.substring(0, prefix.length) !== prefix)\n        name = `${prefix}${name[0].toUpperCase()}${name.substring(1)}`;\n    return objectOnly ? o[name] : o[name]();\n}\n","import assign from 'object-assign';\nimport {isFunction, isArray} from 'd3-let';\nimport {require} from 'd3-view';\nimport * as d3_scale from 'd3-scale';\n\nimport createVisual, {visuals} from './base';\nimport Visual from './visual';\nimport camelFunction from '../utils/camelfunction';\nimport warn from '../utils/warn';\n\n//\n//  crateChart\n//\n//  A chart is a drawing of series data in two dimensional\nexport default function (type) {\n    var protos = [{}, vizPrototype, chartPrototype];\n    for (var i=1; i<arguments.length; ++i) protos.push(arguments[i]);\n    return createVisual(type, assign.apply(undefined, protos));\n}\n\n\n//  Viz Prototype\n//  =================\nexport const vizPrototype = {\n\n    initialise (element) {\n        // No visual parent, create the visual\n        var visual = this.visualParent;\n        if (!visual) {\n            this.visualParent = visual = new Visual(element, this.options, null, this.model);\n            this.model = visual.model.$new();\n            this.options = {};\n        } else if (visual.visualType !== 'visual')\n            throw new Error(`visual parent of ${this.visualType} can only be \"visual\"`);\n        visual.layers.push(this);\n    },\n\n    //\n    // paper object for this visualisation\n    paper () {\n        var visual = this.getModel('visual'),\n            paper = this._paper;\n        if (paper && paper.paperType === visual.render) return paper;\n        var PaperType = visuals.papers[visual.render];\n        if (!PaperType) throw new Error(`Unknown paper ${visual.render}`);\n        paper = new PaperType(this);\n        this._paper = paper;\n        return paper;\n    },\n\n    translate (x, y) {\n        if (isFunction(x)) {\n            return function (d) {\n                var xt = x(d) || 0,\n                    yt = y(d) || 0;\n                return `translate(${xt}, ${yt})`;\n            };\n        } else return `translate(${x}, ${y})`;\n    },\n\n    getScale (name) {\n        return camelFunction(d3_scale, 'scale', name);\n    },\n\n    displayError () {}\n};\n\n\nexport const chartPrototype = {\n\n    //  override draw method\n    draw (fetchData) {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        var self = this,\n            doDraw = this.doDraw;\n\n        visuals.events.call('before-draw', undefined, this);\n\n        if (fetchData === false && this._drawArgs) {\n            delete self.drawing;\n            doDraw.apply(self, this._drawArgs);\n            visuals.events.call('after-draw', undefined, self);\n        } else {\n            return Promise.all([\n                this.requires ? require.apply(undefined, this.requires) : [],\n                // this.getMetaData(),\n                this.getData()\n            ]).then(args => {\n                delete self.drawing;\n                var frame = args[1];\n                if (frame) {\n                    args = isArray(args[0]) ? args[0] : [args[0]];\n                    args.unshift(frame);\n                    this._drawArgs = args;\n                    doDraw.apply(self, args);\n                    visuals.events.call('after-draw', undefined, self);\n                }\n            }, err => {\n                delete self.drawing;\n                warn(`Could not draw ${self.toString()}: ${err}`);\n                this.displayError(err);\n            });\n        }\n    }\n};\n","import assign from 'object-assign';\nimport {select} from 'd3-selection';\n\nimport {visuals} from './base';\n\n\nexport default function createPaper (type, proto) {\n\n    function Paper (viz) {\n        var element = this.initialise(viz);\n        Object.defineProperties(this, {\n            element: {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            paperType: {\n                get () {\n                    return type;\n                }\n            }\n        });\n    }\n\n    Paper.prototype = assign({}, paperPrototype, proto);\n\n    visuals.papers[type] = Paper;\n    return Paper;\n}\n\n\nconst paperPrototype = {\n\n    initialise () {},\n    transition () {},\n    size (box) {\n        this.sel\n            .attr('width', box.width)\n            .attr('height', box.height);\n        return this;\n    },\n\n    group (cname) {\n        if (!cname) cname = 'main';\n        var sel = this.sel;\n        sel\n            .selectAll(`.${cname}`)\n            .data([0]).enter()\n            .append('g').classed(cname, true);\n        return sel.select(`.${cname}`);\n    },\n\n    dim (value) {\n        return value;\n    }\n};\n\n\nexport const Svg = createPaper('svg', {\n\n    initialise (viz) {\n        var svg = viz.visualParent.paper.append('svg')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true)\n            .style('position', 'absolute');\n        return svg.node();\n    }\n});\n\n\nexport const Div = createPaper('div', {\n\n    initialise (viz) {\n        var div = viz.visualParent.paper.append('div')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true);\n            //.style('position', 'absolute');\n        return div.node();\n    },\n\n    group (cname) {\n        if (!cname) cname = 'main';\n        var sel = this.sel;\n        sel\n            .selectAll(`.${cname}`)\n            .data([0]).enter()\n            .append('div').classed(cname, true);\n        return sel.select(`.${cname}`);\n    },\n});\n","//\n//  Add a menu buttom to a visual\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\n\n\nglobalOptions.menu = {\n    display: false,\n    height: '8%',\n    maxHeight: 50,\n    minHeight: 20\n};\n\n\nvisuals.events.on('after-init.menu', viz => {\n    if (viz.visualType === 'visual') {\n        var menu = viz.getModel('menu');\n        if (menu.display) {\n            viz.menu = viz.sel.insert('nav', ':first-child').classed('d3-nav navbar p-1', true);\n            viz.menu.append('h4').classed('title', true);\n        }\n    }\n});\n\nvisuals.events.on('before-draw.menu', viz => {\n    if (viz && viz.menu) {\n        refreshMenu(viz);\n    }\n});\n\n\nfunction refreshMenu(viz) {\n    var menu = viz.getModel('menu'),\n        height = viz.dim(menu.height, viz.height, menu.minHeight, menu.maxHeight);\n    viz.menu.style('height', `${height}px`);\n}\n","import {format} from 'd3-format';\nimport {map} from 'd3-collection';\n\nconst formats = map();\n\nexport default function (specifier, value) {\n    var fmt = formats.get(specifier);\n    if (!fmt) {\n        fmt = format(specifier);\n        formats.set(specifier, fmt);\n    }\n    return fmt(value);\n}\n","//\n//  dataStore integration with visuals\nimport {isString, pop} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport {visuals} from '../core/base';\nimport DataStore from '../data/store';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\nimport cachedFormat from '../utils/format';\n\n//\n// Visual Data Context\nvisuals.options.dataContext = {\n    $format: cachedFormat\n};\n\n//  getData method\n//  =====================\n//\n//  Inject a method for easily retrieving data from the datastore\nvizPrototype.getData = function () {\n    var name = this.model.data;\n    if (!name) {\n        warn(`Visual ${this.visualType} without data name, cannot get data`);\n        return resolvedPromise();\n    }\n    return this.dataStore.getData(name);\n};\n\n//\n// Context for expression evaluation\nvizPrototype.getContext = function (context) {\n    return this.dataStore.model.$child(context);\n};\n\n\nvisuals.events.on('before-init.data', viz => {\n    if (!viz.isViz) return;\n    // remove data from options\n    viz.data = pop(viz.options, 'data');\n});\n\n\nvisuals.events.on('after-init.data', viz => {\n    Object.defineProperties(viz, {\n        dataStore : {\n            get () {\n                return viz.model.root.dataStore;\n            }\n        },\n    });\n    if (viz.isViz) setupLayer(viz);\n    else setupVisual(viz);\n});\n\n\nfunction setupVisual (visual) {\n    var store = visual.dataStore,\n        data = pop(visual.options, 'data');\n    //\n    if (!store) {\n        // create the data store for the visual or container\n        store = new DataStore(visual.getModel('dataContext'));\n        visual.model.root.dataStore = store;\n    }\n    store.addSources(data);\n}\n\n\nfunction setupLayer (layer) {\n    var store = layer.dataStore,\n        data = pop(layer, 'data');\n    if (!data) return;\n    if (isString(data)) data = {source: data};\n    if (!data.name) data.name = layer.model.uid;\n    data = store.addSources(data);\n    if (data)\n        layer.model.$set('data', data.name);\n    else\n        warn(`Could not create data source ${data.name}`);\n}\n","import {vizPrototype} from '../core/chart';\nimport {visuals} from '../core/base';\n\n\nvisuals.options.font = {\n    size: '3%',\n    minSize: 10,\n    maxSize: 20\n};\n\n\nvizPrototype.font = function (box) {\n    var model = this.getModel(),\n        font = this.getModel('font'),\n        size = this.dim(font.size, box.height, font.minSize, font.maxSize);\n    if (model.fontSizeMultiplier)\n        size *= model.fontSizeMultiplier;\n    return size;\n};\n","import {inBrowser} from 'd3-let';\nimport {viewDebounce} from 'd3-view';\nimport {select} from 'd3-selection';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nif (!globalOptions.resizeDelay)\n    globalOptions.resizeDelay = 200;\n\n\nif (inBrowser) {\n    var resize = viewDebounce(() => {\n        visuals.live.forEach(p => p.resize());\n    }, globalOptions.resizeDelay);\n\n    select(window).on('resize.visuals', resize);\n}\n","// Title plot annotation\nimport {isString} from 'd3-let';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.title = {\n    text: null,\n    fontSize: '5%',\n    minFontSize: 15,\n    maxFontSize: 25\n};\n\n\nvisuals.events.on('before-init.title', viz => {\n    var title = viz.options.title;\n    if (isString(title)) viz.options.title = {text: title};\n});\n\n\nvisuals.events.on('before-draw.title', viz => {\n    var title = viz.getModel('title');\n    if (!title.text) return;\n    var visual = viz.isViz ? viz.visualParent : viz;\n    if (visual.visualType === 'visual' && visual.menu) menuTitle(visual, title, viz);\n});\n\n\nfunction menuTitle(visual, title, viz) {\n    var height = number(visual.menu.style('height')),\n        maxSize = title.maxFontSize ? Math.min(height-4, title.maxFontSize) : height-4,\n        size = viz.dim(title.fontSize, visual.width, title.minFontSize, maxSize);\n    visual.menu.select('.title')\n        .html(title.text)\n        .style('font-size', `${size}px`)\n        .style('line-height', `${height}px`);\n}\n\n\nfunction number (px) {\n    return +px.substring(0, px.length-2);\n}\n","import {isObject} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst KEYS = ['top', 'bottom', 'left', 'right'];\nconst LEFTRIGHT = ['left', 'right'];\n\n\n// margin for visual marks\nglobalOptions.margin = {\n    top: 20,\n    bottom: 20,\n    left: 20,\n    right: 20\n};\n// padding for the visual paper\nglobalOptions.padding = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n};\n\n\n//\n//  Bounding box for a viz\n//  ==========================\nvizPrototype.boundingBox = function () {\n    var width = this.visualParent.width,\n        height = this.visualParent.height,\n        margin = calculate(this.getModel('margin'), width, height),\n        padding = calculate(this.getModel('padding'), width, height),\n        total = KEYS.reduce((o, key) => {\n            o[key] = margin[key] + padding[key];\n            return o;\n        }, {});\n    return {\n        width: width,\n        height: height,\n        margin: margin,\n        padding: margin,\n        total: total,\n        innerWidth: width - total.left - total.right,\n        innerHeight: height - total.top - total.bottom\n    };\n};\n\n\nvisuals.events.on('after-init.margin', viz => {\n    viz.margin = margins('margin', viz);\n    viz.padding = margins('padding', viz);\n});\n\n\nfunction margins (name, viz) {\n    var value = viz.options[name];\n\n    if (value !== undefined && !isObject(value)) {\n        var v = value || 0;\n        viz.options[name] = {\n            left: v,\n            right: v,\n            top: v,\n            bottom: v\n        };\n    }\n}\n\n\nfunction calculate (model, width, height) {\n    return KEYS.reduce((o, key) => {\n        o[key] = sizeValue(model[key], LEFTRIGHT.indexOf(key) > -1 ? width : height);\n        return o;\n    }, {});\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {format} from 'd3-format';\nimport {axisTop, axisBottom, axisLeft, axisRight} from 'd3-axis';\n\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\n\n\nconst axisOrientation = map({\n    top: axisTop,\n    bottom: axisBottom,\n    left: axisLeft,\n    right: axisRight\n});\n\nconst axisDefaults = {\n    ticks: 5,\n    tickSize: 6,\n    tickSizeOuter: null,\n    format: null,\n    stroke: '#333'\n};\n\n\nvisuals.options.xAxis = assign({\n    location: \"bottom\"\n}, axisDefaults);\n\n\nvisuals.options.yAxis = assign({\n    location: \"left\"\n}, axisDefaults);\n\n\nvizPrototype.xAxis = function (scale, x, y) {\n    var model = this.getModel('xAxis'),\n        axis = getAxis(model.location, scale, model);\n    this.paper()\n        .group('x-axis')\n        .attr(\"transform\", this.translate(x, y))\n        .transition()\n        .call(axis).select('path.domain').attr('stroke', model.stroke);\n};\n\nvizPrototype.yAxis = function (scale, x, y) {\n    var model = this.getModel('yAxis'),\n        axis = getAxis(model.location, scale, model);\n    this.paper()\n        .group('y-axis')\n        .attr(\"transform\", this.translate(x, y))\n        .transition()\n        .call(axis).select('path.domain').attr('stroke', model.stroke);\n};\n\n\nvizPrototype.xAxis1 = function (location, scale, box) {\n    var model = this.getModel('xAxis'),\n        axis = getAxis(location, scale, model);\n    this.paper()\n        .group('x-axis')\n        .attr(\"transform\", this.translateAxis(location, box))\n        .transition()\n        .call(axis).select('path.domain').attr('stroke', model.stroke);\n};\n\n\nvizPrototype.yAxis1 = function (location, scale, box) {\n    var model = this.getModel('yAxis'),\n        axis = getAxis(location, scale, model);\n    this.paper()\n        .group('y-axis')\n        .attr(\"transform\", this.translateAxis(location, box))\n        .transition()\n        .call(axis).select('path.domain').attr('stroke', model.stroke);\n};\n\n\nvizPrototype.axis = function (orientation, scale) {\n    return axisOrientation.get(orientation)(scale);\n};\n\n\nvizPrototype.translateAxis = function (location, box) {\n    if (location === 'top' || location === 'left')\n        return this.translate(box.total.left, box.total.top);\n    else if (location === 'bottom')\n        return this.translate(box.total.left, box.total.top+box.innerHeight);\n    else\n        return this.translate(box.total.left+box.innerWidth, box.total.top);\n};\n\nfunction getAxis (location, scale, model) {\n    var axis = axisOrientation.get(location)(scale).tickSize(model.tickSize);\n    if (model.tickSizeOuter !== null) axis.tickSizeOuter(model.tickSizeOuter);\n    if (model.format !== null) axis.tickFormat(format(model.format));\n    return axis.ticks(model.ticks);\n}\n","import {symbol, symbolCircle, symbolSquare, symbolStar} from 'd3-shape';\nimport {map} from 'd3-collection';\n\nimport {vizPrototype} from '../core/chart';\n\nconst symbols = map({\n    circle: symbolCircle,\n    square: symbolSquare,\n    star: symbolStar\n});\n\n\nvizPrototype.getSymbol = function (name) {\n    var s = symbols.get(name);\n    return symbol().type(s);\n};\n","import {map} from 'd3-collection';\nimport {range} from 'd3-array';\nimport {color} from 'd3-color';\nimport {isObject} from 'd3-let';\nimport {\n    scaleSequential,\n    interpolateViridis, interpolateInferno, interpolateMagma,\n    interpolatePlasma, interpolateWarm, interpolateCool,\n    interpolateRainbow, interpolateCubehelixDefault\n} from 'd3-scale';\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\nexport const colorScales = map();\n\n\nglobalOptions.color = {\n    scale: 'cool',\n    // Minumim number of colors in a sequantial color scale\n    // This helps in keeping a consistent palette when few colors are used\n    scaleMinPoints: 6,\n    // An offset in the color scale, useful for combined visuals\n    scaleOffset: 0,\n    stroke: '#333',\n    strokeOpacity: 1,\n    fillOpacity: 1,\n};\n\ncolorScales.set('viridis', () =>  scaleSequential(interpolateViridis));\ncolorScales.set('inferno', () =>  scaleSequential(interpolateInferno));\ncolorScales.set('magma', () =>  scaleSequential(interpolateMagma));\ncolorScales.set('plasma', () =>  scaleSequential(interpolatePlasma));\ncolorScales.set('warm', () =>  scaleSequential(interpolateWarm));\ncolorScales.set('cool', () =>  scaleSequential(interpolateCool));\ncolorScales.set('rainbow', () =>  scaleSequential(interpolateRainbow));\ncolorScales.set('cubehelix', () =>  scaleSequential(interpolateCubehelixDefault));\n\n//\n//  Color scale method\n//  ==========================\nvizPrototype.colors = function (n) {\n    var color = this.getModel('color'),\n        scaleDef = colorScales.get(color.scale);\n\n    if (!scaleDef) throw new Error(`Unknown scale ${color.scale}`);\n    if (!isObject(scaleDef)) scaleDef = {scale: scaleDef};\n    if (scaleDef.minPoints === undefined) scaleDef.minPoints = color.scaleMinPoints;\n\n    var offset = color.scaleOffset,\n        npoints = n + offset,\n        points = Math.max(npoints, scaleDef.minPoints),\n        domain = scaleDef.reversed ? [points-1, 0] : [0, points-1],\n        scale = scaleDef.scale().domain(domain);\n    return range(offset, Math.min(npoints, points)).map(v => scale(v));\n};\n\n//\n//  Linear Gradient method\n//  ==========================\n//\n//  Create a monocromatic linear gradient in the visualization box,\n//  either horizontal or vertical\nvizPrototype.linearGradient = function (col, box, orientation, gid) {\n    var paper = this.paper().sel,\n        defs = paper.select('defs');\n    if (!defs.node()) defs = paper.append('defs');\n    const\n        grad = defs.selectAll(`#${gid}`).data([0]),\n        colto = color(col);\n\n    colto.opacity = 0.1;\n\n    grad.enter()\n        .append('linearGradient')\n        .attr('id', gid)\n        .attr('x1', '0%')\n        .attr('y1', '0%')\n        .attr('x2', orientation === 'vertical' ? '0%' : '100%')\n        .attr('y2', orientation === 'vertical' ? '100%' : '0%');\n\n    var stops = defs.select(`#${gid}`)\n                    .selectAll('stop')\n                    .data([{offset: '0%', color: col}, {offset: '100%', color: colto}]);\n\n    stops.enter()\n            .append('stop')\n        .merge(stops)\n            .attr('offset', d => d.offset)\n            .attr('stop-color', d => d.color);\n\n    return `url(#${gid})`;\n};\n","import {legendColor, legendSize, legendSymbol} from 'd3-svg-legend';\nimport {map} from 'd3-collection';\nimport {pop} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\nglobalOptions.legend = {\n    location: \"top-right\",\n    orient: \"vertical\",\n    fontSize: '3%',\n    title: '',\n    titleWidth: \"20%\",\n    labelFormat: null,\n    titleMinWidth: 30,\n    titleMaxWidth: 60,\n    minFontSize: 10,\n    maxFontSize: 20,\n    offsetX: 10,\n    offsetY: 10,\n    shapeWidth: 15,\n    shapeHeight: 15\n};\n\n\nconst legends = {\n    color: legendColor,\n    size: legendSize,\n    symbol: legendSymbol\n};\n\n\n//\n//  Legend method\n//  ==========================\nvizPrototype.legend = function (cfg, box) {\n    var vizModel = this.getModel(),\n        lgModel = this.getModel('legend'),\n        name = pop(cfg, 'type') || vizModel.legendType,\n        size = this.dim(lgModel.fontSize, box.height, lgModel.minFontSize, lgModel.maxFontSize);\n    if (!name) return;\n    var legend = legends[name];\n    if (!legend) return warn(`Could not load legend ${name}`);\n    legend = legend().orient(lgModel.orient);\n    if (lgModel.title) {\n        var width = this.dim(lgModel.titleWidth, box.width, lgModel.titleMinWidth, lgModel.titleMaxWidth);\n        legend.title(lgModel.title).titleWidth(width);\n    }\n\n    if (lgModel.labelFormat) legend.labelFormat(lgModel.labelFormat);\n    legend.shapeWidth(lgModel.shapeWidth).shapeHeight(lgModel.shapeHeight);\n\n    // apply cfg parameters\n    for (let key in cfg) legend[key](cfg[key]);\n\n    var g = this.paper()\n            .group('legend')\n            .style('font-size', `${size}px`)\n            .html('')\n            .call(legend),\n        bb = locations.get(lgModel.location)(g.node().getBBox(), box, lgModel);\n    g.attr('transform', this.translate(bb.x, bb.y));\n};\n\n\nconst locations = map({\n    top,\n    bottom,\n    right,\n    left,\n    'top-left': topLeft,\n    'top-right': topRight,\n    'bottom-left': bottomLeft,\n    'bottom-right': bottomRight\n});\n\n\nfunction top (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottom (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction right (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: box.total.top + (box.innerHeight - bb.height)/2\n    };\n}\n\n\nfunction left (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottomLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction bottomRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n","export default function (x) {\n    return function constant() {\n        return x;\n    };\n}\n","import {isFunction} from 'd3-let';\n\nimport constant from './constant';\n\nexport default function (v) {\n    if (isFunction(v)) return v;\n    return constant(v);\n}\n","export default function (d) {\n    return d;\n}\n","//\n//\n//  Mouse events handling\n//  ==========================\n//\nimport {map} from 'd3-collection';\nimport {color} from 'd3-color';\n\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\nexport const mouseStrategies = map({\n    darker: darkerStrategy(),\n    fill: fillStrategy()\n});\n\n\nvisuals.options.mouse = {\n    over: ['darker'],\n    darkerFactor: 0.5,\n    fillColor: '#addd8e'\n};\n\n\nvizPrototype.mouseOver = function () {\n    var self = this,\n        model = this.getModel('mouse');\n\n    return function (d, i) {\n        if (!this.__mouse_over__) this.__mouse_over__ = {};\n        var sel = self.select(this);\n        let strategy;\n        model.over.forEach(name => {\n            strategy = mouseStrategies.get(name);\n            if (!strategy) warn(`Unknown mouse strategy ${name}`);\n            else strategy(self, sel, d, i);\n        });\n    };\n};\n\nvizPrototype.mouseOut = function () {\n    var self = this,\n        model = this.getModel('mouse');\n\n    return function (d, i) {\n        if (!this.__mouse_over__) this.__mouse_over__ = {};\n        var sel = self.select(this);\n        let strategy;\n        model.over.forEach(name => {\n            strategy = mouseStrategies.get(name);\n            if (!strategy) warn(`Unknown mouse strategy ${name}`);\n            else strategy.out(self, sel, d, i);\n        });\n    };\n};\n\n\nfunction darkerStrategy () {\n\n    function darker (viz, sel) {\n        var model = viz.getModel('mouse'),\n            fill = color(sel.style('fill')),\n            filldarker = fill.darker(model.darkerFactor),\n            node = sel.node();\n        node.__mouse_over__.fill = fill;\n        sel.style('fill', filldarker);\n    }\n\n    darker.out = function (viz, sel) {\n        var node = sel.node(),\n            fill = node.__mouse_over__.fill;\n        if (fill) sel.style('fill', fill);\n    };\n\n    return darker;\n}\n\n\nfunction fillStrategy () {\n\n    function fill (viz, sel) {\n        var model = viz.getModel('mouse'),\n            fill = color(sel.style('fill')),\n            node = sel.node();\n        node.__mouse_over__.fill = fill;\n        sel.transition().style('fill', model.fillColor);\n    }\n\n    fill.out = function (viz, sel) {\n        var node = sel.node(),\n            fill = node.__mouse_over__.fill;\n        if (fill) sel.transition().style('fill', fill);\n    };\n\n    return fill;\n}\n","import {map} from 'd3-collection';\nimport {inBrowser} from 'd3-let';\nimport {select} from 'd3-selection';\n\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport functor from '../utils/functor';\nimport noop from '../utils/identity';\nimport {mouseStrategies} from './mouse';\n\n\nvisuals.options.tooltip = {\n    location: \"top\",\n    offset: [0, 0],\n    html: \"\"\n};\n\n\nif (inBrowser) vizPrototype.tooltip = tooltip();\nelse vizPrototype.tooltip = noop;\n\n\nmouseStrategies.set('tooltip', function () {\n\n    function tooltip (viz, sel, d, i) {\n        var html = viz.tooltipHtml(sel, d, i);\n        if (html) {\n            var model = viz.getModel('tooltip');\n            viz.tooltip.location(model.location).offset(model.offset).html(html).show(sel.node());\n        }\n    }\n\n    tooltip.out = function (viz) {\n        viz.tooltip.hide();\n    };\n\n    return tooltip;\n}());\n\n\nvizPrototype.tooltipHtml = function (sel, d, i) {\n    var model = this.getModel('tooltip');\n    if (model.html)\n        return this.dataStore.eval(model.html, {\n            d: d,\n            index: i,\n            model: this.getModel()\n        });\n};\n\n\nfunction tooltip () {\n\n    var location = functor('top'),\n        offset = functor([0, 0]),\n        html = functor(' '),\n        node = null,\n        point = null;\n\n    const locationCallbacks = map({\n        top,\n        bottom,\n        right,\n        left,\n        'top-left': topLeft,\n        'top-right': topRight,\n        'bottom-left': bottomLeft,\n        'bottom-right': bottomRight\n    });\n\n    const locations = locationCallbacks.keys();\n\n    function selectNode() {\n        if (node === null) {\n            node = select(document.body)\n                        .append('div')\n                        .classed('d3-tooltip', true)\n                        .style('position', 'absolute')\n                        .style('top', 0)\n                        .style('opacity', 0)\n                        .style('pointer-events', 'none')\n                        .style('box-sizing', 'border-box')\n                        .node();\n            point = select(document.body)\n                        .append('svg')\n                        .style('opacity', 0)\n                        .style('pointer-events', 'none')\n                        .node().createSVGPoint();\n        }\n        return select(node);\n    }\n\n    function tooltip () {\n    }\n\n    tooltip.show = function (target) {\n        var args = Array.prototype.slice.call(arguments),\n            snode = selectNode(),\n            content = html.apply(this, args) || '',\n            poffset = offset.apply(this, args),\n            dir = location.apply(this, args),\n            scrollTop  = document.documentElement.scrollTop || document.body.scrollTop,\n            scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft,\n            coords;\n\n        snode.html(content).style('opacity', 1).style('pointer-events', 'all');\n\n        let i = locations.length;\n        while (i--) snode.classed(locations[i], false);\n        coords = locationCallbacks.get(dir).call(this, target);\n        snode.classed(dir, true)\n            .style('top', (coords.top + poffset[0]) + scrollTop + 'px')\n            .style('left', (coords.left + poffset[1]) + scrollLeft + 'px');\n\n        return tooltip;\n    };\n\n    tooltip.hide = function () {\n        selectNode().style('opacity', 0).style('pointer-events', 'none');\n        return tooltip;\n    };\n\n    // Returns tip or location\n    tooltip.location = function (v) {\n        if (!arguments.length) return location;\n        location = v === null ? v : functor(v);\n        return tooltip;\n    };\n\n    tooltip.html = function(v) {\n        if (!arguments.length) return html;\n        html = v === null ? v : functor(v);\n        return tooltip;\n    };\n\n    tooltip.offset = function(v) {\n        if (!arguments.length) return offset;\n        offset = v == null ? v : functor(v);\n        return tooltip;\n    };\n\n    return tooltip;\n\n\n\n    function top (target) {\n        var bbox = getScreenBBox(target);\n        return {\n            top:  bbox.n.y - node.offsetHeight,\n            left: bbox.n.x - node.offsetWidth / 2\n        };\n    }\n\n\n    function bottom (bb, box, options) {\n        return {\n            x: box.total.left + (box.innerWidth - bb.width)/2,\n            y: box.height - bb.height - options.offsetY\n        };\n    }\n\n\n    function right (target) {\n        var bbox = getScreenBBox(target);\n        return {\n            top:  bbox.e.y - node.offsetHeight / 2,\n            left: bbox.e.x\n        };\n    }\n\n\n    function left (bb, box, options) {\n        return {\n            x: box.total.left + (box.innerWidth - bb.width)/2,\n            y: options.offsetY\n        };\n    }\n\n\n    function topLeft (bb, box, options) {\n        return {\n            x: box.total.left + (box.innerWidth - bb.width)/2,\n            y: options.offsetY\n        };\n    }\n\n\n    function topRight (bb, box, options) {\n        return {\n            x: box.width - bb.width - options.offsetX,\n            y: options.offsetY\n        };\n    }\n\n\n    function bottomLeft (bb, box, options) {\n        return {\n            x: box.total.left + (box.innerWidth - bb.width)/2,\n            y: box.height - bb.height - options.offsetY\n        };\n    }\n\n\n    function bottomRight (bb, box, options) {\n        return {\n            x: box.total.left + (box.innerWidth - bb.width)/2,\n            y: box.height - bb.height - options.offsetY\n        };\n    }\n\n\n    // Private - gets the screen coordinates of a shape\n    //\n    // Given a shape on the screen, will return an SVGPoint for the locations\n    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n    // nw(northwest), sw(southwest).\n    //\n    //    +-+-+\n    //    |   |\n    //    +   +\n    //    |   |\n    //    +-+-+\n    //\n    // Returns an Object {n, s, e, w, nw, sw, ne, se}\n    function getScreenBBox (targetel) {\n\n        while (targetel.getScreenCTM == null && targetel.parentNode == null) {\n            targetel = targetel.parentNode;\n        }\n\n        var bbox = {},\n            matrix = targetel.getScreenCTM(),\n            tbbox = targetel.getBBox(),\n            width = tbbox.width,\n            height = tbbox.height,\n            x = tbbox.x,\n            y = tbbox.y;\n\n        point.x = x;\n        point.y = y;\n        bbox.nw = point.matrixTransform(matrix);\n        point.x += width;\n        bbox.ne = point.matrixTransform(matrix);\n        point.y += height;\n        bbox.se = point.matrixTransform(matrix);\n        point.x -= width;\n        bbox.sw = point.matrixTransform(matrix);\n        point.y -= height / 2;\n        bbox.w = point.matrixTransform(matrix);\n        point.x += width;\n        bbox.e = point.matrixTransform(matrix);\n        point.x -= width / 2;\n        point.y -= height / 2;\n        bbox.n = point.matrixTransform(matrix);\n        point.y += height;\n        bbox.s = point.matrixTransform(matrix);\n\n        return bbox;\n    }\n}\n","import createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\n\n\nexport default createVisual('container', {\n\n    initialise () {\n        this.live = [];\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    draw (fetchData) {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        var self = this;\n        visuals.events.call('before-draw', undefined, self);\n        return Promise.all(this.live.map(visual => visual.redraw(fetchData))).then(() => {\n            delete self.drawing;\n            visuals.events.call('after-draw', undefined, self);\n        });\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n    }\n});\n","import assign from 'object-assign';\nimport {isString, isObject} from 'd3-let';\n\nimport VisualContainer from '../core/container';\nimport warn from '../utils/warn';\n\n//\n//  vizComponent base prototype\n//  =============================\n//\n//  Some common properties and methods for all visualize components\n//\nexport const vizComponent = {\n    props: [\n        'schema',\t    // Schema is a collection of fields to display in the table\n        'datasource',\t// Data source\n        'plugins',      // list of string/objects\n\t],\n\n    render (props, attrs, el) {\n        var self = this,\n            inner = this.select(el).html();\n        //\n        // build\n        return this.getSchema(props.schema, schema => {\n            if (!isObject(schema)) schema = {};\n            return self.build(schema, inner, attrs);\n        });\n    },\n\n    // get the schema from the input schema property\n    getSchema (input, build) {\n        var parent = this.model.visual;\n\n        // allow to specify the schema as an entry of\n        // visuals object in the dashboard schema\n        if (parent && parent !== this.model && isString(input)) {\n            var schema = parent.getVisualSchema(input);\n            if (schema) input = schema;\n        }\n\n        if (isString(input)) {\n            return this.json(input).then(build).catch(err => {\n                warn(`Could not reach ${input}: ${err}`);\n            });\n        }\n        else return build(input);\n    },\n    //\n    // build the visual component has the schema available\n    build () {}\n};\n//\n//  Dashboard Component\n//  ========================\n//\n//  A collection of visual components arranged according\n//  to a custom layout.\n//\n//  * Dashboard visuals are independent of each other but\n//    interact via the data object\n//  * The Dashboard layout is given by the inner HTML elements\n//  * The configuration is obtained via the schema property which\n//    can be either:\n//      1) an object\n//      2) a url\nexport default assign({}, vizComponent, {\n\n    build (schema, inner, attrs) {\n        var model = this.model,\n            sel = this.createElement('div'),\n            root = model.root;\n        if (attrs.class) sel.attr('class', attrs.class);\n        if (!schema.visuals) schema.visuals = {};\n        model.visual = new VisualContainer(sel.node(), schema, model.visual, model.visual ? null : model.$new());\n        if (!root.visualDashboard) root.visualDashboard = model.visual;\n        return this.mountInner(sel, inner);\n    }\n});\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\n\nimport {vizComponent} from './dashboard';\nimport Visual from '../core/visual';\n\n\n//\n//  Visual component\n//  ======================\n//\n//  An element containing a visualization\nexport default assign({}, vizComponent, {\n\n    build (schema) {\n        var sel = this.createElement('div'),\n            type = schema.type || 'visual',\n            model = this.model,\n            options = {},\n            layers;\n\n        if (type === 'visual') {\n            layers = pop(schema, 'layers');\n            options = schema;\n        }\n        else\n            options.visual = pop(schema, 'visual') || {};\n\n        model.visual = new Visual(sel.node(), options, model.visual, model.visual ? null : model.$new());\n        if (type !== 'visual') model.visual.addVisual(schema);\n        else if (layers) {\n            layers.forEach(layer => model.visual.addVisual(layer));\n        }\n        return sel;\n    },\n\n    // once the element is mounted in the dom, draw the visual\n    mounted () {\n        if (this.model.visualDrawOnMount === false) return;\n        this.model.visual.redraw();\n    }\n});\n","//\n//  d3-view components\n//  ======================\n//\n//  d3-view plugin for visualization components\n//\n//  visual plugins first\nimport '../plugins/menu';\nimport '../plugins/data';\nimport '../plugins/font';\nimport '../plugins/responsive';\nimport '../plugins/title';\nimport '../plugins/margin';\nimport '../plugins/axis';\nimport '../plugins/shapes';\nimport '../plugins/color';\nimport '../plugins/legend';\nimport '../plugins/tooltip';\nimport '../plugins/mouse';\nimport dashboard from './dashboard';\nimport visual from './visual';\n\n\n// Visual components plugin\nexport default {\n\n    install (vm) {\n        vm.addComponent('dashboard', dashboard);\n        vm.addComponent('visual', visual);\n    }\n\n};\n","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","import constant from \"../utils/constant\";\nimport descending from \"../utils/descending\";\nimport identity from \"../utils/identity\";\n\n//\n//  Pyramid Shape generator\n//  ============================\nexport default function () {\n    var value = identity,\n        pad = constant(0),\n        height = 1,\n        base = 1;\n\n    function pyramid (data) {\n        let i, j, k, points, fraction,\n            hi, x, y, v0, ph, pj;\n        var n = data.length,\n            r = 0.5*base/height,\n            polygons = new Array(n),\n            index = new Array(n);\n\n        for (i=0; i<n; ++i) {\n            polygons[index[i] = i] = +value(data[i], i, data);\n        }\n\n        // Sort the polygons\n        index.sort((i, j) => {return descending(polygons[i], polygons[j]);});\n\n        // Compute the polygons! They are stored in the original data's order.\n        v0 = polygons[index[0]];\n        hi = null;\n\n        for (i=n-1; i>=0; --i) {\n            points = [];\n            if (hi === null)\n                points.push([0, 0]);\n            else {\n                y = hi + ph;\n                x = y*r;\n                points.push([x, y]);\n                points.push([-x, y]);\n            }\n            j = index[i];\n            k = n - i - 1;\n            fraction = polygons[j]/v0;\n            pj = Math.sqrt(fraction);\n            hi = height*pj;\n            ph = i ? pad(pj, k) : 0;\n            y = hi - ph;\n            x = y*r;\n            points.push([-x, y]);\n            points.push([x, y]);\n            polygons[j] = {\n                index: k,\n                value: polygons[j],\n                fraction: fraction,\n                points: points,\n                data: data[j]\n            };\n        }\n        return polygons;\n    }\n\n    pyramid.value = function(_) {\n        return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pyramid) : value;\n    };\n\n    pyramid.base = function (_) {\n        return arguments.length ? (base = _, pyramid) : base;\n    };\n\n    pyramid.height = function (_) {\n        return arguments.length ? (height = _, pyramid) : height;\n    };\n\n    pyramid.pad = function(_) {\n        return arguments.length ? (pad = typeof _ === \"function\" ? _ : constant(+_), pyramid) : pad;\n    };\n\n    return pyramid;\n}\n","export default function (range, splits) {\n    var x0 = range[0],\n        x1 = range[1],\n        dx = (x1 - x0)/splits,\n        n = Math.floor(Math.log10(dx)),\n        v = Math.pow(10, n);\n    if (dx/v > 5) v *= 10;\n    v *= 0.1;\n\n    var ndx = v*Math.ceil(dx/v),\n        nx0 = v*Math.floor(x0/v);\n    return [nx0, nx0 + splits*ndx];\n}\n","import * as d3_shape from 'd3-shape';\nimport {extent} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport warn from '../utils/warn';\nimport accessor from '../utils/accessor';\nimport camelFunction from '../utils/camelfunction';\n\n\nexport const lineDrawing = {\n\n    // get information about\n    //  * data []\n    //  * range {x: [min, max], y: [min, max]}\n    //  * meta []\n    //      * index\n    //      * label\n    //      * range\n    //\n    getDataInfo (frame) {\n        var model = this.getModel(),\n            range = this.newRange(),\n            nseries = frame.series.size(),\n            data = nseries ? frame.series.values() : [frame.data],\n            keys = nseries ? frame.series.keys() : [model.y],\n            x = accessor(model.x),\n            y = accessor(model.y),\n            self = this;\n        return {\n            data: data,\n            range: range,\n            meta: keys.map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            })\n        };\n    },\n\n    fill (data) {\n        var colors = this.colors(data.length);\n\n        function fill (d, index) {\n            return colors[index];\n        }\n\n        fill.colors = colors;\n\n        return fill;\n    },\n\n    curve (name) {\n        var obj = camelFunction(d3_shape, 'curve', name, true);\n        if (!obj) {\n            warn(`Could not locate curve type \"${name}\"`);\n            obj = camelFunction(d3_shape, 'curve', 'cardinalOpen', true);\n        }\n        return obj;\n    },\n\n    range (data, x, y, agg) {\n        var range = {\n            x: extent(data, x),\n            y: extent(data, y)\n        };\n        if (agg) {\n            Array.prototype.push.apply(agg.x, range.x);\n            Array.prototype.push.apply(agg.y, range.y);\n        }\n    },\n\n    newRange () {\n        return {\n            x: [],\n            y: []\n        };\n    },\n\n    x (box, ranges) {\n        var model = this.getModel(),\n            scale = this.getScale(model.scaleX)\n                .domain(extent(ranges))\n                .range([0, box.innerWidth]);\n        return function (d) {\n            return scale(d[model.x]);\n        };\n    },\n\n    y (box, ranges, value) {\n        var model = this.getModel(),\n            scale = this.getScale(model.scaleY)\n                .domain(extent(ranges))\n                .range([box.innerHeight, 0]);\n        if (arguments.length === 2) value = d => d[model.y];\n        return function (d) {\n            return scale(value(d));\n        };\n    },\n\n    getStack () {\n        var model = this.getModel();\n        if (model.stack) {\n            var s = d3_shape.stack();\n            if (model.stackOrder) s.order(model.stackOrder);\n            return s;\n        }\n    }\n};\n\n//\n//  Line Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('linechart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'cardinalOpen',\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear'\n    },\n\n    doDraw (frame) {\n        var self = this,\n            range = this.newRange(),\n            model = this.getModel(),\n            color = this.getModel('color'),\n            x = accessor(model.x),\n            y = accessor(model.y),\n            data = frame.series.values(),\n            meta = frame.series.keys().map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            }),\n            box = this.boundingBox(),\n            paper = this.paper(),\n            lines = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.line').data(data),\n            strokeColor = this.fill(meta),\n            //merge = paper.transition('update'),\n            line = d3_shape.line()\n                .x(this.x(box, range.x))\n                .y(this.y(box, range.y))\n                .curve(this.curve(model.curve));\n\n        lines\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', model.lineWidth)\n            .merge(lines)\n                //.transition(merge)\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', line);\n\n        lines\n            .exit()\n            .remove();\n    }\n});\n","import {stack, stackOrderDescending} from 'd3-shape';\nimport {max} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport {lineDrawing} from './line';\n//\n//  Bar Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('barchart', lineDrawing, {\n\n    options: {\n        orientation: 'vertical',\n        // stack multiple y series?\n        sortby: null, // specify \"x\" or \"y\"\n        stack: true,\n        normalize: false,\n        scale: 'linear',\n        padding: 0.2,\n        x: 'x',\n        y: 'y',\n        groupby: null,  // group data by a field for staked or grouped bar chart\n        //\n        axisY: true,\n        axisX: true,\n        //\n        // legend & tooltip\n        valueformat: '.1f',\n        legendType: 'color',\n        legendLabel: 'label'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            data = frame.data,\n            box = this.boundingBox(),\n            paper = this.paper().size(box),\n            bars = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.group'),\n            x = model.x,\n            y = model.y,\n            groupby = model.groupby,\n            sx = this.getScale('band'),\n            sy = this.getScale(model.scale),\n            sz = this.getScale('ordinal');\n\n        let stacked = false,\n            width = null,\n            height = null,\n            xrect, yrect, yi, groups, rects, axis;\n\n        if (model.orientation === 'vertical') {\n            sx.rangeRound([0, box.innerWidth]).paddingInner(model.padding);\n            sy.rangeRound([box.innerHeight, 0]);\n            width = sx.bandwidth;\n            height = bardim;\n        } else {\n            sx.rangeRound([0, box.innerHeight]).paddingInner(model.padding);\n            sy.rangeRound([0, box.innerWidth]);\n            width = bardim;\n            height = sx.bandwidth;\n        }\n\n        if (groupby) {\n            groups = frame.dimension(groupby).group().top(Infinity).map(g => g['key']);\n            if (groups.length <= 1) groups = null;\n        }\n\n        if (groups) {\n            var gframe = frame.pivot(x, groupby, y);\n            if (model.sortby === 'y') gframe = gframe.sortby('total');\n            data = gframe.data;\n            sz.domain(groups).range(this.colors(groups.length));\n            if (model.stack) {\n                if (model.normalize)\n                    data = this.normalize(gframe);\n                stacked = true;\n            }\n        }\n\n        // set domain for the labels\n        sx.domain(data.map(d => d[x]));\n\n        //\n        // Stacked bar chart\n        if (stacked) {\n            if (model.orientation === 'vertical') {\n                xrect = x0;\n                yrect = y0;\n                yi = 1;\n            } else {\n                xrect = y0;\n                yrect = x0;\n                yi = 0;\n            }\n            sy.domain([0, max(data, d => d.total)]).nice();\n            data = stack().order(stackOrderDescending).keys(groups)(data);\n            rects = bars.data(data)\n                        .enter()\n                            .append('g')\n                            .classed('group', true)\n                            .attr('fill', d => sz(d.key))\n                        .merge(bars)\n                            .attr('fill', d => sz(d.key))\n                            .attr('stroke', color.stroke)\n                            .attr('stroke-opacity', color.strokeOpacity)\n                            .attr('fill-opacity', color.fillOpacity)\n                            .selectAll('rect')\n                            .data(stackedData);\n            rects.enter()\n                .append('rect')\n                    .attr('x', xrect)\n                    .attr('y', yrect)\n                    .attr('height', height)\n                    .attr('width', width)\n                    .on(\"mouseover\", this.mouseOver())\n                    .on(\"mouseout\", this.mouseOut())\n                .merge(rects)\n                    .transition()\n                    .attr('x', xrect)\n                    .attr('y', yrect)\n                    .attr('height', height)\n                    .attr('width', width);\n\n        } else if (groups) {\n            //\n            //  Grouped bar chart\n            var x1 = this.getScale('band')\n                            .domain(groups)\n                            .paddingInner(0.5*model.padding);\n\n            // set the value domain\n            sy.domain([0, max(frame.data, d => d[y])]).nice();\n\n            if (model.orientation === 'vertical') {\n                x1.rangeRound([0, sx.bandwidth()]);\n                xrect = gx;\n                width = x1.bandwidth;\n                height = gh;\n            } else {\n                yrect = gx;\n                height = x1.bandwidth;\n                width = gh;\n            }\n\n            bars = bars.data(data);\n            bars.exit().remove();\n            //\n            // join for rectangles\n            rects = bars\n                .enter()\n                    .append('g')\n                    .classed('group', true)\n                    .attr(\"transform\", d => this.translate(xrect(d), 0))\n                .merge(bars)\n                    .attr(\"transform\", d => this.translate(xrect(d), 0))\n                    .selectAll('rect')\n                    .data(groupData);\n            //\n            rects.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n            //\n            rects\n                .enter()\n                    .append('rect')\n                    .attr('x', d => x1(d.key))\n                    .attr('y', gy)\n                    .attr('height', height)\n                    .attr('width', width)\n                    .attr('stroke', color.stroke)\n                    .attr('stroke-opacity', 0)\n                    .attr('fill-opacity', 0)\n                    .attr('fill', d => sz(d.key))\n                    .on(\"mouseover\", this.mouseOver())\n                    .on(\"mouseout\", this.mouseOut())\n                .merge(rects)\n                    .transition()\n                    .attr('x', d => x1(d.key))\n                    .attr('y', gy)\n                    .attr('height', height)\n                    .attr('width', width)\n                    .attr('stroke', color.stroke)\n                    .attr('stroke-opacity', color.strokeOpacity)\n                    .attr('fill-opacity', color.fillOpacity)\n                    .attr('fill', d => sz(d.key));\n\n            rects.exit().remove();\n        }\n\n        // Axis\n        if (model.orientation === 'vertical') {\n            if (model.axisX)\n                this.xAxis1(model.axisX === true ? \"bottom\" : model.axisX, sx, box);\n            if (model.axisY)\n                this.yAxis1(model.axisY === true ? \"left\" : model.axisY, sy, box);\n        } else {\n            axis = this.axis('left', sx).tickSizeOuter(0);\n            paper.group('axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .call(axis);\n            if (model.axisY)\n                this.yAxis1(model.axisY === true ? \"bottom\" : model.axisY, sy, box);\n        }\n\n        if (model.legendType && groups) {\n            this.legend({scale: sz}, box);\n        }\n\n        // utilities for stacked charts\n        function bardim (d) {\n            return sy(d[1-yi]) - sy(d[yi]);\n        }\n\n        function x0 (d) {\n            return sx(d.data[x]);\n        }\n\n        function y0 (d) {\n            return sy(d[yi]);\n        }\n\n        // utilities for grouped charts\n        function gx (d) {\n            return sx(d[x]);\n        }\n\n        function gy (d) {\n            return sy(d.value);\n        }\n\n        function gh (d) {\n            return sy(0) - sy(d.value);\n        }\n\n        function stackedData (d) {\n            d.forEach(r => {\n                r.key = d.key;\n                r.value = r.data[d.key];\n            });\n            return d;\n        }\n\n        function groupData (d) {\n            return groups.map(key => {\n                return {key: key, value: d[key]};\n            });\n        }\n    }\n});\n","import {ascending, range, extent, quantile} from 'd3-array';\nimport {scaleLinear} from 'd3-scale';\n\nimport createChart from '../core/chart';\nimport accessor from '../utils/accessor';\nimport constant from '../utils/constant';\nimport {lineDrawing} from './line';\n\n//\n//  Box Chart\n//  =============\n//\n//  A box-and-whisker plot uses simple glyphs that summarize a quantitative\n//  distribution with five standard statistics: the smallest value, lower\n//  quartile, median, upper quartile, and largest value.\n//  This summary approach allows the viewer to easily recognize\n//  differences between distributions.\n//\nexport default createChart('boxchart', lineDrawing, {\n\n    options: {\n        orientation: 'vertical',\n        lineWidth: 1,\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear',\n        // area with vertical gradient to zero opacity\n        gradient: true\n    },\n\n    doDraw (frame) {\n        var self = this,\n            model = this.getModel(),\n            //color = this.getModel('color'),\n            info = self.getDataInfo(frame),\n            box = this.boundingBox(),\n            chart = boxplot(),\n            paper = this.paper().size(box),\n            x = accessor(model.x),\n            //y = accessor(model.y),\n            boxes = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.box')\n                .data(info.data),\n            //fill = this.fill(info.meta),\n            groups = frame.groupby(model.x),\n            sx = this.getScale(model.scaleX)\n                .domain(extent(frame.data, x)),\n            //sy = this.getScale(model.scaleY)\n            //    .domain(extent(frame.data, y)),\n            width = box.innerWidth;\n\n        if (model.orientation === 'vertical') {\n            sx.range([0, box.innerWidth]);\n        } else {\n            sx.range([0, box.innerHeight]);\n            width = this.innerHeight;\n        }\n        chart.width(this.dim(model.width, width, width/groups.length - 2));\n\n        boxes\n            .enter()\n                .append('g')\n                    .classed('box', true)\n                    .call(chart);\n    }\n});\n\n\nfunction boxplot () {\n    var width = 1,\n        height = 1,\n        duration = 0,\n        domain = null,\n        value = Number,\n        whiskers = boxWhiskers,\n        quartiles = boxQuartiles,\n        tickFormat = null;\n\n    // For each small multiple\n    function box (g) {\n        g.each((d, i) => {\n            d = d.map(value).sort(ascending);\n\n            const\n                n = d.length,\n                min = d[0],\n                max = d[n - 1],\n                // Compute quartiles. Must return exactly 3 elements.\n                quartileData = d.quartiles = quartiles(d),\n                // Compute whiskers. Must return exactly 2 elements, or null.\n                whiskerIndices = whiskers && whiskers(d),\n                whiskerData = whiskerIndices && whiskerIndices.map(i => d[i]),\n                // Compute outliers. If no whiskers are specified, all data are \"outliers\".\n                // We compute the outliers as indices, so that we can join across transitions!\n                outlierIndices = whiskerIndices\n                    ? range(0, whiskerIndices[0]).concat(range(whiskerIndices[1] + 1, n))\n                    : range(n),\n                // Compute the new x-scale.\n                x1 = scaleLinear()\n                    .domain(domain && domain.call(this, d, i) || [min, max])\n                    .range([height, 0]),\n                // Retrieve the old x-scale, if this is an update.\n                x0 = this.__chart__ || scaleLinear()\n                  .domain([0, Infinity])\n                  .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n            // Note: the box, median, and box tick elements are fixed in number,\n            // so we only have to handle enter and update. In contrast, the outliers\n            // and other elements are variable, so we need to exit them! Variable\n            // elements also fade in and out.\n\n            // Update center line: the vertical line spanning the whiskers.\n            var center = g.selectAll(\"line.center\")\n              .data(whiskerData ? [whiskerData] : []);\n\n            center.enter().insert(\"line\", \"rect\")\n              .attr(\"class\", \"center\")\n              .attr(\"x1\", width / 2)\n              .attr(\"y1\", function(d) { return x0(d[0]); })\n              .attr(\"x2\", width / 2)\n              .attr(\"y2\", function(d) { return x0(d[1]); })\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .style(\"opacity\", 1)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); });\n\n            center.transition()\n              .duration(duration)\n              .style(\"opacity\", 1)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); });\n\n            center.exit().transition()\n              .duration(duration)\n              .style(\"opacity\", 1e-6)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); })\n              .remove();\n\n            // Update innerquartile box.\n            var box = g.selectAll(\"rect.box\")\n              .data([quartileData]);\n\n            box.enter().append(\"rect\")\n              .attr(\"class\", \"box\")\n              .attr(\"x\", 0)\n              .attr(\"y\", function(d) { return x0(d[2]); })\n              .attr(\"width\", width)\n              .attr(\"height\", function(d) { return x0(d[0]) - x0(d[2]); })\n            .transition()\n              .duration(duration)\n              .attr(\"y\", function(d) { return x1(d[2]); })\n              .attr(\"height\", function(d) { return x1(d[0]) - x1(d[2]); });\n\n            box.transition()\n              .duration(duration)\n              .attr(\"y\", function(d) { return x1(d[2]); })\n              .attr(\"height\", function(d) { return x1(d[0]) - x1(d[2]); });\n\n            // Update median line.\n            var medianLine = g.selectAll(\"line.median\")\n              .data([quartileData[1]]);\n\n            medianLine.enter().append(\"line\")\n              .attr(\"class\", \"median\")\n              .attr(\"x1\", 0)\n              .attr(\"y1\", x0)\n              .attr(\"x2\", width)\n              .attr(\"y2\", x0)\n            .transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1);\n\n            medianLine.transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1);\n\n            // Update whiskers.\n            var whisker = g.selectAll(\"line.whisker\")\n              .data(whiskerData || []);\n\n            whisker.enter().insert(\"line\", \"circle, text\")\n              .attr(\"class\", \"whisker\")\n              .attr(\"x1\", 0)\n              .attr(\"y1\", x0)\n              .attr(\"x2\", width)\n              .attr(\"y2\", x0)\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1);\n\n            whisker.transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1);\n\n            whisker.exit().transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1e-6)\n              .remove();\n\n            // Update outliers.\n            var outlier = g.selectAll(\"circle.outlier\")\n              .data(outlierIndices, Number);\n\n            outlier.enter().insert(\"circle\", \"text\")\n              .attr(\"class\", \"outlier\")\n              .attr(\"r\", 5)\n              .attr(\"cx\", width / 2)\n              .attr(\"cy\", function(i) { return x0(d[i]); })\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1);\n\n            outlier.transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1);\n\n            outlier.exit().transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1e-6)\n              .remove();\n\n            // Compute the tick format.\n            var format = tickFormat || x1.tickFormat(8);\n\n            // Update box ticks.\n            var boxTick = g.selectAll(\"text.box\")\n              .data(quartileData);\n\n            boxTick.enter().append(\"text\")\n              .attr(\"class\", \"box\")\n              .attr(\"dy\", \".3em\")\n              .attr(\"dx\", (d, i) => i & 1 ? 6 : -6)\n              .attr(\"x\", (d, i) => i & 1 ? width : 0)\n              .attr(\"y\", x0)\n              .attr(\"text-anchor\", function(d, i) { return i & 1 ? \"start\" : \"end\"; })\n              .text(format)\n            .transition()\n              .duration(duration)\n              .attr(\"y\", x1);\n\n            boxTick.transition()\n              .duration(duration)\n              .text(format)\n              .attr(\"y\", x1);\n\n            // Update whisker ticks. These are handled separately from the box\n            // ticks because they may or may not exist, and we want don't want\n            // to join box ticks pre-transition with whisker ticks post-.\n            var whiskerTick = g.selectAll(\"text.whisker\")\n              .data(whiskerData || []);\n\n            whiskerTick.enter().append(\"text\")\n              .attr(\"class\", \"whisker\")\n              .attr(\"dy\", \".3em\")\n              .attr(\"dx\", 6)\n              .attr(\"x\", width)\n              .attr(\"y\", x0)\n              .text(format)\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"y\", x1)\n              .style(\"opacity\", 1);\n\n            whiskerTick.transition()\n              .duration(duration)\n              .text(format)\n              .attr(\"y\", x1)\n              .style(\"opacity\", 1);\n\n            whiskerTick\n                .exit()\n                .transition()\n                .duration(duration)\n                .attr(\"y\", x1)\n                .style(\"opacity\", 1e-6)\n                .remove();\n        });\n    }\n\n    box.width = function(x) {\n        if (!arguments.length) return width;\n        width = x;\n        return box;\n    };\n\n    box.height = function(x) {\n        if (!arguments.length) return height;\n        height = x;\n        return box;\n    };\n\n    box.tickFormat = function(x) {\n        if (!arguments.length) return tickFormat;\n        tickFormat = x;\n        return box;\n    };\n\n    box.duration = function(x) {\n        if (!arguments.length) return duration;\n        duration = x;\n        return box;\n    };\n\n    box.domain = function(x) {\n        if (!arguments.length) return domain;\n        domain = x === null ? x : constant(x);\n        return box;\n    };\n\n    box.value = function(x) {\n        if (!arguments.length) return value;\n        value = x;\n        return box;\n    };\n\n    box.whiskers = function(x) {\n        if (!arguments.length) return whiskers;\n        whiskers = x;\n        return box;\n    };\n\n    box.quartiles = function(x) {\n        if (!arguments.length) return quartiles;\n        quartiles = x;\n        return box;\n    };\n\n    return box;\n}\n\n\nfunction boxWhiskers (d) {\n    return [0, d.length - 1];\n}\n\n\nfunction boxQuartiles (d) {\n    return [\n        quantile(d, 0.25),\n        quantile(d, 0.5),\n        quantile(d, 0.75)\n    ];\n}\n","import {extent} from 'd3-array';\n\n//\n//  Create a Grouper generator\n//  ===============================\n//\n//  This is a chart transform rather than a data transform\nexport default function () {\n    var groupby = null,\n        x = 'x',\n        y = 'y',\n        sort = false,\n        stack = null,\n        normalize = false;\n\n    function grouper (frame) {\n        let stacked = false,\n            data, labels, s;\n\n        if (groupby) {\n            labels = frame.dimension(groupby).group().top(Infinity).map(g => g['key']);\n            if (labels.length <= 1) labels = null;\n        }\n\n        if (labels) {\n            frame = frame.pivot(x, groupby, y);\n            if (sort) frame = frame.sortby('total');\n            data = frame.data;\n            if (stack) {\n                if (normalize)\n                    data = normalizeData(data);\n                data = stack.keys(labels)(data);\n                stacked = true;\n            }\n        } else {\n            data = frame.data;\n            labels = [y];\n        }\n\n        if (!stacked)\n            data = labels.map((key, index) => {\n                s = data.map(d => {\n                    s = [0, d[key]];\n                    s.data = d;\n                    return s;\n                });\n                s.index = index;\n                s.key = key;\n                return s;\n            });\n\n        return new GroupedData(data, x, y, stacked);\n    }\n\n    grouper.groupby = function(_) {\n        if (arguments.length) {\n            groupby = _;\n            return grouper;\n        }\n        return groupby;\n    };\n\n    grouper.x = function(_) {\n        return arguments.length ? (x = _, grouper) : x;\n    };\n\n    grouper.y = function(_) {\n        return arguments.length ? (y = _, grouper) : y;\n    };\n\n    grouper.normalize = function(_) {\n        return arguments.length ? (normalize = _, grouper) : normalize;\n    };\n\n    grouper.stack = function(_) {\n        return arguments.length ? (stack = _, grouper) : stack;\n    };\n\n    return grouper;\n}\n\n\nfunction GroupedData (data, x, y, stacked) {\n    this.data = data;\n    this.stacked = stacked;\n    this.x = x;\n    this.y = y;\n}\n\nGroupedData.prototype = {\n    rangeX () {\n        return this.range(this.x);\n    },\n    rangeY () {\n        return this.range();\n    },\n    range (key) {\n        let range, vals;\n        if (key)\n            vals = this.data.reduce((a, d) => {\n                range = extent(d, acc);\n                a.push(range[0]);\n                a.push(range[1]);\n                return a;\n            }, []);\n        else\n        vals = this.data.reduce((a, d) => {\n            range = extent(d, acc0);\n            a.push(range[0]);\n            a.push(range[1]);\n            range = extent(d, acc1);\n            a.push(range[0]);\n            a.push(range[1]);\n            return a;\n        }, []);\n        return extent(vals);\n\n        function acc0 (d) {\n            return d[0];\n        }\n\n        function acc1 (d) {\n            return d[1];\n        }\n\n        function acc (d) {\n            return d.data[key];\n        }\n    }\n};\n\n\nfunction normalizeData (data) {\n    return data;\n}\n","import {area, line} from 'd3-shape';\nimport {format} from 'd3-format';\nimport {timeFormat} from 'd3-time-format';\nimport {isDate} from 'd3-let';\nimport {color} from 'd3-color';\n\nimport createChart from '../core/chart';\nimport grouper from '../transforms/groups';\nimport {lineDrawing} from './line';\n\n//\n//  Area Chart\n//  =============\nexport default createChart('areachart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'natural',\n        x: 'x',\n        y: 'y',\n        groupby: null,  // group data by a field for staked or grouped area chart\n        scaleX: 'linear',\n        scaleY: 'linear',\n        // area with vertical gradient to zero opacity\n        gradient: true,\n        lineDarken: 0.2,\n        //\n        axisX: 'bottom',\n        axisXticks: 5,\n        axisY: 'left',\n        axisYticks: 5,\n        //\n        axisFormat: ',',\n        axisTimeFormat: '%Y-%m-%d',\n        axisTickSizeOuter: 0\n    },\n\n    doDraw (frame) {\n        var self = this,\n            model = this.getModel(),\n            x = model.x,\n            y = model.y,\n            col = this.getModel('color'),\n            box = this.boundingBox(),\n            info = grouper()\n                        .groupby(model.groupby)\n                        .stack(this.getStack())\n                        .x(x)\n                        .y(y)(frame),\n            rangeX = info.rangeX(),\n            rangeY = info.rangeY(),\n            scaleX = this.getScale(model.scaleX)\n                            .domain(rangeX)\n                            .rangeRound([0, box.innerWidth]),\n            scaleY = this.getScale(model.scaleY)\n                            .domain(rangeY)\n                            .rangeRound([box.innerHeight, 0]).nice(),\n            paper = this.paper().size(box),\n            areas = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.areagroup').data(info.data),\n            colors = this.colors(info.data.length),\n            fill = model.gradient ? colors.map((c, i) => self.linearGradient(c, box, 'vertical', `fill${self.model.uid}-${i}`)) : colors,\n            curve = this.curve(model.curve);\n\n        var areagroup = areas\n            .enter()\n                .append('g')\n                .classed('areagroup', true)\n            .merge(areas)\n                .selectAll('path')\n                .data(arealine);\n\n        areagroup\n            .enter()\n                .append('path')\n                .attr('class', d => d.type)\n                .attr('fill', d => d.fill)\n                .attr('stroke', d => d.stroke)\n                .attr('d', d => d.draw)\n            .merge(areagroup)\n                .attr('d', d => d.draw)\n                .attr('fill', d => d.fill)\n                .attr('stroke', d => d.stroke)\n                .attr('fill-opacity', col.fillOpacity)\n                .attr('stroke-width', model.lineWidth)\n                .attr('stroke-opacity', col.strokeOpacity);\n\n        areagroup\n            .exit()\n            .transition()\n            .remove();\n\n        if (model.axisX) {\n            var xa = this.axis(model.axisX, scaleX)\n                    .ticks(this.ticks(box.innerWidth, 50))\n                    .tickFormat(this.format(rangeX[0]))\n                    .tickSizeOuter(model.axisTickSizeOuter);\n            paper\n                .group('x-axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top+box.innerHeight))\n                .call(xa);\n        }\n        if (model.axisY) {\n            var ya = this.axis(model.axisY, scaleY)\n                        .ticks(this.ticks(box.innerHeight, 30))\n                        .tickFormat(this.format(rangeY[0]))\n                        .tickSizeOuter(model.axisTickSizeOuter);\n            paper\n                .group('y-axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .call(ya);\n        }\n\n        function xx(d) {\n            return scaleX(d.data[x]);\n        }\n\n        function y0(d) {\n            return scaleY(d[0]);\n        }\n\n        function y1(d) {\n            return scaleY(d[1]);\n        }\n\n        function arealine (d) {\n            var area_ = area()\n                            .curve(curve)\n                            .x(xx)\n                            .y1(y1)\n                            .y0(y0),\n                line_ = line()\n                            .curve(curve)\n                            .x(xx)\n                            .y(y1),\n                c = color(colors[d.index]);\n\n            return [\n                {\n                    type: 'area',\n                    data: d,\n                    draw: area_(d),\n                    stroke: 'none',\n                    fill: fill[d.index]\n                },\n                {\n                    type: 'line',\n                    data: d,\n                    draw: line_(d),\n                    fill: 'none',\n                    stroke: c.darker(model.lineDarken)\n                }\n            ];\n        }\n    },\n\n    format (value) {\n        if (isDate(value)) return timeFormat(this.getModel().axisTimeFormat);\n        else return format(this.getModel().axisFormat);\n    },\n\n    ticks (size, spacing) {\n        return Math.max(Math.floor(size/spacing), 1);\n    }\n});\n","import {select} from 'd3-selection';\n\n//Text wrapping code adapted from Mike Bostock\nexport default function (text, width) {\n\n    text.each(function() {\n        var text = select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineHeight = 1.2,\n            dy = parseFloat(text.attr(\"dy\")) || 0,\n            tspan = text.text(null)\n                        .append(\"tspan\")\n                        .attr(\"x\", 0)\n                        .attr(\"dy\", dy + \"em\");\n\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\")\n                            .attr(\"x\", 0)\n                            .attr(\"dy\", lineHeight + dy + \"em\").text(word);\n            }\n        }\n    });\n}\n","import {pie, arc} from 'd3-shape';\nimport {scaleOrdinal} from 'd3-scale';\nimport {viewExpression} from 'd3-view';\nimport {format} from 'd3-format';\n\nimport createChart from '../core/chart';\nimport {sizeValue} from '../utils/size';\nimport textWrap from '../utils/text-wrapping';\n\n\nconst pi = Math.PI;\nconst rad = pi/180;\n\n\nexport const proportional = {\n\n    fill (data) {\n        var colors = this.colors(data.length);\n\n        function fill (d, idx) {\n            return colors[idx];\n        }\n\n        fill.colors = colors;\n\n        return fill;\n    },\n\n    proportionalData (frame, field) {\n        return frame.dimension(field).top(Infinity);\n    },\n\n    total (field) {\n        var total = 0;\n\n        function value (d) {\n            total += d[field];\n            return d[field];\n        }\n\n        value.total = () => total;\n        return value;\n    }\n};\n\n//\n//  Pie Chart\n//  =============\n//\nexport default createChart('piechart', proportional, {\n\n    options: {\n        // The data values from this field will be encoded as angular spans.\n        // If omitted, all pie slices will have equal spans\n        field: 'data',\n        label: 'label',\n        startAngle: 0,\n        endAngle: 360,\n        sort: false,\n        innerRadius: 0,\n        padAngle: 0,\n        cornerRadius: 0,\n        lineWidth: 1,\n        //\n        fractionFormat: '.1%',\n        legendType: 'color',\n        legendLabel: \"label + ' - ' + format(fraction)\",\n        //\n        // display information in the center of the pie chart\n        // Should be used with innerRadius greater than 0\n        center: null,\n        centerOpacity: 1,\n        centerFontSize: '7%'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            field = model.field,\n            box = this.boundingBox(),\n            outerRadius = Math.min(box.innerWidth, box.innerHeight)/2,\n            innerRadius = sizeValue(model.innerRadius, outerRadius),\n            total = this.total(field),\n            angles = pie()\n                .padAngle(rad*model.padAngle)\n                .startAngle(rad*model.startAngle)\n                .endAngle(rad*model.endAngle)\n                .value(total),\n            arcs = arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius)\n                .cornerRadius(model.cornerRadius),\n            paper = this.paper().size(box),\n            //update = paper.transition('update'),\n            data = angles(this.proportionalData(frame, field)),\n            fill = this.fill(data),\n            slices = paper.group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                .selectAll('.slice').data(data);\n\n        slices\n            .enter()\n                .append('path')\n                .attr('class', 'slice')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n                .on(\"mouseover\", this.mouseOver())\n                .on(\"mouseout\", this.mouseOut())\n            .merge(slices)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', arcs)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        slices.exit().transition().remove();\n\n        if (model.center) {\n            var text = this.dataStore.eval(model.center, {total: total.total()});\n            if (text) {\n                var size = this.dim(model.centerFontSize, box.innerWidth),\n                    center = paper.group('center-notation')\n                        .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                        .selectAll('.info').data([text]);\n                center\n                    .enter()\n                        .append('text')\n                        .attr('class', 'info')\n                        .attr(\"text-anchor\", \"middle\")\n                        .attr(\"alignment-baseline\", \"middle\")\n                        .style(\"font-size\", `${size}px`)\n                        .style('fill-opacity', 0)\n                    .merge(center)\n                        .text(text)\n                        .style('fill-opacity', model.centerOpacity)\n                        .call(textWrap, 1.5*(innerRadius || outerRadius));\n\n            }\n        }\n        if (!model.legendType) return;\n        total = total.total();\n        var expr = viewExpression(model.legendLabel),\n            fmt = format(model.fractionFormat),\n            labels = data.map((d, idx) => {\n                return expr.eval({\n                    d: d,\n                    value: d.value,\n                    format: fmt,\n                    total: total,\n                    fraction: d.value/total,\n                    label: d.data[model.label] || idx\n                });\n            });\n        this.legend({\n            scale: scaleOrdinal().domain(labels).range(fill.colors)\n        }, box);\n    }\n});\n","//\n//  Custom Symbol type\n//  =====================\n//\n//  Draw a polygon given an array of points\n//  This can be used as type in a d3-shape symbol\nexport default function (points) {\n\n    return {\n        draw (context) {\n            points.forEach((point, idx) => {\n                if (!idx) context.moveTo(point[0], point[1]);\n                else context.lineTo(point[0], point[1]);\n            });\n            context.closePath();\n        }\n    };\n}\n","import {symbol} from 'd3-shape';\nimport {viewExpression} from 'd3-view';\n\nimport createChart from '../core/chart';\nimport pyramid from '../transforms/pyramid';\nimport polygon from '../utils/polygon';\nimport {proportional} from './pie';\n\n\nexport default createChart('pyramidchart', proportional, {\n\n    options: {\n        field: 'data',\n        label: 'label',\n        pad: 0.005,\n        lineWidth: 1,\n        inverted: false,\n        legendType: 'color',\n        invereted: false,\n        legendLabel: \"label + ' - ' + format('.1%', fraction)\"\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            field = model.field,\n            color = this.getModel('color'),\n            box = this.boundingBox(),\n            pad = this.dim(model.pad, Math.min(box.innerWidth, box.innerHeight)),\n            polygons = pyramid()\n                .pad(pad)\n                .value(d => d[field]),\n            scaleX = this.getScale('linear').rangeRound([0, box.innerWidth]),\n            scaleY = this.getScale('linear').rangeRound(model.inverted ? [box.innerHeight, 0] : [0, box.innerHeight]),\n            data = frame.new(polygons(this.proportionalData(frame, field))).dimension('fraction').bottom(Infinity),\n            marks = symbol().type(d => polygon(d.points.map(xy => [scaleX(xy[0]), scaleY(xy[1])]))).size(1),\n            fill = this.fill(data),\n            paper = this.paper(),\n            segments = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top))\n                .selectAll('.segment').data(data);\n\n        segments\n            .enter()\n                .append('path')\n                .attr('class', 'segment')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', marks)\n                .on(\"mouseover\", this.mouseOver())\n                .on(\"mouseout\", this.mouseOut())\n            .merge(segments)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', marks)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        segments.exit().remove();\n\n        if (!model.legendType) return;\n        var expr = viewExpression(model.legendLabel),\n            self = this,\n            labels = data.map((d, idx) => {\n                return expr.eval(self.getContext({\n                    d: d,\n                    value: d.value,\n                    fraction: d.fraction,\n                    label: d.data[model.label] || idx\n                }));\n            });\n        this.legend({\n            scale: this.getScale('ordinal').domain(labels).range(fill.colors)\n        }, box);\n    }\n\n});\n","import createChart from '../core/chart';\n\n//\n//  Treemap\n//  =============\n//\nexport default createChart('treemap', {\n    requires: ['d3-hierarchy'],\n\n    options: {\n        padding: 0.1\n    },\n\n    doDraw () {\n    }\n});\n","import createChart from '../core/chart';\nimport textWrap from '../utils/text-wrapping';\n\n\nexport default createChart('text', {\n\n    options: {\n        label: 'label',\n        data: 'data',\n        text: 'label + \" \" + data'\n    },\n\n    doDraw (frame) {\n        var self = this,\n            model = this.getModel(),\n            color = this.getModel('color'),\n            box = this.boundingBox(),\n            size = this.font(box),\n            paper = this.paper().size(box),\n            group = paper.group()\n                    .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                    .selectAll('text').data(frame.data),\n            width = box.innerWidth/frame.data.length,\n            widthWrap = 0.4*width,\n            store = this.dataStore;\n\n        group\n            .enter()\n                .append('text')\n                .attr(\"transform\", shift)\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"alignment-baseline\", \"middle\")\n                .style(\"font-size\", `${size}px`)\n                .style('fill-opacity', 0)\n            .merge(group)\n                .attr(\"transform\", shift)\n                .text(d => store.eval(model.text, d))\n                .style('fill-opacity', color.fillOpacity)\n                .call(textWrap, widthWrap);\n\n        group.exit().remove();\n\n\n        function shift (d, i) {\n            return self.translate((i+0.5)*width, 0);\n        }\n    }\n});\n","import {extent, range} from 'd3-array';\nimport {map} from 'd3-collection';\n\nimport accessor from '../utils/accessor';\nimport niceRange from '../utils/nicerange';\nimport createChart from '../core/chart';\nimport {lineDrawing} from './line';\n//\n//  Heatmap\n//  =============\n//\n//  A heatmap is a graphical representation of data where the individual\n//  values contained in a matrix are represented as colors.\n//  This chart type allow to specify to types of layout:\n//  * heatmap - classical heatmap\n//  * punchcard - the z dimension is converted into different sizes of the shape elements\n//  * contour - similar to heatmap but continous rather than descrete\nexport default createChart('heatmap', lineDrawing, {\n\n    options: {\n        shape: 'square',\n        layout: 'heatmap',\n        buckets: 10,\n        pad: 0.005,     // padding for heatmap & punchcard\n        x: 'x',\n        y: 'y',\n        z: 'data',\n        axisX: 'bottom',\n        axisY: 'left'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            layout = model.layout,\n            box = this.boundingBox(),\n            zrange = extent(frame.data, accessor(model.z)),\n            paper = this.paper().size(box);\n\n        if (zrange[0] < 0 && layout === 'punchcard') layout = 'heatmap';\n\n        var heat = this.heatmap(layout, frame, box, zrange),\n            dx = (box.innerWidth - heat.width)/2,\n            dy = (box.innerHeight - heat.height)/2,\n            shape = this.getSymbol(model.shape).size(d => d.size*d.size),\n            shapes = paper.group()\n                        .attr(\"transform\", this.translate(box.total.left + dx, box.total.top + dy))\n                        .selectAll('.shape')\n                        .data(heat.data);\n\n        if (range[0] < 0 && layout === 'punchcard') layout = 'heatmap';\n\n        shapes\n            .enter()\n                .append('path')\n                .classed('shape', true)\n                .attr(\"transform\", d => `translate(${d.x}, ${d.y})`)\n                .attr(\"fill\", d => d.color)\n                .attr(\"fill-opacity\", 0)\n                .attr(\"stroke-opacity\", 0)\n                .attr(\"stroke\", color.stroke)\n                .attr('d', shape)\n                .on(\"mouseover\", this.mouseOver())\n                .on(\"mouseout\", this.mouseOut())\n            .merge(shapes)\n                .transition()\n                .attr(\"transform\", d => `translate(${d.x}, ${d.y})`)\n                .attr(\"fill-opacity\", color.fillOpacity)\n                .attr(\"fill\", d => d.color)\n                .attr(\"stroke-opacity\", color.strokeOpacity)\n                .attr(\"stroke\", color.stroke)\n                .attr('d', shape);\n\n        if (model.axisX === 'bottom')\n            this.xAxis(heat.scaleX, box.total.left, box.total.top + heat.height + dy);\n        if (model.axisY === 'left')\n            this.yAxis(heat.scaleY, box.total.left, box.total.top + dy);\n\n        if (layout === 'heatmap')\n            this.legend({\n                type: 'color',\n                shape: model.shape,\n                scale: heat.colors\n            }, box);\n        else if (layout === 'punchcard')\n            this.legend({\n                type: 'size',\n                shape: model.shape,\n                scale: heat.sizes\n            }, box);\n    },\n\n    heatmap (layout, frame, box, zrange) {\n        var model = this.getModel(),\n            pad = model.pad,\n            x = model.x,\n            y = model.y,\n            z = model.z,\n            gx = frame.dimension(model.x).group().size(),\n            gy = frame.dimension(model.y).group().size(),\n            buckets = Math.min(model.buckets, gx*gy),\n            dx = (1 - pad*(gx + 1))*box.innerWidth/gx,\n            dy = (1 - pad*(gy + 1))*box.innerHeight/gy,\n            data = [],\n            labelsX = [],\n            labelsY = [],\n            xp = map(), yp = map();\n\n        let xv, yv, zv, i, j, colors, sizes, dd, width, height;\n\n        if (dx < dy) {\n            dd = dx;\n            width = box.innerWidth;\n            pad = width*pad;\n            height = gy*(dd + pad) + pad;\n        } else {\n            dd = dy;\n            height = box.innerHeight;\n            pad = height*pad;\n            width = gx*(dd + pad) + pad;\n        }\n\n        zrange = niceRange(zrange, buckets);\n\n        if (layout === 'heatmap') {\n            colors = this.getScale('quantile').range(this.colors(buckets).reverse()).domain(zrange);\n            sizes = () => 1;\n        } else {\n            var color = this.colors(1)[0];\n            colors = () => color;\n            sizes = this.getScale('quantile').range(range(buckets).map(s => (s+1)/buckets)).domain(zrange);\n        }\n        frame.data.forEach(d => {\n            xv = d[x];\n            yv = d[y];\n            zv = d[z];\n            if (!xp.has(xv)) {\n                xp.set(xv, labelsX.length);\n                labelsX.push(xv);\n            }\n            if (!yp.has(yv)) {\n                yp.set(yv, labelsY.length);\n                labelsY.push(yv);\n            }\n            i = xp.get(xv);\n            j = yp.get(yv);\n            data.push({\n                i: i,\n                j: j,\n                x: pad + dd/2 + i*(dd + pad),\n                y: pad + dd/2 + j*(dd + pad),\n                color: colors(zv),\n                size: dd*sizes(zv),\n                data: d\n            });\n        });\n        return {\n            data: data,\n            size: dd,\n            width: width,\n            height: height,\n            scaleX: this.getScale('band').domain(labelsX).range([0, width]),\n            scaleY: this.getScale('band').domain(labelsY).range([0, height]),\n            colors: colors,\n            sizes: sizes\n        };\n    }\n});\n","import {extent} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport camelFunction from '../utils/camelfunction';\nimport accessor from '../utils/accessor';\nimport niceRange from '../utils/nicerange';\nimport warn from '../utils/warn';\n\n//\n//  GeoChart\n//  =============\n//\n//  A chart displaying a geographical map\nexport default createChart('geochart', {\n    // load these libraries\n    requires: ['d3-geo', 'topojson', 'd3-geo-projection', 'leaflet'],\n\n    options: {\n        // Geometry data to display in this chart - must be in the topojson source\n        geometry: 'countries',\n        //\n        // for choropleth maps\n        // geoKey and dataKey are used to match geometry with data\n        geoKey: 'id',\n        dataKey: 'id',\n        dataLabelKey : 'label',\n        dataValueKey: 'value',\n        // how many color buckets to visualise\n        buckets: 10,\n        choroplethScale: 'quantile',\n        //\n        // specify one of the topojson geometry object for calculating\n        // the projected bounding box\n        boundGeometry: null,\n        // how much to zoom out, 1 = no zoom out, 0.95 to 0.8 are sensible values\n        boundScaleFactor: 0.9,\n        //\n        projection: null,\n        graticule: false,\n        leaflet: false,\n        scale: 200,\n        //\n        // mouseover strategy\n        mouseover: ['darken', 'tooltip']\n    },\n\n    doDraw (frame, geo) {\n        var info = this.getGeoData(frame);\n        if (!info) return warn ('Topojson data not available - cannot draw topology');\n        if (!this._geoPath) this.createGeoPath(geo, info);\n        this.update(geo, info);\n    },\n\n    update (geo, info) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            box = this.boundingBox(),\n            paper = this.paper().size(box),\n            group = paper.group()\n                    .attr(\"transform\", this.translate(box.total.left, box.total.top)),\n            path = this._geoPath,\n            geometryData = geo.feature(info.topology, info.topology.objects[model.geometry]).features,\n            paths = group.selectAll('.geometry').data(geometryData),\n            fill = 'none';\n\n        this.center(geo, info);\n        if (info.data) fill = this.choropleth(info.data, box);\n\n        paths\n            .enter()\n                .append(\"path\")\n                .attr(\"class\", \"geometry\")\n                .attr(\"d\", path)\n                .style('fill', 'none')\n                .style(\"stroke\", color.stroke)\n                .style(\"stroke-opacity\", 0)\n                .style(\"fill-opacity\", 0)\n                .on(\"mouseover\", this.mouseOver())\n                .on(\"mouseout\", this.mouseOut())\n            .merge(paths)\n                .transition()\n                .attr(\"d\", path)\n                .style(\"stroke\", color.stroke)\n                .style(\"stroke-opacity\", color.strokeOpacity)\n                .style(\"fill\", fill)\n                .style(\"fill-opacity\", color.fillOpacity);\n\n        paths\n            .exit()\n            .remove();\n    },\n\n    createGeoPath (geo, info) {\n        var model = this.getModel(),\n            projection = camelFunction(geo, 'geo', info.projection).scale(model.scale),\n            path = geo.geoPath().projection(projection),\n            self = this,\n            lefletMap;\n\n        this._geoPath = path;\n        this.center(geo, info);\n\n        if (model.leaflet) {\n            var leafletId = `leaflet-${model.uid}`,\n                paper = this.paper();\n            this.visualParent.paper\n                    .append('div')\n                    .attr('id', leafletId);\n            lefletMap = new geo.Map(leafletId, {center: [37.8, -96.9], zoom: 4})\n                            .addLayer(new geo.TileLayer(\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\")),\n            lefletMap.getPanes().overlayPane.appendChild(paper.element);\n            projection = geo.transform({point: projectPoint});\n            lefletMap.on(\"viewreset\", () => self.update(geo, info));\n        }\n\n        return path;\n\n        function projectPoint(x, y) {\n            var point = lefletMap.latLngToLayerPoint(new geo.LatLng(y, x));\n            this.stream.point(point.x, point.y);\n        }\n    },\n\n    getGeoData (frame) {\n        var info = {};\n        if (frame.type === 'frameCollection')\n            for (let key in frame) {\n                if (frame[key].type === 'Topology') info.topology = frame[key];\n                else info.data = frame[key];\n            }\n        else if (frame.type === 'Topology')\n            info.topology = frame;\n        if (info.topology) {\n            var model = this.getModel();\n            if (model.projection) info.projection = model.proection;\n            else {\n                info.projection = 'kavrayskiy7';\n            }\n            return info;\n        }\n    },\n\n    center (geo, info) {\n        var model = this.getModel();\n        if (!model.boundGeometry) return;\n\n        var path = this._geoPath,\n            projection = path.projection(),\n            box = this.boundingBox(),\n            boundGeometry = geo.feature(info.topology, info.topology.objects[model.boundGeometry]).features;\n\n        projection.scale(1).translate([0, 0]);\n\n        var b = path.bounds(boundGeometry[0]),\n            topLeft = b[0],\n            bottomRight = b[1],\n            scaleX = (bottomRight[0] - topLeft[0]) / box.innerWidth,\n            scaleY = (bottomRight[1] - topLeft[1]) / box.innerHeight,\n            scale = Math.round(model.boundScaleFactor / Math.max(scaleX, scaleY)),\n            translate = [\n                (box.innerWidth - scale * (bottomRight[0] + topLeft[0])) / 2,\n                (box.innerHeight - scale * (bottomRight[1] + topLeft[1])) / 2\n            ];\n\n        projection.scale(scale).translate(translate);\n    },\n\n    // choropleth map based on data\n    choropleth (frame, box) {\n        var model = this.getModel(),\n            buckets = Math.min(model.buckets, frame.data.length),\n            dataKey = model.dataKey,\n            dataLabelKey = model.dataLabelKey,\n            dataValueKey = model.dataValueKey,\n            geoKey = model.geoKey,\n            valueRange = niceRange(extent(frame.data, accessor(dataValueKey)), buckets),\n            colors = this.getScale(model.choroplethScale).range(this.colors(buckets).reverse()).domain(valueRange),\n            values = frame.data.reduce((o, d) => {o[d[dataKey]] = d; return o;}, {});\n        let key, value;\n\n        this.legend({\n            type: 'color',\n            scale: colors\n        }, box);\n\n        return d => {\n            key = d.properties[geoKey];\n            value = values[key];\n            d.choropleth = {\n                label: value[dataLabelKey] || key,\n                value: value[dataValueKey],\n                color: colors(value[dataValueKey])\n            };\n            return d.choropleth.color;\n        };\n    }\n\n});\n","//\nexport {version as visualizeVersion} from './package.json';\n//\nexport {default as randomPath} from './src/utils/randompath';\n//\n// Data layer\nexport {default as DataStore} from './src/data/store';\nexport {default as dataSources} from './src/data/sources';\n//export {default as dataLocale} from './src/data/locale';\n\n//\n//  Core API\nexport {visuals} from './src/core/base';\nexport {default as createChart} from './src/core/chart';\nexport {default as createPaper, Svg, Div} from './src/core/paper';\nexport {default as visualTransforms} from './src/transforms/index';\n//\n//  Components\nexport {default as visualComponents} from './src/components/index';\n\n// utilities\nexport {colorScales} from './src/plugins/color';\nexport {default as pyramid} from './src/transforms/pyramid';\nexport {default as niceRange} from './src/utils/nicerange';\n//\n//  Charts\n//  =========\n//\n//  Last import, important!\nexport {default as Visual} from './src/core/visual';\nexport {default as BarChart} from './src/charts/bar';\nexport {default as BoxChart} from './src/charts/box';\nexport {default as LineChart} from './src/charts/line';\nexport {default as AreaChart} from './src/charts/area';\nexport {default as PieChart} from './src/charts/pie';\nexport {default as PyramidChart} from './src/charts/pyramid';\nexport {default as Treemap} from './src/charts/treemap';\nexport {default as TextChart} from './src/charts/text';\nexport {default as Heatmap} from './src/charts/heatmap';\nexport {default as Geochart} from './src/charts/geo';\n"],"names":["defaults","size","options","assign","t","range","S","sigma","drift","data","x","y","norm","randomNormal","dx","i","length","config","_data","isArray","isObject","resolvedPromise","asFrame","prefix","msg","logger","warn","schemes","value","isString","indexOf","split","CSV","set","isUrl","url","fetch","viewProviders","self","then","parse","response","ct","headers","get","has","text","csvParse","json","source","store","sources","Promise","all","map","getData","frames","merge","mergeFrames","reduce","o","frame","index","type","expression","viewExpression","model","result","eval","isPromise","field","d","DataFrame","serie","defineProperties","dimensions","series","prototype","_inner","cf","crossfilter","name","keepExisting","arguments","current","dispose","accessor","dimension","top","new","Infinity","key","total","group","pivoter","Object","m","pk","pv","record","mapper","transform","schema","jsonValidator","dummyValidator","transformFactory","valid","validate","logError","doTransform","expr","safeEval","push","a","Array","fill","operations","scalar_operations","agg","v","Math","max","min","count","array","undefined","fields","ops","as","groupby","countAll","fillArray","aggregate","op","forEach","entries","oo","entry","query","dim","q","filterAll","filter","sortby","timeseries","groups","newframe","tmp","filterExact","globalOptions","dateFormat","converters","utcParse","parseFloat","mappers","converter","each","DEFAULT_METHOD","DEFAULT_PERIOD","DEFAULT_ALPHA","MAXALPHA","method","fieldto","s","period","cumulate","buffer","splice","alpha","minmax","applyTransforms","transforms","ts","dataEvents","dispatch","dataSourcePrototype","transformStore","constructor","DataSource","values","cfg","getConfig","initDataSource","dataSource","dataName","pop","initialise","addTransforms","call","dataSources","add","remote","composite","DataStore","dataCount","create","p","remove","ds","cachedFrame","Error","cache","context","ctx","$child","def","n","round","pow","WIDTH","HEIGHT","sizeValue","getSize","element","width","height","getWidth","widthElement","getWidthElement","getHeight","heightElement","getHeightElement","el","getParentElementRect","elementWidth","elementHeight","w","getBoundingClientRect","select","left","padding","style","right","bottom","parent","node","tagName","parentNode","substring","clone","CONTAINERS","visuals","visualPrototype","fetchData","drawing","event","toString","events","on","redraw","draw","visualType","uid","visualParent","getModel","$new","$update","$on","refSize","minSize","maxSize","container","idx","live","getVisualSchema","viewBase","proto","opts","Visual","visualRoot","viewModel","types","createVisual","append","classed","sel","layers","drawCount","__visual__","fit","clear","visual","err","VisualClass","resize","currentSize","viewDebug","paper","inBrowser","observer","MutationObserver","visualManager","observe","document","documentElement","records","nodes","removedNodes","nodeName","selectAll","destroy","viz","objectOnly","toUpperCase","protos","vizPrototype","chartPrototype","apply","_paper","paperType","render","PaperType","papers","isFunction","xt","yt","camelFunction","d3_scale","doDraw","_drawArgs","requires","require","args","unshift","displayError","createPaper","Paper","paperPrototype","box","attr","cname","enter","Svg","svg","Div","div","menu","display","insert","refreshMenu","minHeight","maxHeight","formats","specifier","fmt","format","dataContext","cachedFormat","dataStore","getContext","isViz","root","setupLayer","setupVisual","addSources","layer","$set","font","fontSizeMultiplier","resizeDelay","viewDebounce","window","title","menuTitle","number","maxFontSize","fontSize","minFontSize","html","px","KEYS","LEFTRIGHT","margin","boundingBox","calculate","margins","axisOrientation","axisTop","axisBottom","axisLeft","axisRight","axisDefaults","xAxis","yAxis","scale","axis","getAxis","location","translate","transition","stroke","xAxis1","translateAxis","yAxis1","orientation","innerHeight","innerWidth","tickSize","tickSizeOuter","tickFormat","ticks","symbols","symbolCircle","symbolSquare","symbolStar","getSymbol","symbol","colorScales","color","scaleSequential","interpolateViridis","interpolateInferno","interpolateMagma","interpolatePlasma","interpolateWarm","interpolateCool","interpolateRainbow","interpolateCubehelixDefault","colors","scaleDef","minPoints","scaleMinPoints","offset","scaleOffset","npoints","points","domain","reversed","linearGradient","col","gid","defs","grad","colto","opacity","stops","legend","legends","legendColor","legendSize","legendSymbol","vizModel","lgModel","legendType","orient","titleWidth","titleMinWidth","titleMaxWidth","labelFormat","shapeWidth","shapeHeight","g","bb","locations","getBBox","topLeft","topRight","bottomLeft","bottomRight","offsetY","offsetX","constant","mouseStrategies","darkerStrategy","fillStrategy","mouse","mouseOver","__mouse_over__","strategy","over","mouseOut","out","darker","filldarker","darkerFactor","fillColor","tooltip","noop","tooltipHtml","show","hide","functor","point","locationCallbacks","keys","selectNode","body","createSVGPoint","target","slice","snode","content","poffset","dir","scrollTop","scrollLeft","coords","bbox","getScreenBBox","offsetHeight","offsetWidth","e","targetel","getScreenCTM","matrix","tbbox","nw","matrixTransform","ne","se","sw","vizComponent","props","attrs","inner","getSchema","build","input","catch","createElement","class","VisualContainer","visualDashboard","mountInner","addVisual","visualDrawOnMount","vm","addComponent","dashboard","b","NaN","identity","pad","base","pyramid","j","k","fraction","hi","v0","ph","pj","r","polygons","sort","descending","sqrt","_","splits","x0","x1","floor","log10","ndx","ceil","nx0","lineDrawing","newRange","nseries","label","obj","d3_shape","extent","ranges","getScale","scaleX","scaleY","stack","stackOrder","order","createChart","meta","lines","strokeColor","curve","lineWidth","strokeOpacity","line","exit","bars","sx","sy","sz","stacked","xrect","yrect","yi","rects","rangeRound","paddingInner","bandwidth","bardim","gframe","pivot","normalize","y0","nice","stackOrderDescending","fillOpacity","stackedData","gx","gh","groupData","gy","axisX","axisY","getDataInfo","chart","boxplot","info","duration","Number","whiskers","boxWhiskers","quartiles","boxQuartiles","ascending","whiskerData","whiskerIndices","concat","scaleLinear","__chart__","center","quartileData","medianLine","whisker","outlier","outlierIndices","boxTick","whiskerTick","quantile","grouper","labels","normalizeData","GroupedData","vals","acc","acc0","acc1","getStack","rangeX","rangeY","areas","gradient","c","areagroup","arealine","xa","axisTickSizeOuter","ya","xx","y1","area_","area","line_","lineDarken","isDate","timeFormat","axisTimeFormat","axisFormat","spacing","words","reverse","word","lineHeight","dy","tspan","join","getComputedTextLength","pi","PI","rad","proportional","outerRadius","innerRadius","angles","pie","padAngle","startAngle","endAngle","arcs","arc","cornerRadius","proportionalData","slices","centerFontSize","centerOpacity","textWrap","legendLabel","fractionFormat","scaleOrdinal","moveTo","lineTo","closePath","inverted","marks","polygon","xy","segments","widthWrap","shift","layout","zrange","z","heat","heatmap","shape","shapes","sizes","buckets","labelsX","labelsY","xp","yp","xv","yv","zv","dd","niceRange","geo","getGeoData","_geoPath","createGeoPath","update","path","geometryData","feature","topology","objects","geometry","features","paths","choropleth","projection","geoPath","lefletMap","leaflet","leafletId","Map","zoom","addLayer","TileLayer","getPanes","overlayPane","appendChild","projectPoint","latLngToLayerPoint","LatLng","stream","proection","boundGeometry","bounds","boundScaleFactor","dataKey","dataLabelKey","dataValueKey","geoKey","valueRange","choroplethScale","properties"],"mappings":"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"}