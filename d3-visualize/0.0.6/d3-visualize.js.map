{"version":3,"file":"d3-visualize.js","sources":["../src/utils/randompath.js","../src/data/array.js","../src/data/warn.js","../src/utils/isurl.js","../src/data/remote.js","../src/data/expression.js","../src/data/sources.js","../src/data/store.js","../src/data/locale.js","../src/core/options.js","../src/utils/round.js","../src/utils/size.js","../src/core/base.js","../src/utils/warn.js","../src/core/visual.js","../src/core/chart.js","../src/charts/bar.js","../src/charts/line.js","../src/components/dashboard.js","../src/components/visual.js","../src/data/formatters.js","../src/utils/columns.js","../src/plugins/data.js","../src/plugins/responsive.js","../src/plugins/title.js","../src/plugins/clusterize.js","../src/plugins/paginate.js","../src/plugins/bootstrap.js","../src/plugins/index.js","../src/components/tabular.js","../src/components/index.js"],"sourcesContent":["import assign from 'object-assign';\nimport {range} from 'd3-array';\nimport {randomNormal} from 'd3-random';\n\n\nconst defaults = {\n    sigma: 0.1,\n    drift: 0\n};\n\n\nexport default function (size, options) {\n    options = assign({}, defaults, options);\n    var t = range(0, +size, 1),\n        S = options.sigma,\n        drift = options.drift,\n        data = [{x: 0, y: 0}],\n        norm = randomNormal(0, 1),\n        dx;\n\n    for (var i = 1; i < t.length; i++) {\n        dx = drift + S * norm();\n        data[i] = {\n            x: i,\n            y: data[i - 1].y + dx\n        };\n    }\n\n    return data;\n}\n","import {isArray, isObject, pop} from 'd3-let';\n\n\nexport default {\n\n    init (config) {\n        if (isArray(config)) return {data: config};\n        else if (isObject(config) && isArray(config.data)) return config;\n    },\n\n    load () {\n        return pop(this.config, 'data');\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-data-source]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import {isString} from 'd3-let';\n\n\nconst schemes = ['http', 'https', 'ws', 'wss'];\n\n\nexport default function (value) {\n    return isString(value) && schemes.indexOf(value.split('://')[0]) > -1;\n}\n","import {csvParse} from 'd3-dsv';\nimport {isObject} from 'd3-let';\nimport {viewProviders} from 'd3-view';\n\nimport warn from './warn';\nimport isUrl from '../utils/isurl';\n\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    init (config) {\n        if (isUrl(config)) return {url: config};\n        else if (isObject(config) && config.url)\n            return config;\n    },\n\n    load () {\n        var fetch = viewProviders.fetch;\n        if (!fetch) {\n            warn('fetch provider not available, cannot submit');\n            return;\n        }\n        return fetch(this.url).then(parse);\n    }\n};\n\n\nfunction parse (response) {\n    var ct = (response.headers.get('content-type') || '').split(';')[0];\n    if (ct === 'text/plain' || ct === 'text/csv')\n        return response.text().then(csvParse);\n    else if (ct === 'application/json')\n        return response.json();\n    else {\n        warn(`Cannot load content type '${ct}'`);\n        return [];\n    }\n}\n","import {isString, isObject} from 'd3-let';\nimport {viewExpression} from 'd3-view';\n\nimport isUrl from '../utils/isurl';\n\n\nexport default {\n\n    init (config) {\n        var opts;\n        if (isUrl(config)) return;\n        else if (isString(config)) return {expression: config};\n        else if (isObject(config) && config.type === 'expression')\n            return config;\n            opts = config;\n        if (opts) {\n            this.name = opts.name || this.dataName();\n            this.expression = viewExpression(opts.expression);\n            return this;\n        }\n    },\n\n    load () {\n        if (!this.expression) this.expression = viewExpression(this.config.expression);\n        var model = this.store.model;\n        return this.expression.eval(model);\n    }\n};\n","import assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {isPromise, pop} from 'd3-let';\nimport crossfilter from 'crossfilter';\n\n\nconst dataEvents = dispatch('init', 'data');\n\n\nconst dataSourcePrototype = {\n\n    init () {\n\n    },\n\n    size () {\n        return this.cf.size();\n    },\n\n    load () {\n\n    },\n\n    data (cfg, data) {\n        if (arguments.length === 2)\n            return this.add(data);\n        else {\n            var self = this;\n            data = this.load();\n            if (isPromise(data))\n                return data.then((d) => {\n                    self.data(cfg, d);\n                });\n            return this.data(cfg, data);\n        }\n    },\n\n    // add data to the serie\n    add (data) {\n        if (!data) return this;\n        var size = this.size();\n        data = data.map((entry) => {\n            if (typeof entry === 'object') entry._id = ++size;\n            else entry = {_id: ++size, data: entry};\n            return entry;\n        });\n        this.cf.add(data);\n        dataEvents.call('data', this, data);\n        return this;\n    }\n};\n\n\n// DataSource container\nexport default assign(map(), {\n    events: dataEvents,\n\n    add (type, source) {\n\n        function DataSource (config, store) {\n            initDataSource(this, type, config, store);\n        }\n\n        DataSource.prototype = assign({}, dataSourcePrototype, source);\n\n        this.set(type, DataSource);\n        return DataSource;\n    },\n\n    // Create a DataSource for a dataStore\n    create (config, store) {\n        var sources = this.values(),\n            cfg;\n        for (var i=0; i<sources.length; ++i) {\n            cfg = sources[i].prototype.init(config);\n            if (cfg) return new sources[i](cfg, store);\n        }\n    }\n});\n\n\nfunction initDataSource(dataSource, type, config, store) {\n\n    var name = store.dataName(pop(config, 'name')),\n        cf = crossfilter();\n\n    // store.natural = cf.dimension(d => d._id);\n\n    Object.defineProperties(dataSource, {\n        cf: {\n            get () {\n                return cf;\n            }\n        },\n        name: {\n            get () {\n                return name;\n            }\n        },\n        store: {\n            get () {\n                return store;\n            }\n        },\n        type: {\n            get () {\n                return type;\n            }\n        },\n        config: {\n            get () {\n                return config;\n            }\n        }\n    });\n\n    store.series.set(name, dataSource);\n    dataEvents.call('init', dataSource);\n    // load data\n    dataSource.data();\n}\n","import {map} from 'd3-collection';\n\nimport array from './array';\nimport remote from './remote';\nimport expression from './expression';\nimport dataSources from './sources';\n\n\ndataSources.add('array', array);\ndataSources.add('remote', remote);\ndataSources.add('expression', expression);\n\n//\n//  DataStore\n//  ==============\n//\n//  Map names to datasets\n//  Individual data sets are assumed to contain a collection of records\n//  (or “rows”), which may contain any number of named data\n//  attributes (fields, or “columns”).\n//  Records are modeled using standard JavaScript objects.\nexport default function DataStore(model) {\n    var series = map();\n\n    Object.defineProperties(this, {\n        series: {\n            get () {\n                return series;\n            }\n        }\n    });\n\n    this.dataCount = 0;\n    this.model = model;\n}\n\n\nDataStore.prototype = {\n    size () {\n        return this.series.size();\n    },\n\n    // Add a new serie from a data source\n    add (config) {\n        return dataSources.create(config, this);\n    },\n\n    // set, get or remove data by datasource name\n    serie (name, serie) {\n        if (arguments.length === 1) return this.series.get(name);\n        if (serie === null) {\n            var p = this.series.get(name);\n            this.series.remove(name);\n            return p;\n        }\n        this.series.set(name, serie);\n        return this;\n    },\n\n    dataName (name) {\n        this.dataCount++;\n        if (name) return '' + name;\n        var def = this.serie('default');\n        if (!def) return 'default';\n        return `serie${this.dataCount}`;\n    }\n};\n","// utility to load and set locale\nimport {formatDefaultLocale} from 'd3-format';\nimport {timeFormatDefaultLocale, timeFormat} from 'd3-time-format';\n\nimport dataSources from './sources';\n\n//\n// manage locale\nexport default {\n    formatDate: timeFormat('%d/%m/%Y'),\n\n    formatDateTime: timeFormat('%a %e %b %X %Y'),\n\n    load (symbol) {\n        var locales = this,\n            source1 = dataSources.create(`https://unpkg.com/d3-format/locale/${symbol}.json`),\n            source2 = dataSources.create(`https://unpkg.com/d3-time-format/locale/${symbol}.json`);\n\n        return Promise.all([\n            source1.load().then(\n                locale => {\n                    locales.symbol = symbol;\n                    locales.number = locale;\n                    formatDefaultLocale(locale);\n                }\n            ),\n            source2.load().then(\n                locale => {\n                    locales.time = locale;\n                    locales.formatDate = timeFormat(locale.date);\n                    locales.formatDateTime = timeFormat(locale.dateTime);\n                    timeFormatDefaultLocale(locale);\n                }\n            )\n        ]);\n    }\n};\n","//\n//  Global options for visuals\n//  ============================\n//\nexport default {\n    // visual data source\n    dataSource: null,\n    //\n    size: {\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    }\n};\n","export default function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n}\n","import {select} from 'd3-selection';\n\nimport round from './round';\n\n\nconst WIDTH = 400;\nconst HEIGHT = '75%';\n\n\n// Internal function for evaluating paper dom size\nexport function getSize (element, options) {\n    var size = {\n        width: options.width,\n        height: options.height\n    };\n\n    if (!size.width) {\n        size.width = getWidth(element);\n        if (size.width)\n            size.widthElement = getWidthElement(element);\n        else\n            size.width = WIDTH;\n    }\n\n    if (!size.height) {\n        size.height = getHeight(element);\n        if (size.height)\n            size.heightElement = getHeightElement(element);\n        else\n            size.height = HEIGHT;\n    }\n\n    // Allow to specify height as a percentage of width\n    if (typeof(size.height) === \"string\" && size.height.indexOf('%') === size.height.length-1) {\n        size.heightPercentage = 0.01*parseFloat(size.height);\n        size.height = round(size.heightPercentage*size.width);\n    }\n\n    return size;\n}\n\n\nexport function getWidth (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementWidth(el);\n}\n\n\nexport function getHeight (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementHeight(el);\n}\n\n\nexport function getWidthElement (element) {\n    return getParentElementRect(element, 'width');\n}\n\n\nexport function getHeightElement (element) {\n    return getParentElementRect(element, 'height');\n}\n\n\nfunction elementWidth (el) {\n    var w = el.getBoundingClientRect()['width'],\n        s = select(el),\n        left = padding(s.style('padding-left')),\n        right = padding(s.style('padding-right'));\n    return w - left - right;\n}\n\n\nfunction elementHeight (el) {\n    var w = el.getBoundingClientRect()['height'],\n        s = select(el),\n        top = padding(s.style('padding-top')),\n        bottom = padding(s.style('padding-bottom'));\n    return w - top - bottom;\n}\n\n\nfunction getParentElementRect (element, key) {\n    let parent = element.node ? element.node() : element,\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        v = parent.getBoundingClientRect()[key];\n        if (v)\n            return parent;\n        parent = parent.parentNode;\n    }\n}\n\n\nfunction padding (value) {\n    if (value && value.substring(value.length-2) == 'px')\n        return +value.substring(0, value.length-2);\n    return 0;\n}\n\n\nexport function boundingBox (size) {\n    var w = size.widthElement ? getWidth(size.widthElement) : size.width,\n        h;\n    if (size.heightPercentage)\n        h = round(w*size.heightPercentage, 0);\n    else\n        h = size.heightElement ? getHeight(size.heightElement) : size.height;\n    if (size.minHeight)\n        h = Math.max(h, size.minHeight);\n    return [round(w), round(h)];\n}\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\nimport {dispatch} from 'd3-dispatch';\nimport {select} from 'd3-selection';\nimport {viewBase} from 'd3-view';\n\nimport globalOptions from './options';\nimport {getSize, boundingBox} from '../utils/size';\n\n\nexport const liveVisuals = [];\nexport const visualTypes = {};\nexport const visualEvents = dispatch(\n    'before-init',\n    'after-init',\n    'before-draw',\n    'after-draw'\n);\n\n//\n//  Visual Interface\n//  ====================\n//\n//  Base prototype object for visuals\n//\nconst visualPrototype = assign({}, {\n\n    // initialise the visual with options\n    initialise () {\n\n    },\n\n    // draw this visual\n    draw () {\n        visualEvents.call('before-draw', undefined, this);\n        this.doDraw();\n        visualEvents.call('after-draw', undefined, this);\n    },\n\n    select (el) {\n        return select(el);\n    },\n\n    // destroy the visual\n    destroy () {\n\n    },\n\n    doDraw () {}\n}, viewBase);\n\n\n//\n//  Root element\n//  ================\n//\n//  Controls the size of a a visual or visuals within a group\n//  It does not control margins\nexport function RootElement (element, options) {\n\n    Object.defineProperties(this, {\n        element: {\n            get () {\n                return element;\n            }\n        },\n        sel: {\n            get () {\n                return select(element);\n            }\n        },\n        size: {\n            get () {\n                return [this.width, this.height];\n            }\n        }\n    });\n    this.width = options.width;\n    this.height = options.height;\n}\n\n\nRootElement.prototype = {\n    select (el) {\n        return select(el);\n    },\n\n    // Fit the root element to the size of the parent element\n    fit () {\n        var size = getSize(this.element, this);\n        this.width = size.width;\n        this.height = size.height;\n    },\n\n    resize (visual, size) {\n        if (!size) size = boundingBox(this);\n        var currentSize = this.size;\n\n        if (currentSize[0] !== size[0] || currentSize[1] !== size[1]) {\n            this.root.width = size[0];\n            this.root.height = size[1];\n            visual.draw();\n        }\n    }\n};\n\n//\n//  Create a new Visual Constructor\nexport default function (type, proto) {\n    const opts = pop(proto, 'options');\n    if (opts)\n        globalOptions[type] = opts;\n\n    function Visual(element, options) {\n        options = assign({}, globalOptions[type], options);\n        visualEvents.call('before-init', undefined, this, options);\n        element = this.initialise(element, options);\n\n        Object.defineProperties(this, {\n            visualType : {\n                get () {\n                    return type;\n                }\n            },\n            element: {\n                get: function () {\n                    return element;\n                }\n            }\n        });\n        visualEvents.call('after-init', undefined, this, options);\n    }\n\n    Visual.prototype = assign({}, visualPrototype, proto);\n    visualTypes[type] = Visual;\n    return Visual;\n}\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-visualize]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import createVisual, {RootElement, liveVisuals, visualTypes} from './base';\nimport warn from '../utils/warn';\n\n//\n//  Visual\n//  =============\n//\n//  A Visual is a a container of visual layers and it is\n//  associated with an HTML element\n//\n//  Usually a Visual contains one layer only, however it is possible to\n//  have more than one by combining several layers together. Importantly,\n//  layers in one visual generate HTMLElements which are children of the visual\n//  element and inherit both the width and height.\n//\n//  A visual register itself with the liveVisuals array\n//\nexport default createVisual('visual', {\n\n    options: {\n        render: 'svg'\n    },\n\n    initialise (element, options) {\n        var self = this;\n        if (!element) throw new Error('HTMLElement required by visual group');\n        this.root = new RootElement(element, options);\n        this.select(element).classed('d3-visual', true);\n        // list of layers which define the visual\n        this.visuals = [];\n        liveVisuals.push(this);\n\n        Object.defineProperties(this, {\n            group : {\n                get () {\n                    return self;\n                }\n            }\n        });\n    },\n\n    // Draw the visuals\n    doDraw() {\n        this.visuals.forEach(visual => {\n            visual.draw();\n        });\n    },\n\n    // Add a new visual to this group\n    addVisual (options) {\n        options.group = this;\n        var VisualClass = visualTypes[options.type];\n        if (!VisualClass)\n            warn(`Cannot add visual ${options.type}`);\n        else {\n            var viz = new VisualClass(this.element, options);\n            this.visuals.push(viz);\n            return viz;\n        }\n    },\n\n    //\n    // Resize the visual group if it needs resizing\n    //\n    resize (size) {\n        this.root.resize(this, size);\n    },\n\n    destroy () {\n        var idx = liveVisuals.indexOf(this);\n        if (idx > -1) {\n            liveVisuals.splice(idx, 1);\n            this.visuals.forEach(visual => visual.destroy());\n        }\n    }\n});\n","import assign from 'object-assign';\nimport createVisual, {visualEvents} from './base';\nimport Visual from './visual';\n\n//\n//  crateChart\n//\n//  A chart is a drawing of series data in two dimensional\nexport default function (type, proto) {\n\n    return createVisual(type, assign({}, chartPrototype, proto));\n}\n\n\nexport const vizPrototype = {\n\n    initialise (element, options) {\n        if (!options.visual)\n            options.visual = new Visual(element, options);\n        this.visual = options.visual;\n    }\n};\n\n\nconst chartPrototype = assign({}, {\n\n    //  override draw method\n    //  invoke doDraw only if a series is available for the chart\n    draw () {\n        visualEvents.call('before-draw', this);\n        this.applyTransforms();\n        if (this.series) {\n            this.doDraw();\n            visualEvents.call('after-draw', this);\n        }\n    },\n\n    // Apply data transforms to chart\n    applyTransforms () {\n\n    }\n}, vizPrototype);\n","import createChart from '../core/chart';\n\n//\n//  Bar Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('barchart', {\n\n    options: {\n        orientation: 'vertical',\n        // stack multiple y series?\n        stack: false\n    },\n\n    doDraw () {\n\n    }\n});\n","import * as d3_shape from 'd3-shape';\n\nimport createChart from '../core/chart';\nimport warn from '../utils/warn';\n\n\n//\n//  Line Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('linechart', {\n\n    options: {\n        lineWidth: 1,\n        colorOpacity: 1,\n        curve: 'cardinalOpen'\n    },\n\n    doDraw () {\n        var data = this.series,\n            aesthetics = this.aesthetics,\n            path = this.plot.path(this).data([data]),\n            x = this.scaled(this.mapping.x, this.plot, data),\n            y = this.scaled(this.mapping.y, this.plot, data),\n            line = d3_shape.line().x(x).y(y).curve(curve(this, aesthetics.curve)),\n            width = this.plot.dim(aesthetics.lineWidth),\n            merge = this.plot.transition('update');\n\n        path\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', aesthetics.color)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', width)\n            .merge(path)\n                .transition(merge)\n                .attr('stroke', aesthetics.color)\n                .attr('stroke-opacity', aesthetics.colorOpacity)\n                .attr('stroke-width', width)\n                .attr('d', line);\n\n        path\n            .exit()\n            .remove();\n    }\n});\n\n\nexport function curve (layer, name) {\n    var obj = d3_shape[curveName(name)];\n    if (!obj) {\n        warn(`Could not locate curve type \"${name}\"`);\n        name = curveName(layer.defaults().curveName);\n        obj = d3_shape[name];\n    }\n    return obj;\n}\n\n\nfunction curveName (name) {\n    if (name.substring(0, 5) !== 'curve')\n        name = 'curve' + name[0].toUpperCase() + name.substring(1);\n    return name;\n}\n","import assign from 'object-assign';\nimport {isString, isObject} from 'd3-let';\n\nimport DataStore from '../data/store';\n\n//\n//  vizComponent base prototype\n//  =============================\n//\n//  Some common properties and methods for all visualize components\n//\nexport const vizComponent = {\n    props: [\n        'schema',\t    // Schema is a collection of fields to display in the table\n        'datasource',\t// Data source\n        'plugins',      // list of string/objects\n\t],\n\n    render (props, attrs, el) {\n        var self = this,\n            inner = this.select(el).html();\n        //\n        // make sure data store exists\n        this.dataStore();\n        //\n        // build\n        return this.getSchema(props.schema, schema => {\n            if (!isObject(schema)) schema = {};\n            return self.build(schema, inner);\n        });\n    },\n\n    getSchema (input, build) {\n        if (isString(input)) {\n            return this.json(input).then(build);\n        }\n        else return build(input);\n    },\n\n    dataStore () {\n        var store = this.model.dataStore;\n\n        if (!store) {\n            store = new DataStore(this.model);\n            this.model.dataStore = store;\n        }\n        return store;\n    },\n    //\n    // build the visual component has the schema available\n    build () {}\n};\n//\n//  Dashboard Component\n//  ========================\n//\n//  A collection of visual components arranged according\n//  to a custom layout.\n//\n//  * Dashboard visuals are independent of each other but\n//    interact via the data object\n//  * The Dashboard layout is given by the inner HTML elements\n//  * The configuration is obtained via the schema property which\n//    can be either:\n//      1) an object\n//      2) a url\nexport default assign({}, vizComponent, {\n\n    build (schema, inner) {\n        var model = this.model;\n        // Set itself as the visualGroup\n        model.dashboard = model;\n        // collection of visuals\n        model.visuals = [];\n        // model.visuals = schema.visuals;\n        // self.model.$set('dashboard', schema);\n        var sel = this.createElement('div')\n                        .classed('dashboard', true);\n        return this.mountInner(sel, inner);\n    }\n});\n","import assign from 'object-assign';\n\nimport {vizComponent} from './dashboard';\nimport Visual from '../core/visual';\n\n\n//\n//  Visual component\n//  ======================\n//\n//  An element containing a visualization\nexport default assign({}, vizComponent, {\n\n    build (schema) {\n        var model = this.model,\n            dashboard = model.dashboard,\n            sel = this.createElement('div');\n        // no visual group, the visual is not used in a group\n        // create its own group\n        if (dashboard) {\n            dashboard.visuals.push(model);\n        }\n        // build the visual group object object\n        model.visual = new Visual(sel.node(), schema);\n        return sel;\n    }\n});\n","import {isoParse} from 'd3-time-format';\n\nimport locale from './locale';\n\n\nexport const parsers = {\n    date: isoParse,\n\n    string (value) {\n        return ''+value;\n    }\n};\n\n// formatters\nexport const formatters = {\n\n    number (value) {\n        return value;\n    },\n\n    date (value) {\n        return locale.formatDate(value);\n    },\n\n    boolean (value) {\n        return value;\n    }\n};\n","import {isObject, isArray} from 'd3-let';\n\nimport {formatters, parsers} from '../data/formatters';\n\n\n//\n// Create table columns from schema\nexport default function (schema) {\n    var columns = [];\n    let col;\n\n\tif (!schema) return columns;\n\n    if (isArray(schema))\n        schema = {properties: schema};\n\n    if (isObject(schema.properties)) {\n        for (let key in schema.properties) {\n            col = schema.properties[key];\n            if (isObject(col)) {\n                if (!col.name) col.name = key;\n                columns.push(col);\n            }\n        }\n    } else\n        columns.push(...schema.properties);\n\n    return columns.map((col) => {\n        if (!isObject(col)) col = {name: col};\n        if (!col.label) col.label = col.name;\n        if (!col.hidden) col.hidden = false;\n        if (!col.$parse) col.$parse = parsers[col.type] || parsers.string;\n        if (!col.$html) col.$html = formatters[col.type] || $html;\n        return col;\n    });\n}\n\n\nfunction $html (value) {\n    return value;\n}\n","//\n//  dataStore integration with visuals\nimport {isString, pop} from 'd3-let';\nimport {visualEvents} from '../core/base';\nimport DataStore from '../data/store';\n\n\nvisualEvents.on('after-init.data', (viz, options) => {\n    if (viz.visualType === 'visual') setupVisual(viz, options);\n    else setupLayer(viz, options);\n});\n\n\nfunction setupVisual (visual, options) {\n    var store = options.dataStore,\n        data = pop(options, 'data');\n    //\n    // No data entry - skip data setup\n    if (!data) return;\n    //\n    if (!store) store = new DataStore();\n\n    visual.dataStore = store;\n    //\n    // data is a string, it must be already registered with store\n    if (isString(data)) data = {name: data};\n\n    if (!store.get(data.name)) {\n        data = store.add(data);\n    }\n    visual.data = data;\n}\n\n\nfunction setupLayer (layer, options) {\n    var visual = layer.visual,\n        store = visual.dataStore,\n        data = options.data;\n\n    // no data - do nothing\n    if (!store) return;\n\n    if (data) layer.data = data;\n}\n","import {inBrowser} from 'd3-let';\nimport {viewDebounce} from 'd3-view';\nimport {select} from 'd3-selection';\n\nimport {liveVisuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nif (!globalOptions.resizeDelay)\n    globalOptions.resizeDelay = 200;\n\n\nif (inBrowser) {\n    var resize = viewDebounce(() => {\n        liveVisuals.forEach(p => p.resize());\n    }, globalOptions.resizeDelay);\n\n    select(window).on('resize.visuals', resize);\n}\n","// Title plot annotation\nimport {isString} from 'd3-let';\n\nimport {visualEvents} from '../core/base';\n\n\nvisualEvents.on('after-init.title', (visual, options) => {\n    var title = options.title;\n    if (!title) return;\n    if (isString(title)) title = {text: title};\n    visual.title = title;\n});\n","import {require} from 'd3-require';\n//\n// Use clusterize.js to render the table\nexport default function (table, options) {\n    return require('clusterize.js@0.17.6').then(Clusterize => clusterize(Clusterize, table, options));\n}\n\n\nfunction clusterize(Clusterize) {\n    var cl = new Clusterize();\n    return cl;\n}\n","export default function (table) {\n    return table;\n}\n","//\n//  bootstrap styling for tabular component\n//  ==========================================\n//\nimport assign from 'object-assign';\n\n\nconst defaults = {\n    over: true,\n    small: true,\n    bordered: true,\n    loadingClass: 'table-info',\n    loadingTextClass: 'text-center'\n};\n\n\nexport default function (table, options) {\n    var style = table.model.style;\n    style.$update(assign({}, defaults, options));\n\n    style.tableClass = 'table table-responsive';\n    if (style.striped) style.tableClass += ' table-striped';\n    if (style.over) style.tableClass += ' table-hover';\n    if (style.bordered) style.tableClass += ' table-bordered';\n    if (style.small) style.tableClass += ' table-sm';\n}\n","//\n//  Plugins for visuals and tabular\n//\n// visual plugins\nimport './data';\nimport './responsive';\nimport './title';\n//\n//  This module depends on core but not on components\nimport clusterize from './clusterize';\nimport paginate from './paginate';\nimport bootstrap from './bootstrap';\n\n// plugins add functionalities to a d3 table\n// A plugin is a function accepting two parameters:\n//  * the table component\n//  * object with configuration parameters\nexport default {\n    bootstrap,\n    clusterize,\n    paginate\n};\n","// import {timeout} from 'd3-timer';\nimport assign from 'object-assign';\nimport {isString, isArray, isPromise} from 'd3-let';\n\nimport warn from '../utils/warn';\nimport createColumns from '../utils/columns';\nimport tablePlugins from '../plugins/index';\nimport {vizComponent} from './dashboard';\n\n\nconst tableTpl = `<table d3-class=\"[style.tableClass, loadingData ? 'loading' : null]\">\n<thead d3-class=\"style.headerClass\">\n<tr d3-class=\"style.headerRowClass\">\n  <th d3-for=\"col in columns\"\n        d3-html=\"col.label\"\n        d3-if=\"!col.hidden\">\n  </th>\n</tr>\n<tr d3-if=\"loadingData\" d3-class=\"style.loadingClass\">\n    <td d3-attr-colspan=\"columns.length\">\n        <p d3-class=\"style.loadingTextClass\">loading data</p>\n    </td>\n</tr>\n</thead>\n<tbody></tbody>\n</table>`;\n\n\nexport default assign({}, vizComponent, {\n\n\tmodel () {\n        return {\n            header: true,            // show header\n            columns: [],             // table columns\n            loadingData: false,\n            style: {\n                tableClass: null,\n                headerClass: null,\n                headerRowClass: null,\n                loadingClass: 'loading',\n                loadingTextClass: null\n            }\n        };\n\t},\n\n\tbuild (schema) {\n\t\tvar self = this,\n            model = this.model,\n            plugins = schema.plugins || [];\n        // model.allData = crossfilter([]);\n        this.records = {};\n        this.data = [];\n        this.template = tableTpl;\n\n\t\tmodel.columns = createColumns(schema);\n\t\t// if (data.dataurl) model.dataLoader = new DataLoader(data.dataurl);\n\n        if (!isArray(plugins)) {\n            warn('plugins should be an array');\n        } else {\n            var promises = [];\n            let promise;\n            plugins.forEach(plugin => {\n                if (isString(plugin)) plugin = {name: plugin};\n                if (!tablePlugins[plugin.name])\n                    warn(`Unknown table plugin ${plugin.name}`);\n                else {\n                    promise = tablePlugins[plugin.name](self, plugin);\n                    if (isPromise(promise)) promises.push(promise);\n                }\n            });\n            if (promises.length)\n                 return Promise.all(promises).then(() => self.viewElement(self.template));\n        }\n\n\t\treturn this.viewElement(this.template);\n\t},\n\n\tmounted () {\n        var vm = this,\n            model = this.model;\n\t\tif (model.dataLoader) {\n\t\t\tvar p = model.dataLoader.load(model.columns);\n            if (p) {\n                model.loadingData = true;\n                p.then((data) => {\n                    // var allData = model.allData;\n                    model.loadingData = false;\n                    addData(vm, data);\n                }, (err) => {\n                    model.loadingData = false;\n                    return err;\n                });\n            }\n        }\n\t}\n});\n\n// new data to include in the table\nfunction addData (vm, newData) {\n    var records = vm.records,\n        data = vm.data,\n        model = vm.model,\n        delayData = newData;\n\n    let record, value;\n\n    newData = delayData.splice(0, 100);\n\n    newData.forEach((d) => {\n        if (d.id) {\n            record = d.id ? records[d.id] : null;\n            if (record)\n                d = assign(record, d);\n            else {\n                data.push(d);\n                records[d.id] = d;\n            }\n        } else\n            data.push(d);\n        model.columns.forEach((col) => {\n            d[col.name] = col.$parse(d[col.name]);\n        });\n    });\n\n    //if (delayData.length)\n    //    timeout(() => addData(vm, delayData));\n\n    var rows = vm.sel.select('tbody')\n                .selectAll('tr').data(data);\n\n    rows\n        .enter()\n            .append('tr')\n            .attr('scope', 'row')\n            .selectAll('td')\n            .data(model.columns)\n            .enter()\n                .append('td')\n                .style('display', (col) => {\n                    return col.hidden ? 'none' : null;\n                })\n                .html(function (col) {\n                    record = this.parentNode.__data__;\n                    value = record[col.name];\n                    return col.$html(value === undefined ? '' : value);\n                });\n}\n","//\n//  d3-view components\n//  ======================\n//\n//  d3-view plugin for visualization components\n//\nimport dashboard from './dashboard';\nimport visual from './visual';\nimport tabular from './tabular';\nimport tabularPlugins from '../plugins/index';\n\n\n// Visual components plugin\nexport default {\n    tabularPlugins,\n\n    install (vm) {\n        vm.addComponent('dashboard', dashboard);\n        vm.addComponent('visual', visual);\n        vm.addComponent('tabular', tabular);\n    }\n\n};\n"],"names":["defaults","size","options","assign","t","range","S","sigma","drift","data","x","y","norm","randomNormal","dx","i","length","config","isArray","isObject","pop","prefix","msg","logger","warn","schemes","value","isString","indexOf","split","isUrl","url","fetch","viewProviders","then","parse","response","ct","headers","get","text","csvParse","json","opts","expression","type","name","dataName","viewExpression","model","store","eval","dataEvents","dispatch","dataSourcePrototype","cf","cfg","arguments","add","self","load","isPromise","d","map","entry","_id","call","source","DataSource","prototype","set","sources","values","init","initDataSource","dataSource","crossfilter","defineProperties","series","dataSources","array","remote","DataStore","dataCount","create","serie","p","remove","def","timeFormat","symbol","locales","source1","source2","Promise","all","number","locale","time","formatDate","date","formatDateTime","dateTime","n","Math","round","pow","WIDTH","HEIGHT","getSize","element","width","height","getWidth","widthElement","getWidthElement","getHeight","heightElement","getHeightElement","heightPercentage","parseFloat","el","getParentElementRect","elementWidth","elementHeight","w","getBoundingClientRect","s","select","left","padding","style","right","top","bottom","key","parent","node","v","tagName","parentNode","substring","boundingBox","h","minHeight","max","liveVisuals","visualTypes","visualEvents","visualPrototype","undefined","doDraw","viewBase","RootElement","visual","currentSize","root","draw","proto","globalOptions","Visual","initialise","createVisual","Error","classed","visuals","push","forEach","group","VisualClass","viz","resize","idx","splice","destroy","chartPrototype","vizPrototype","applyTransforms","createChart","aesthetics","path","plot","scaled","mapping","line","d3_shape","curve","dim","lineWidth","merge","transition","enter","append","attr","color","colorOpacity","exit","layer","obj","curveName","toUpperCase","vizComponent","props","attrs","inner","html","dataStore","getSchema","schema","build","input","dashboard","sel","createElement","mountInner","parsers","isoParse","formatters","columns","col","properties","label","hidden","$parse","string","$html","on","visualType","setupVisual","setupLayer","resizeDelay","inBrowser","viewDebounce","window","title","table","require","clusterize","Clusterize","cl","$update","tableClass","striped","over","bordered","small","tableTpl","plugins","records","template","createColumns","promises","promise","plugin","tablePlugins","viewElement","vm","dataLoader","loadingData","err","addData","newData","delayData","record","id","rows","selectAll","__data__","addComponent","tabular"],"mappings":"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"}