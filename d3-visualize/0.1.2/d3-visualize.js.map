{"version":3,"file":"d3-visualize.js","sources":["../src/utils/randompath.js","../src/data/array.js","../src/data/warn.js","../src/utils/isurl.js","../src/data/remote.js","../src/data/composite.js","../src/data/expression.js","../src/utils/accessor.js","../src/data/dataframe.js","../src/transforms/base.js","../src/transforms/filter.js","../src/utils/warn.js","../src/utils/fillarray.js","../src/transforms/aggregate.js","../src/transforms/crossfilter.js","../src/transforms/timeseries.js","../src/core/options.js","../src/transforms/mapfields.js","../src/utils/minmax.js","../src/transforms/moving-average.js","../src/transforms/index.js","../src/data/sources.js","../src/data/store.js","../src/data/locale.js","../src/utils/round.js","../src/utils/size.js","../src/utils/clone.js","../src/core/base.js","../src/core/visual.js","../src/utils/camelfunction.js","../src/core/chart.js","../src/core/paper.js","../src/plugins/menu.js","../src/utils/format.js","../src/plugins/data.js","../src/plugins/responsive.js","../src/plugins/title.js","../src/plugins/margin.js","../src/plugins/axis.js","../src/plugins/color.js","../src/plugins/legend.js","../src/plugins/clusterize.js","../src/plugins/paginate.js","../src/plugins/bootstrap.js","../src/plugins/index.js","../src/core/container.js","../src/components/dashboard.js","../src/components/visual.js","../src/data/formatters.js","../src/utils/columns.js","../src/components/tabular.js","../src/components/index.js","../src/utils/constant.js","../src/utils/descending.js","../src/utils/identity.js","../src/transforms/pyramid.js","../src/charts/line.js","../src/charts/bar.js","../src/charts/box.js","../src/charts/area.js","../src/utils/text-wrapping.js","../src/charts/pie.js","../src/utils/polygon.js","../src/charts/pyramid.js","../src/charts/treemap.js","../src/charts/text.js","../index.js"],"sourcesContent":["import assign from 'object-assign';\nimport {range} from 'd3-array';\nimport {randomNormal} from 'd3-random';\n\n\nconst defaults = {\n    sigma: 0.1,\n    drift: 0\n};\n\n\nexport default function (size, options) {\n    options = assign({}, defaults, options);\n    var t = range(0, +size, 1),\n        S = options.sigma,\n        drift = options.drift,\n        data = [{x: 0, y: 0}],\n        norm = randomNormal(0, 1),\n        dx;\n\n    for (var i = 1; i < t.length; i++) {\n        dx = drift + S * norm();\n        data[i] = {\n            x: i,\n            y: data[i - 1].y + dx\n        };\n    }\n\n    return data;\n}\n","import {isArray, isObject} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\n//\n//  Array DataSource\n//  ====================\n//\n//  Data is given in an array, pkain & simple\nexport default {\n\n    initialise (config) {\n        this._data = config.data;\n    },\n\n    getConfig (config) {\n        if (isArray(config)) return {data: config};\n        else if (isObject(config) && isArray(config.data)) return config;\n    },\n\n    getData () {\n        return resolvedPromise(this.asFrame(this._data));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-data-source]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import {isString} from 'd3-let';\n\n\nconst schemes = ['http', 'https', 'ws', 'wss'];\n\n\nexport default function (value) {\n    return isString(value) && schemes.indexOf(value.split('://')[0]) > -1;\n}\n","import {csvParse} from 'd3-dsv';\nimport {isObject} from 'd3-let';\nimport {viewProviders, resolvedPromise} from 'd3-view';\n\nimport warn from './warn';\nimport isUrl from '../utils/isurl';\n\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isUrl(config)) return {url: config};\n        else if (isObject(config) && config.url)\n            return config;\n    },\n\n    initialise (config) {\n        this.url = config.url;\n    },\n\n    getData () {\n        var fetch = viewProviders.fetch,\n            self = this;\n        if (!fetch) {\n            warn('fetch provider not available, cannot submit');\n            return resolvedPromise([]);\n        }\n        return fetch(this.url).then(parse).then((data) => self.asFrame(data));\n    }\n};\n\n\nfunction parse (response) {\n    var ct = (response.headers.get('content-type') || '').split(';')[0];\n    if (ct === 'text/plain' || ct === 'text/csv')\n        return response.text().then(csvParse);\n    else if (ct === 'application/json')\n        return response.json();\n    else {\n        warn(`Cannot load content type '${ct}'`);\n        return [];\n    }\n}\n","import {isArray, isObject} from 'd3-let';\n//\n//  A composite dataSource\n//  ===================\n//\n//  A composite data source has the source attribute with the name of one\n//  or more data sets to use as the source for this data set.\n//  The source property is useful in combination with a transform pipeline\n//  to derive new data.\n//  If string-valued, indicates the name of the source data set.\n//  If array-valued, specifies a collection of data source names that\n//  should be merged (unioned) together.\nexport default {\n\n    initialise (config) {\n        this.source = config.source;\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.source) {\n            if (!isArray(config.source)) config.source = [config.source];\n            return config;\n        }\n    },\n\n    getData () {\n        var store = this.store,\n            self = this;\n        let frame;\n        return Promise.all(this.source.map(source => {\n             return store.getData(source);\n        })).then(frames => {\n            if (frames.length === 1) frame = frames[0];\n            else frame = self.mergeFrames(frames);\n            return self.asFrame(frame);\n        });\n    },\n\n    // TODO: implement frame merging\n    mergeFrames (frames) {\n        return frames[0];\n    }\n};\n","import {isObject} from 'd3-let';\nimport {viewExpression, resolvedPromise} from 'd3-view';\n\n\nexport default {\n\n    initialise (config) {\n        this.expression = viewExpression(config.expression);\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.expression)\n            return config;\n    },\n\n    getData () {\n        var self = this,\n            model = this.store.model;\n        return resolvedPromise(this.expression.eval(model)).then((data) => self.asFrame(data));\n    }\n};\n","export default function (field) {\n    return function (d) {\n        return d[field];\n    };\n}\n","import {isArray} from 'd3-let';\nimport {map} from 'd3-collection';\nimport crossfilter from 'crossfilter';\n\nimport accessor from '../utils/accessor';\n\n\nexport default function DataFrame (data, serie, store) {\n    if (isArray(data)) data = {\n        store: store,\n        data: data,\n        dimensions: {},\n        series: map()\n    };\n    Object.defineProperties(this, {\n        _inner: {\n            get () {\n                return data;\n            }\n        },\n        store: {\n            get () {\n                return data.store;\n            }\n        },\n        data: {\n            get () {\n                return data.data;\n            }\n        },\n        dimensions: {\n            get () {\n                return data.dimensions;\n            }\n        },\n        series: {\n            get () {\n                return data.series;\n            }\n        }\n    });\n    this.serie = serie;\n}\n\n\nDataFrame.prototype = {\n\n    size () {\n        return this.data.length;\n    },\n\n    new (serie) {\n        if (isArray(serie)) return new DataFrame(serie, null, this.store);\n        else return new DataFrame(this._inner, serie);\n    },\n\n    cf () {\n        if (!this._inner.cf) this._inner.cf = crossfilter(this.data);\n        return this._inner.cf;\n    },\n\n    //  Create and return a crossfilter dimension\n    //  If value is not specified, keepExisting is by default true, and any\n    //  existing dimension name is recycled.\n    dimension (name, value, keepExisting) {\n        if (arguments.length === 1) keepExisting = true;\n        var current = this.dimensions[name];\n        if (current) {\n            if (keepExisting) return current;\n            current.dispose();\n        }\n        if (!value) value = accessor(name);\n        this.dimensions[name] = this.cf().dimension(value);\n        return this.dimensions[name];\n    },\n\n    //  Sort a dataframe by name and return the top values or all of them if\n    //  top is not defined. The name can be a function.\n    sortby (name, top) {\n        return this.new(this.dimension(name).top(top || Infinity));\n    },\n\n    // return a new dataframe by pivoting values for field name\n    pivot (dimension, key, value, total) {\n        var group = this.dimension(dimension).group();\n        if (!total) total = 'total';\n        return this.new(group.reduce(pivoter(1), pivoter(-1), Object).all().map(d => d.value));\n\n        function pivoter (m) {\n            let pk, pv;\n            return function (o, record) {\n                pk = ''+record[key];\n                pv = m*record[value];\n                o[dimension] = record[dimension];\n                if (pk in o) o[pk] += pv;\n                else o[pk] = pv;\n                if (total in o) o[total] += pv;\n                else o[total] = pv;\n                return o;\n            };\n        }\n    },\n\n    add () {\n        //this._inner.cf.add(data);\n    },\n\n    map (mapper) {\n        return this.new(this.data.map(mapper));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\n\nexport default function (options) {\n    const\n        transform = options.transform,\n        schema = options.schema || {},\n        jsonValidator = viewProviders.jsonValidator ? viewProviders.jsonValidator(options.schema) : dummyValidator;\n    if (!schema.type) schema.type = 'object';\n\n    function transformFactory (config) {\n        const valid = jsonValidator.validate(config);\n\n        if (!valid) return jsonValidator.logError();\n\n        return doTransform;\n\n        function doTransform (frame) {\n            return transform(frame, config);\n        }\n    }\n\n    transformFactory.schema = schema;\n\n    return transformFactory;\n}\n\n\nconst dummyValidator = {\n    validate () {\n        return true;\n    }\n};\n","import {viewExpression} from 'd3-view';\n\nimport transformFactory from './base';\n\n//\n// Create a groupby transform from a config object\nexport default transformFactory ({\n    schema: {\n        description: \"The filter transform removes objects from a data frame based on a provided filter expression\",\n        properties: {\n            expr: {\n                type: \"string\"\n            }\n        },\n        required: [\"expr\"]\n    },\n    transform (frame, config) {\n        var expr = viewExpression(config.expr);\n        return frame.data.reduce((data, d, index) => {\n            if (expr.safeEval({d: d, index: index, frame: frame})) data.push(d);\n            return data;\n        }, []);\n    }\n});\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-visualize]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","export default function (size, value) {\n    var a = new Array(size);\n    a.fill(value);\n    return a;\n}\n","import {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {max, min, sum, mean, median, variance, deviation} from 'd3-array';\n\nimport warn from '../utils/warn';\nimport fillArray from '../utils/fillarray';\n\nexport const operations = map({\n    count,\n    max,\n    min,\n    sum,\n    mean,\n    median,\n    variance,\n    deviation\n});\n\nexport const scalar_operations = map({\n    count (agg) {return agg + 1;},\n    sum (agg, v) {return agg + v;},\n    max: Math.max,\n    min: Math.min\n});\n\n\nfunction count (array, accessor) {\n    return array.reduce((v, d) => {\n        if (accessor(d) !== undefined) v += 1;\n        return v;\n    }, 0);\n}\n//\n// The aggregate transform groups and summarizes an imput data stream to\n// produce a derived output data stream. Aggregate transforms can be used\n// to compute counts, sums, averages and other descriptive statistics over\n// groups of data objects.\nexport default function (config) {\n    let fields = config.fields,\n        ops = config.ops,\n        as = config.as,\n        groupby = config.groupby;\n\n    if (!fields && !ops) return countAll;\n\n    if (!isArray(fields)) return warn('Aggregate transforms expect an array of fields');\n    if (!ops) ops = 'count';\n    if (isString(ops)) ops = fillArray(fields.length, ops);\n    if (!isArray(ops)) return warn('Aggregate transform expects an array of ops');\n    if (ops.length < fields.length) warn('Aggregate transforms expects an ops array with same length as fields');\n    if (!as) as = [];\n    if (!isArray(as)) return warn('Aggregate transform expects an array of as fields');\n    return aggregate;\n\n\n    function countAll (frame) {\n        let key;\n        return frame.data.reduce((o, d) => {\n            for (key in d) {\n                if (key in o) o[key] += 1;\n                else o[key] = 1;\n            }\n            return o;\n        }, {});\n    }\n\n    function aggregate (frame) {\n        var data = [],\n            name, op;\n\n        if (groupby) return group(frame);\n\n        fields.forEach((field, index) => {\n            name = ops[index];\n            op = count;\n            if (name) {\n                op = operations.get(name);\n                if (!op) {\n                    op = count;\n                    warn(`Operation ${ops[index]} is not supported, use count`);\n                }\n            }\n            data.push({\n                label: as[index] || field,\n                data: op(frame.data, d => d[field])\n            });\n        });\n        return data;\n    }\n\n    //\n    //  Perform aggregation with a set of data fields to group by\n    function group (frame) {\n        let v, name, op;\n        const entries = fields.map((field, index) => {\n            name = ops[index];\n            op = scalar_operations.get('count');\n            if (name) {\n                op = scalar_operations.get(name);\n                if (!op) {\n                    op = scalar_operations.get('count');\n                    warn(`Operation ${name} is not supported, use count`);\n                }\n            }\n            return {\n                field: field,\n                as: as[index] || field,\n                op: op\n            };\n        });\n\n        return frame.dimension(groupby).group().reduce((o, record) => {\n            return entries.reduce((oo, entry) => {\n                v = 0;\n                if (entry.as in oo) v = oo[entry.as];\n                oo[entry.as] = entry.op(v, record[entry.field]);\n                return oo;\n            }, o);\n        }, null, Object).all().map(d => {\n            d.value[groupby] = d.key;\n            return d.value;\n        });\n    }\n}\n","import {isArray, isString} from 'd3-let';\nimport warn from '../utils/warn';\n\n//\n// Apply a cross filter to an array of fields\nexport default function (config) {\n    let fields = config.fields,\n        query = config.query;\n\n    if (!isArray(fields)) return warn('crossfilter transform expects an array of fields');\n    if (!isArray(query)) return warn('crossfilter transform expects an array of query');\n    if (query.length != fields.length) return warn('crossfilter transform expects an query array with same length as fields');\n\n    return crossfilter;\n\n    function crossfilter (frame) {\n        let dim, q;\n        fields.forEach((field, index) => {\n            q = query[index];\n            if (isString(q)) q = frame.store.eval(q);\n            dim = frame.dimension(field).filterAll();\n            if (q) dim.filter(q);\n        });\n        if (dim) return frame.new(dim.top(Infinity));\n        return frame;\n    }\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var sortby = config.sortby,\n        groupby = config.groupby;\n\n    if (!sortby) warn('timeseries transform requires a \"sortby\" entry');\n\n    return timeseries;\n\n    function timeseries (frame) {\n        if (sortby) {\n            if (groupby) {\n                var dim = frame.dimension(groupby),\n                    groups = dim.group().top(Infinity),\n                    newframe = frame.new([]),\n                    tmp;\n                groups.forEach(group => {\n                    tmp = frame.new(dim.filterExact(group.key).top(Infinity)).dimension(sortby).group().top(Infinity);\n                    newframe.series.set(group.key, frame.new(tmp).dimension('key').top(Infinity));\n                });\n                return newframe;\n            } else {\n                return frame.new(frame.dimension(sortby).top(Infinity));\n            }\n        }\n        return frame;\n    }\n}\n","//\n//  Global options for visuals\n//  ============================\n//\nexport default {\n    // visual data source\n    dataSource: null,\n    //\n    size: {\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    }\n};\n","//\n//  Map Fields Transform\n//  ========================\n//\n//  Convert a set af fields to a different data type\n//\nimport assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {isString} from 'd3-let';\nimport {utcParse} from 'd3-time-format';\n\nimport warn from '../utils/warn';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.dateFormat = '%d-%b-%y';\n\n\nconst converters = {\n    date (entry) {\n        return utcParse(entry.dateFormat || globalOptions.dateFormat);\n    },\n    number () {\n        return parseFloat;\n    }\n};\n\n\n//\nexport default function (config) {\n    config = assign({}, globalOptions.dateFormat, config);\n    var fields = map(config.fields);\n    let i, converter;\n\n    return mapfields;\n\n    function mapfields (frame) {\n        var mappers = [];\n\n        fields.each((entry, key) => {\n            if (isString(entry)) entry = {type: entry};\n            converter = converters[entry.type];\n            if (!converter) warn(`Cannot convert field ${key} to type ${entry.type}`);\n            else mappers.push([key, converter(entry)]);\n        });\n\n        if (mappers.length)\n            frame = frame.map(d => {\n                for (i=0; i<mappers.length; ++i)\n                    d[mappers[i][0]] = mappers[i][1](d[mappers[i][0]]);\n                return d;\n            });\n\n        return frame;\n    }\n}\n","export default function (value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n","import transformFactory from './base';\nimport minmax from '../utils/minmax';\n\nconst\n    DEFAULT_METHOD = 'ema',   // or sma simple moving average\n    DEFAULT_PERIOD = 10,\n    DEFAULT_ALPHA = 0.5,\n    MAXALPHA = 0.999999;\n\n//\n// Exponential moving average transform\n// Useful for smoothing out volatile timeseries\nexport default transformFactory({\n    shema: {\n        description: \"Create moving average series from existing one. The new series override the existing one unless the as array is provided\",\n        properties: {\n            method: {\n                type: \"string\"\n            },\n            alpha: {\n                type: \"number\"\n            },\n            period: {\n                type: \"number\"\n            },\n            fields: {\n                type: \"array\",\n                items: {\n                    type: \"string\"\n                }\n            },\n            as: {\n                type: \"array\",\n                items: {\n                    type: \"string\"\n                }\n            }\n        },\n        required: [\"fields\"]\n    },\n    transform (frame, config) {\n        const as = config.as || [],\n            method = config.method || DEFAULT_METHOD;\n        let fieldto, y, s;\n\n        config.fields.forEach((field, index) => {\n            fieldto = as[index] || field;\n            //\n            // Simple Moving Average\n            if (method === 'sma') {\n                const period = Math.max(config.period || DEFAULT_PERIOD, 1),\n                    cumulate = [],\n                    buffer = [];\n                frame.data.forEach((d, index) => {\n                    y = d[field];\n                    if (cumulate.length === period) y -= buffer.splice(0, 1)[0];\n                    buffer.push(y);\n                    if (index) y += cumulate[cumulate.length-1];\n                    cumulate.push(y);\n                    d[fieldto] = y/cumulate.length;\n                });\n            //\n            // Exponential moving average\n            } else {\n                const alpha = minmax(config.alpha || DEFAULT_ALPHA, 1-MAXALPHA, MAXALPHA);\n\n                frame.data.forEach((d, index) => {\n                    y = d[field];\n                    if (!index) s = y;\n                    else s = alpha*s + (1-alpha)*y;\n                    d[fieldto] = s;\n                });\n            }\n        });\n    }\n});\n","// Collection of transforms\nimport {map} from 'd3-collection';\nimport {isArray} from 'd3-let';\n\nimport filter from './filter';\nimport aggregate from './aggregate';\nimport crossfilter from './crossfilter';\nimport timeseries from './timeseries';\nimport mapfields from './mapfields';\nimport movingaverage from './moving-average';\n\n//\n//  transforms Store\nexport default map({\n    filter,\n    aggregate,\n    mapfields,\n    timeseries,\n    crossfilter,\n    movingaverage\n});\n\n\n// Apply data transforms to a series\nexport function applyTransforms (frame, transforms) {\n    let ts;\n    if (!transforms) return frame;\n    transforms.forEach(transform => {\n        if (transform) {\n            ts = transform(frame);\n            if (isArray(ts)) frame = frame.new(ts);\n            else if (ts) frame = ts;\n        }\n    });\n    return frame;\n}\n","import assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {pop, isArray} from 'd3-let';\n\nimport DataFrame from './dataframe';\nimport transformStore, {applyTransforms} from '../transforms/index';\nimport warn from '../utils/warn';\n\nconst dataEvents = dispatch('init', 'data');\n\n\n//\n//  DataSource prototype\n//  ======================\nconst dataSourcePrototype = {\n\n    // get the config object-assign// This method is used by the prototype\n    // to check if the config object is a valid one\n    getConfig () {},\n\n    // initialise the data source with a config object\n    initialise () {},\n\n    getData () {},\n\n    //\n    addTransforms (transforms) {\n        var self = this;\n        let t;\n        if (!transforms) return;\n        if (!isArray(transforms)) transforms = [transforms];\n        transforms.forEach(transform => {\n            t = transformStore.get(transform.type);\n            if (!t) warn(`Transform \"${transform.type}\" not known`);\n            else self.transforms.push(t(transform));\n        });\n    },\n    //\n    // given a data object returns a Cross filter object\n    asFrame (data) {\n        if (isArray(data)) {\n            data = data.map(entry => {\n                if (entry.constructor !== Object) entry = {data: entry};\n                return entry;\n            });\n            data = new DataFrame(data, null, this.store);\n        }\n        return applyTransforms(data, this.transforms);\n    }\n};\n\n\n// DataSource container\nexport default assign(map(), {\n    events: dataEvents,\n\n    add (type, source) {\n\n        // DataSource constructor\n        function DataSource (config, store) {\n            initDataSource(this, type, config, store);\n        }\n\n        DataSource.prototype = assign({}, dataSourcePrototype, source);\n\n        this.set(type, DataSource);\n        return DataSource;\n    },\n\n    // Create a new DataSource\n    create (config, store) {\n        var sources = this.values(),\n            cfg;\n        for (var i=0; i<sources.length; ++i) {\n            cfg = sources[i].prototype.getConfig(config);\n            if (cfg) return new sources[i](cfg, store);\n        }\n    }\n});\n\n\nfunction initDataSource(dataSource, type, config, store) {\n\n    var name = store.dataName(pop(config, 'name')),\n        transforms = [];\n\n    // store.natural = cf.dimension(d => d._id);\n\n    Object.defineProperties(dataSource, {\n        name: {\n            get () {\n                return name;\n            }\n        },\n        store: {\n            get () {\n                return store;\n            }\n        },\n        type: {\n            get () {\n                return type;\n            }\n        },\n        // transforms to apply to data\n        transforms: {\n            get () {\n                return transforms;\n            }\n        },\n        config: {\n            get () {\n                return config;\n            }\n        }\n    });\n\n    dataSource.initialise(config);\n    dataSource.addTransforms(pop(config, 'transforms'));\n    store.sources.set(name, dataSource);\n    dataEvents.call('init', undefined, dataSource);\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {resolvedPromise, viewExpression} from 'd3-view';\n\nimport array from './array';\nimport remote from './remote';\nimport composite from './composite';\nimport expression from './expression';\nimport dataSources from './sources';\nimport transformStore from '../transforms/index';\n\n\ndataSources.add('array', array);\ndataSources.add('remote', remote);\ndataSources.add('composite', composite);\ndataSources.add('expression', expression);\n\n//\n//  DataStore\n//  ==============\n//\n//  Map names to datasets\n//  Individual data sets are assumed to contain a collection of records\n//  (or “rows”), which may contain any number of named data\n//  attributes (fields, or “columns”).\n//  Records are modeled using standard JavaScript objects.\nexport default function DataStore(model) {\n    var sources = map();\n\n    Object.defineProperties(this, {\n        sources: {\n            get () {\n                return sources;\n            }\n        }\n    });\n\n    // transforms function\n    this.transforms = assign({}, transformStore);\n    this.dataCount = 0;\n    this.model = model;\n}\n\n\nDataStore.prototype = {\n    size () {\n        return this.sources.size();\n    },\n\n    // Add a new serie from a data source\n    addSources (config) {\n        //\n        // data is a string, it must be already registered with store\n        if (isString(config)) config = {source: config};\n\n        if (isArray(config)) {\n            var self = this;\n            return config.map(cfg => {\n                return dataSources.create(cfg, self);\n            });\n        } else if (config) {\n            return dataSources.create(config, this);\n        }\n    },\n\n    addTransforms (transforms) {\n        assign(this.transforms, transforms);\n    },\n\n    // set, get or remove a data source\n    source (name, source) {\n        if (arguments.length === 1) return this.sources.get(name);\n        if (source === null) {\n            var p = this.sources.get(name);\n            this.sources.remove(name);\n            return p;\n        }\n        this.sources.set(name, source);\n        return this;\n    },\n\n    clearCache () {\n        this.sources.each(ds => {\n            delete ds.cachedFrame;\n        });\n    },\n\n    // get data from a source\n    getData (source) {\n        var ds = this.sources.get(source);\n        if (!ds) throw new Error(`Data source ${source} not available`);\n        if (ds.cachedFrame) return resolvedPromise(ds.cachedFrame);\n        return ds.getData().then(frame => {\n            if (ds.config.cache) ds.cachedFrame = frame;\n            return frame;\n        });\n    },\n\n    eval (expr, context) {\n        let ctx = this.model;\n        if (context) ctx = ctx.$child(context);\n        return viewExpression(expr).safeEval(ctx);\n    },\n\n    dataName (name) {\n        this.dataCount++;\n        if (name) return '' + name;\n        var def = this.source('default');\n        if (!def) return 'default';\n        return `source${this.dataCount}`;\n    }\n};\n","// utility to load and set locale\nimport {formatDefaultLocale} from 'd3-format';\nimport {timeFormatDefaultLocale, timeFormat} from 'd3-time-format';\n\nimport dataSources from './sources';\n\n//\n// manage locale\nexport default {\n    formatDate: timeFormat('%d/%m/%Y'),\n\n    formatDateTime: timeFormat('%a %e %b %X %Y'),\n\n    load (symbol) {\n        var locales = this,\n            source1 = dataSources.create(`https://unpkg.com/d3-format/locale/${symbol}.json`),\n            source2 = dataSources.create(`https://unpkg.com/d3-time-format/locale/${symbol}.json`);\n\n        return Promise.all([\n            source1.load().then(\n                locale => {\n                    locales.symbol = symbol;\n                    locales.number = locale;\n                    formatDefaultLocale(locale);\n                }\n            ),\n            source2.load().then(\n                locale => {\n                    locales.time = locale;\n                    locales.formatDate = timeFormat(locale.date);\n                    locales.formatDateTime = timeFormat(locale.dateTime);\n                    timeFormatDefaultLocale(locale);\n                }\n            )\n        ]);\n    }\n};\n","export default function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n}\n","import {select} from 'd3-selection';\n\nimport round from './round';\n\n\nconst WIDTH = 400;\nconst HEIGHT = '75%';\n\n\nexport function sizeValue (value, size) {\n    if (typeof(value) === \"string\" && value.indexOf('%') === value.length-1)\n        return round(0.01*parseFloat(value)*size);\n    return +value;\n}\n\n// Internal function for evaluating paper dom size\nexport function getSize (element, options) {\n    var size = {\n        width: options.width,\n        height: options.height\n    };\n\n    if (!size.width) {\n        size.width = getWidth(element);\n        if (size.width)\n            size.widthElement = getWidthElement(element);\n        else\n            size.width = WIDTH;\n    }\n\n    if (!size.height) {\n        size.height = getHeight(element);\n        if (size.height)\n            size.heightElement = getHeightElement(element);\n        else\n            size.height = HEIGHT;\n    }\n\n    // Allow to specify height as a percentage of width\n    size.height = sizeValue(size.height, size.width);\n    return size;\n}\n\n\nexport function getWidth (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementWidth(el);\n}\n\n\nexport function getHeight (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementHeight(el);\n}\n\n\nexport function getWidthElement (element) {\n    return getParentElementRect(element, 'width');\n}\n\n\nexport function getHeightElement (element) {\n    return getParentElementRect(element, 'height');\n}\n\n\nfunction elementWidth (el) {\n    var w = el.getBoundingClientRect()['width'],\n        s = select(el),\n        left = padding(s.style('padding-left')),\n        right = padding(s.style('padding-right'));\n    return w - left - right;\n}\n\n\nfunction elementHeight (el) {\n    var w = el.getBoundingClientRect()['height'],\n        s = select(el),\n        top = padding(s.style('padding-top')),\n        bottom = padding(s.style('padding-bottom'));\n    return w - top - bottom;\n}\n\n\nfunction getParentElementRect (element, key) {\n    let parent = element.node ? element.node() : element,\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        v = parent.getBoundingClientRect()[key];\n        if (v)\n            return parent;\n        parent = parent.parentNode;\n    }\n}\n\n\nfunction padding (value) {\n    if (value && value.substring(value.length-2) == 'px')\n        return +value.substring(0, value.length-2);\n    return 0;\n}\n\n\nexport function boundingBox (size) {\n    var w = size.widthElement ? getWidth(size.widthElement) : size.width,\n        h;\n    if (size.heightPercentage)\n        h = round(w*size.heightPercentage, 0);\n    else\n        h = size.heightElement ? getHeight(size.heightElement) : size.height;\n    if (size.minHeight)\n        h = Math.max(h, size.minHeight);\n    return [round(w), round(h)];\n}\n","import {isArray, isObject} from 'd3-let';\n\n\nexport default function clone (o) {\n    if (isArray(o)) return o.map(clone);\n    else if (isObject(o)) {\n        var v = {};\n        for (let key in o) {\n            v[key] = clone(o[key]);\n        }\n        return v;\n    } else return o;\n}\n","import assign from 'object-assign';\nimport {pop, isString, isObject} from 'd3-let';\nimport {dispatch} from 'd3-dispatch';\nimport {select} from 'd3-selection';\nimport {viewBase, viewModel} from 'd3-view';\nimport 'd3-transition';\n\nimport globalOptions from './options';\nimport {sizeValue} from '../utils/size';\nimport clone from '../utils/clone';\n\n\nconst CONTAINERS = ['visual', 'container'];\n\n//\n//  Gloval visuals object\n//  ==========================\n//\n//  Container of\n//  * live visuals\n//  * visual types\n//  * paper types\n//  * visual events\nexport const visuals = {\n    live: [],\n    types: {},\n    papers: {},\n    options: globalOptions,\n    events: dispatch(\n        'before-init',\n        'after-init',\n        'before-draw',\n        'after-draw'\n    )\n};\n\n//\n//  Visual Interface\n//  ====================\n//\n//  Base prototype object for visuals\n//\nexport const visualPrototype = assign({}, {\n\n    // initialise the visual with options\n    initialise () {\n\n    },\n\n    // draw this visual\n    draw () {},\n\n    // redraw the visual\n    // this is the method that should be invoked by applications\n    redraw () {\n        if (this.drawing) {\n            var self = this,\n                event = `after-draw.${this.toString()}`;\n            visuals.events.on(event, () => {\n                // remove callback\n                visuals.events.on(event, null);\n                self.redraw();\n            });\n        } else\n            this.drawing = this.draw();\n        return this.drawing;\n    },\n\n    select (el) {\n        return select(el);\n    },\n\n    // destroy the visual\n    destroy () {\n\n    },\n\n    toString () {\n        return `${this.visualType}-${this.model.uid}`;\n    },\n\n    // get a reactive model for type\n    getModel (type) {\n        if (!type) type = this.visualType;\n        var model = this.model[type];\n        if (!model && type in globalOptions) {\n            var options = pop(this.options, type),\n                self = this;\n            if (this.visualParent)\n                model = this.visualParent.getModel(type).$child(options);\n            else {\n                model = this.model.$new(globalOptions[type]);\n                model.$update(options);\n            }\n            this.model[type] = model;\n            model.$on(() => self.draw());\n        }\n        return model;\n    },\n\n    dim (size, refSize, minSize, maxSize) {\n        size = Math.max(sizeValue(size, refSize), minSize || 0);\n        if (maxSize) {\n            maxSize = Math.max(maxSize, minSize || 0);\n            size = Math.min(size, maxSize);\n        }\n        return size;\n    },\n    // pop this visual from a container\n    pop (container) {\n        if (container) {\n            var idx = container.live.indexOf(this);\n            if (idx > -1) container.live.splice(idx, 1);\n        }\n    },\n\n    getVisualSchema (name) {\n        var schema = this.options.visuals ? this.options.visuals[name] : null,\n            parent = this.visualParent;\n        if (parent && isString(schema)) {\n            name = schema;\n            schema = parent.getVisualSchema(name);\n        } else if (parent && !schema)\n            schema = parent.getVisualSchema(name);\n        if (isObject(schema))\n            return clone(schema);\n    }\n}, viewBase);\n\n//\n//  Create a new Visual Constructor\nexport default function (type, proto) {\n    const opts = pop(proto, 'options');\n    if (opts)\n        globalOptions[type] = opts;\n\n    function Visual(element, options, parent, model) {\n        Object.defineProperties(this, {\n            visualType: {\n                get () {\n                    return type;\n                }\n            },\n            isViz: {\n                get () {\n                    return CONTAINERS.indexOf(type) === -1;\n                }\n            }\n        });\n        this.visualParent = parent;\n        this.model = parent ? parent.model.$new() : (model || viewModel());\n        this.options = options || {};\n        this.drawing = false;\n        visuals.events.call('before-init', undefined, this);\n        this.initialise(element);\n        visuals.events.call('after-init', undefined, this);\n    }\n\n    Visual.prototype = assign({}, visualPrototype, proto);\n    visuals.types[type] = Visual;\n    return Visual;\n}\n","import {pop, inBrowser} from 'd3-let';\nimport {select} from 'd3-selection';\nimport {viewDebug} from 'd3-view';\n\nimport createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\nimport {getSize} from '../utils/size';\n\n//\n//  Visual\n//  =============\n//\n//  A Visual is a a container of visual layers and it is\n//  associated with an HTML element\n//\n//  Usually a Visual contains one layer only, however it is possible to\n//  have more than one by combining several layers together. Importantly,\n//  layers in one visual generate HTMLElements which are children of the visual\n//  element and inherit both the width and height.\n//\n//  A visual register itself with the visuals.live array\n//\nexport default createVisual('visual', {\n\n    options: {\n        render: 'svg',\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%',\n        // heightElement - selector for an element from wich to obtain height\n        heightElement: null\n    },\n\n    initialise (element) {\n        if (!element) throw new Error('HTMLElement required by visual group');\n        if (this.visualParent && this.visualParent.visualType !== 'container')\n            throw new Error('Visual parent can be a container only');\n        if (!this.select(element).select('.paper').node())\n            this.select(element).append('div').classed('paper', true);\n\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            paper : {\n                get () {\n                    return this.sel.select('.paper');\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            size: {\n                get () {\n                    return [this.width, this.height];\n                }\n            }\n        });\n\n        this.sel.classed('d3-visual', true);\n        // list of layers which define the visual\n        this.layers = [];\n        this.drawCount = 0;\n        visuals.live.push(this);\n        element.__visual__ = this;\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    toString () {\n        return `visual ${this.model.uid}`;\n    },\n\n    // Draw the visual\n    draw() {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        else if (!this.drawCount) {\n            this.drawCount = 1;\n            this.fit();\n        } else {\n            this.drawCount++;\n            this.clear();\n        }\n        var self = this;\n        visuals.events.call('before-draw', undefined, this);\n        return Promise.all(this.layers.map(visual => visual.redraw()))\n            .then(() => {\n                delete self.drawing;\n                visuals.events.call('after-draw', undefined, self);\n            }, err => {\n                delete self.drawing;\n                warn(`Could not draw ${self.toString()}: ${err}`);\n            });\n    },\n\n    clear () {},\n\n    // Add a new visual to this group\n    addVisual (options) {\n        var type = pop(options, 'type');\n        var VisualClass = visuals.types[type];\n        if (!VisualClass)\n            warn(`Cannot add visual ${options.type}`);\n        else\n            return new VisualClass(this.element, options, this);\n    },\n    //\n    // Fit the root element to the size of the parent element\n    fit () {\n        this.resize(null, true);\n    },\n\n    resize (size, fit) {\n        if (!size) size = getSize(this.element.parentNode || this.element, this.getModel());\n        var currentSize = this.size;\n\n        if (fit || (currentSize[0] !== size.width || currentSize[1] !== size.height)) {\n            if (!fit) viewDebug(`Resizing \"${this.toString()}\"`);\n            this.width = size.width;\n            this.height = size.height;\n            this.paper.style('width', this.width + 'px').style('height', this.height + 'px');\n            if (!fit) this.draw();\n        }\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n        this.pop(visuals);\n    }\n});\n\n\nif (inBrowser) {\n    // DOM observer\n    // Check for changes in the DOM that leads to visual actions\n    const observer = new MutationObserver(visualManager);\n    observer.observe(document.documentElement, {\n        childList: true,\n        subtree: true\n    });\n}\n\n//\n//  Clears visualisation going out of scope\nfunction visualManager (records) {\n    records.forEach(record => {\n        var nodes = record.removedNodes;\n        if (!nodes || !nodes.length) return;  // phantomJs hack\n        nodes.forEach(node => {\n            if (node.nodeName !== '#text') {\n                if (!node.__visual__)\n                    select(node).selectAll('.d3-visual').each(destroy);\n                else\n                    destroy.call(node);\n            }\n        });\n    });\n}\n\n\nfunction destroy () {\n    var viz = this.__visual__;\n    if (viz) {\n        viz.destroy();\n        viewDebug(`Removed \"${viz.toString()}\" from DOM, ${visuals.live.length} live visuals left`);\n    }\n    else warn('d3-visual without __visual__ object');\n}\n","export default function (o, prefix, name, objectOnly) {\n    if (name.substring(0, prefix.length) !== prefix)\n        name = `${prefix}${name[0].toUpperCase()}${name.substring(1)}`;\n    return objectOnly ? o[name] : o[name]();\n}\n","import assign from 'object-assign';\nimport {isFunction} from 'd3-let';\nimport * as d3_scale from 'd3-scale';\n\nimport createVisual, {visuals} from './base';\nimport Visual from './visual';\nimport camelFunction from '../utils/camelfunction';\nimport warn from '../utils/warn';\n\n//\n//  crateChart\n//\n//  A chart is a drawing of series data in two dimensional\nexport default function (type) {\n    var protos = [{}, vizPrototype, chartPrototype];\n    for (var i=1; i<arguments.length; ++i) protos.push(arguments[i]);\n    return createVisual(type, assign.apply(undefined, protos));\n}\n\n\n//  Viz Prototype\n//  =================\nexport const vizPrototype = {\n\n    initialise (element) {\n        // No visual parent, create the visual\n        var visual = this.visualParent;\n        if (!visual) {\n            this.visualParent = visual = new Visual(element, this.options, null, this.model);\n            this.model = visual.model.$new();\n            this.options = {};\n        } else if (visual.visualType !== 'visual')\n            throw new Error(`visual parent of ${this.visualType} can only be \"visual\"`);\n        visual.layers.push(this);\n    },\n\n    //\n    // paper object for this visualisation\n    paper () {\n        var visual = this.getModel('visual'),\n            paper = this._paper;\n        if (paper && paper.paperType === visual.render) return paper;\n        var PaperType = visuals.papers[visual.render];\n        if (!PaperType) throw new Error(`Unknown paper ${visual.render}`);\n        paper = new PaperType(this);\n        this._paper = paper;\n        return paper;\n    },\n\n    translate (x, y) {\n        if (isFunction(x)) {\n            return function (d) {\n                var xt = x(d) || 0,\n                    yt = y(d) || 0;\n                return `translate(${xt}, ${yt})`;\n            };\n        } else return `translate(${x}, ${y})`;\n    },\n\n    getScale (name) {\n        return camelFunction(d3_scale, 'scale', name);\n    },\n\n    displayError () {}\n};\n\n\nexport const chartPrototype = {\n\n    //  override draw method\n    draw () {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        var self = this;\n        visuals.events.call('before-draw', undefined, this);\n        this.getData().then(frame => {\n            delete self.drawing;\n            if (frame) {\n                this.doDraw(frame);\n                visuals.events.call('after-draw', undefined, self);\n            }\n        }, err => {\n            delete self.drawing;\n            warn(`Could not draw ${self.toString()}: ${err}`);\n            this.displayError(err);\n        });\n    }\n};\n","import assign from 'object-assign';\nimport {select} from 'd3-selection';\n\nimport {visuals} from './base';\n\n\nexport default function createPaper (type, proto) {\n\n    function Paper (viz) {\n        var element = this.initialise(viz);\n        Object.defineProperties(this, {\n            element: {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            paperType: {\n                get () {\n                    return type;\n                }\n            }\n        });\n    }\n\n    Paper.prototype = assign({}, paperPrototype, proto);\n\n    visuals.papers[type] = Paper;\n    return Paper;\n}\n\n\nconst paperPrototype = {\n\n    initialise () {},\n    transition () {},\n    size (box) {\n        this.sel\n            .attr('width', box.width)\n            .attr('height', box.height);\n        return this;\n    },\n\n    group (cname) {\n        if (!cname) cname = 'main';\n        var sel = this.sel;\n        sel\n            .selectAll(`.${cname}`)\n            .data([0]).enter()\n            .append('g').classed(cname, true);\n        return sel.select(`.${cname}`);\n    },\n\n    dim (value) {\n        return value;\n    }\n};\n\n\nexport const Svg = createPaper('svg', {\n\n    initialise (viz) {\n        var svg = viz.visualParent.paper.append('svg')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true);\n        return svg.node();\n    }\n});\n","//\n//  Add a menu buttom to a visual\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\n\n\nglobalOptions.menu = {\n    display: false,\n    height: '8%',\n    maxHeight: 50,\n    minHeight: 20\n};\n\n\nvisuals.events.on('after-init.menu', viz => {\n    if (viz.visualType === 'visual') {\n        var menu = viz.getModel('menu');\n        if (menu.display) {\n            viz.menu = viz.sel.insert('nav', ':first-child').classed('d3-nav navbar p-1', true);\n            viz.menu.append('h4').classed('title', true);\n        }\n    }\n});\n\nvisuals.events.on('before-draw.menu', viz => {\n    if (viz && viz.menu) {\n        refreshMenu(viz);\n    }\n});\n\n\nfunction refreshMenu(viz) {\n    var menu = viz.getModel('menu'),\n        height = viz.dim(menu.height, viz.height, menu.minHeight, menu.maxHeight);\n    viz.menu.style('height', `${height}px`);\n}\n","import {format} from 'd3-format';\nimport {map} from 'd3-collection';\n\nconst formats = map();\n\nexport default function (specifier, value) {\n    var fmt = formats.get(specifier);\n    if (!fmt) {\n        fmt = format(specifier);\n        formats.set(specifier, fmt);\n    }\n    return fmt(value);\n}\n","//\n//  dataStore integration with visuals\nimport {isString, pop} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport {visuals} from '../core/base';\nimport DataStore from '../data/store';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\nimport cachedFormat from '../utils/format';\n\n//\n// Visual Data Context\nvisuals.options.dataContext = {\n    $format: cachedFormat\n};\n\n//  getData method\n//  =====================\n//\n//  Inject a method for easily retrieving data from the datastore\nvizPrototype.getData = function () {\n    var name = this.model.data;\n    if (!name) {\n        warn(`Visual ${this.visualType} without data name, cannot get data`);\n        return resolvedPromise();\n    }\n    return this.dataStore.getData(name);\n};\n\n//\n// Context for expression evaluation\nvizPrototype.getContext = function (context) {\n    return this.dataStore.model.$child(context);\n};\n\n\nvisuals.events.on('before-init.data', viz => {\n    if (!viz.isViz) return;\n    // remove data from options\n    viz.data = pop(viz.options, 'data');\n});\n\n\nvisuals.events.on('after-init.data', viz => {\n    Object.defineProperties(viz, {\n        dataStore : {\n            get () {\n                if (viz.visualParent) return viz.visualParent.dataStore;\n                return viz.model.dataStore;\n            }\n        },\n    });\n    if (viz.isViz) setupLayer(viz);\n    else setupVisual(viz);\n});\n\n\nfunction setupVisual (visual) {\n    var store = visual.dataStore,\n        data = pop(visual.options, 'data');\n    //\n    if (!store) {\n        // create the data store for the visual or container\n        store = new DataStore(visual.getModel('dataContext'));\n        visual.model.dataStore = store;\n    }\n    store.addSources(data);\n}\n\n\nfunction setupLayer (layer) {\n    var store = layer.dataStore,\n        data = pop(layer, 'data');\n    if (!data) return;\n    if (isString(data)) data = {source: data};\n    if (!data.name) data.name = layer.model.uid;\n    data = store.addSources(data);\n    if (data)\n        layer.model.$set('data', data.name);\n    else\n        warn(`Could not create data source ${data.name}`);\n}\n","import {inBrowser} from 'd3-let';\nimport {viewDebounce} from 'd3-view';\nimport {select} from 'd3-selection';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nif (!globalOptions.resizeDelay)\n    globalOptions.resizeDelay = 200;\n\n\nif (inBrowser) {\n    var resize = viewDebounce(() => {\n        visuals.live.forEach(p => p.resize());\n    }, globalOptions.resizeDelay);\n\n    select(window).on('resize.visuals', resize);\n}\n","// Title plot annotation\nimport {isString} from 'd3-let';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.title = {\n    text: null,\n    fontSize: '5%',\n    minFontSize: 15,\n    maxFontSize: 25\n};\n\n\nvisuals.events.on('before-init.title', viz => {\n    var title = viz.options.title;\n    if (isString(title)) viz.options.title = {text: title};\n});\n\n\nvisuals.events.on('before-draw.title', viz => {\n    var title = viz.getModel('title');\n    if (!title.text) return;\n    var visual = viz.isViz ? viz.visualParent : viz;\n    if (visual.visualType === 'visual' && visual.menu) menuTitle(visual, title, viz);\n});\n\n\nfunction menuTitle(visual, title, viz) {\n    var height = number(visual.menu.style('height')),\n        maxSize = title.maxFontSize ? Math.min(height-4, title.maxFontSize) : height-4,\n        size = viz.dim(title.fontSize, visual.width, title.minFontSize, maxSize);\n    visual.menu.select('.title')\n        .html(title.text)\n        .style('font-size', `${size}px`)\n        .style('line-height', `${height}px`);\n}\n\n\nfunction number (px) {\n    return +px.substring(0, px.length-2);\n}\n","import {isObject} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst KEYS = ['top', 'bottom', 'left', 'right'];\nconst LEFTRIGHT = ['left', 'right'];\n\n\n// margin for visual marks\nglobalOptions.margin = {\n    top: 20,\n    bottom: 20,\n    left: 20,\n    right: 20\n};\n// padding for the visual paper\nglobalOptions.padding = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n};\n\n\n//\n//  Bounding box for a viz\n//  ==========================\nvizPrototype.boundingBox = function () {\n    var width = this.visualParent.width,\n        height = this.visualParent.height,\n        margin = calculate(this.getModel('margin'), width, height),\n        padding = calculate(this.getModel('padding'), width, height),\n        total = KEYS.reduce((o, key) => {\n            o[key] = margin[key] + padding[key];\n            return o;\n        }, {});\n    return {\n        width: width,\n        height: height,\n        margin: margin,\n        padding: margin,\n        total: total,\n        innerWidth: width - total.left - total.right,\n        innerHeight: height - total.top - total.bottom\n    };\n};\n\n\nvisuals.events.on('after-init.margin', viz => {\n    viz.margin = margins('margin', viz);\n    viz.padding = margins('padding', viz);\n});\n\n\nfunction margins (name, viz) {\n    var value = viz.options[name];\n\n    if (value !== undefined && !isObject(value)) {\n        var v = value || 0;\n        viz.options[name] = {\n            left: v,\n            right: v,\n            top: v,\n            bottom: v\n        };\n    }\n}\n\n\nfunction calculate (model, width, height) {\n    return KEYS.reduce((o, key) => {\n        o[key] = sizeValue(model[key], LEFTRIGHT.indexOf(key) > -1 ? width : height);\n        return o;\n    }, {});\n}\n","import {map} from 'd3-collection';\nimport {axisTop, axisBottom, axisLeft, axisRight} from 'd3-axis';\n\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\n\nconst axisOrientation = map({\n    top: axisTop,\n    bottom: axisBottom,\n    left: axisLeft,\n    right: axisRight\n});\n\nglobalOptions.xAxis = {\n    location: \"bottom\"\n};\n\nvizPrototype.axis = function (orientation, scale) {\n    return axisOrientation.get(orientation)(scale);\n};\n","import {map} from 'd3-collection';\nimport {range} from 'd3-array';\nimport {isObject} from 'd3-let';\nimport {viewUid} from 'd3-view';\nimport {\n    scaleSequential,\n    interpolateViridis, interpolateInferno, interpolateMagma,\n    interpolatePlasma, interpolateWarm, interpolateCool,\n    interpolateRainbow, interpolateCubehelixDefault\n} from 'd3-scale';\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\nexport const colorScales = map();\n\n\nglobalOptions.color = {\n    scale: 'cool',\n    // Minumim number of colors in a sequantial color scale\n    // This helps in keeping a consistent palette when few colors are used\n    scaleMinPoints: 6,\n    // An offset in the color scale, useful for combined visuals\n    scaleOffset: 0,\n    stroke: '#333',\n    strokeOpacity: 1,\n    fillOpacity: 1,\n};\n\ncolorScales.set('viridis', () =>  scaleSequential(interpolateViridis));\ncolorScales.set('inferno', () =>  scaleSequential(interpolateInferno));\ncolorScales.set('magma', () =>  scaleSequential(interpolateMagma));\ncolorScales.set('plasma', () =>  scaleSequential(interpolatePlasma));\ncolorScales.set('warm', () =>  scaleSequential(interpolateWarm));\ncolorScales.set('cool', () =>  scaleSequential(interpolateCool));\ncolorScales.set('rainbow', () =>  scaleSequential(interpolateRainbow));\ncolorScales.set('cubehelix', () =>  scaleSequential(interpolateCubehelixDefault));\n\n//\n//  Color scale method\n//  ==========================\nvizPrototype.colors = function (n) {\n    var color = this.getModel('color'),\n        scaleDef = colorScales.get(color.scale);\n\n    if (!scaleDef) throw new Error(`Unknown scale ${color.scale}`);\n    if (!isObject(scaleDef)) scaleDef = {scale: scaleDef};\n    if (scaleDef.minPoints === undefined) scaleDef.minPoints = color.scaleMinPoints;\n\n    var offset = color.scaleOffset,\n        npoints = n + offset,\n        points = Math.max(npoints, scaleDef.minPoints),\n        domain = scaleDef.reversed ? [points-1, 0] : [0, points-1],\n        scale = scaleDef.scale().domain(domain);\n    return range(offset, Math.min(npoints, points)).map(v => scale(v));\n};\n\n//\n//  Linear Gradient method\n//  ==========================\n//\n//  Create a monocromatic linear gradient in the visualization box,\n//  either horizontal or vertical\nvizPrototype.linearGradient = function (box, orientation) {\n    var gid = viewUid();\n    var defs = this.paper.select('defs');\n    if (!defs.node()) defs = this.paper.append(defs);\n    const grad = defs\n                    .append('linearGradient')\n                    .attr('id', gid)\n                    .attr('x1', '0%')\n                    .attr('y1', '0%');\n    if (orientation === 'vertical') {\n        grad.attr('x2', '0%').attr('y2', '100%');\n    } else {\n        grad.attr('x2', '100%').attr('y2', '0%');\n    }\n};\n","import {legendColor, legendSize, legendSymbol} from 'd3-svg-legend';\nimport {map} from 'd3-collection';\n\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\nglobalOptions.legend = {\n    location: \"top-right\",\n    orient: \"vertical\",\n    fontSize: '3%',\n    title: '',\n    titleWidth: \"20%\",\n    titleMinWidth: 30,\n    titleMaxWidth: 60,\n    minFontSize: 10,\n    maxFontSize: 20,\n    offsetX: 10,\n    offsetY: 10\n};\n\n\nconst legends = {\n    color: legendColor,\n    size: legendSize,\n    symbol: legendSymbol\n};\n\n\n//\n//  Legend method\n//  ==========================\nvizPrototype.legend = function (cfg, box) {\n    var vizModel = this.getModel(),\n        lgModel = this.getModel('legend'),\n        name = vizModel.legendType,\n        size = this.dim(lgModel.fontSize, box.height, lgModel.minFontSize, lgModel.maxFontSize);\n    if (!name) return;\n    var legend = legends[name];\n    if (!legend) return warn(`Could not load legend ${name}`);\n    legend = legend().orient(lgModel.orient);\n    if (lgModel.title) {\n        var width = this.dim(lgModel.titleWidth, box.width, lgModel.titleMinWidth, lgModel.titleMaxWidth);\n        legend.title(lgModel.title).titleWidth(width);\n    }\n    for (let key in cfg) legend[key](cfg[key]);\n    var g = this.paper()\n            .group('legend')\n            .style('font-size', `${size}px`)\n            .call(legend),\n        bb = locations.get(lgModel.location)(g.node().getBBox(), box, lgModel);\n    g.attr('transform', this.translate(bb.x, bb.y));\n};\n\n\nconst locations = map({\n    top,\n    bottom,\n    right,\n    left,\n    'top-left': topLeft,\n    'top-right': topRight,\n    'bottom-left': bottomLeft,\n    'bottom-right': bottomRight\n});\n\n\nfunction top (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottom (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction right (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: options.offsetY\n    };\n}\n\n\nfunction left (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottomLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction bottomRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n","//\n// Use clusterize.js to render the table\nexport default function (table, options) {\n    return table.require('clusterize.js@0.17.6').then(Clusterize => clusterize(Clusterize, table, options));\n}\n\n\nfunction clusterize(Clusterize) {\n    var cl = new Clusterize();\n    return cl;\n}\n","export default function (table) {\n    return table;\n}\n","//\n//  bootstrap styling for tabular component\n//  ==========================================\n//\nimport assign from 'object-assign';\n\n\nconst defaults = {\n    over: true,\n    small: true,\n    bordered: true,\n    loadingClass: 'table-info',\n    loadingTextClass: 'text-center'\n};\n\n\nexport default function (table, options) {\n    var style = table.model.style;\n    style.$update(assign({}, defaults, options));\n\n    style.tableClass = 'table table-responsive';\n    if (style.striped) style.tableClass += ' table-striped';\n    if (style.over) style.tableClass += ' table-hover';\n    if (style.bordered) style.tableClass += ' table-bordered';\n    if (style.small) style.tableClass += ' table-sm';\n}\n","//\n//  Plugins for visuals and tabular\n//\n// visual plugins\nimport './menu';\nimport './data';\nimport './responsive';\nimport './title';\nimport './margin';\nimport './axis';\nimport './color';\nimport './legend';\n//\n//  This module depends on core but not on components\nimport clusterize from './clusterize';\nimport paginate from './paginate';\nimport bootstrap from './bootstrap';\n\n// plugins add functionalities to a d3 table\n// A plugin is a function accepting two parameters:\n//  * the table component\n//  * object with configuration parameters\nexport default {\n    bootstrap,\n    clusterize,\n    paginate\n};\n","import createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\n\n\nexport default createVisual('container', {\n\n    initialise () {\n        this.live = [];\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    draw() {\n        if (this.drawing) {\n            warn(`${this.toString()} already drawing`);\n            return this.drawing;\n        }\n        var self = this;\n        visuals.events.call('before-draw', undefined, self);\n        return Promise.all(this.live.map(visual => visual.redraw())).then(() => {\n            delete self.drawing;\n            visuals.events.call('after-draw', undefined, self);\n        });\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n    }\n});\n","import assign from 'object-assign';\nimport {isString, isObject} from 'd3-let';\n\nimport VisualContainer from '../core/container';\nimport warn from '../utils/warn';\n\n//\n//  vizComponent base prototype\n//  =============================\n//\n//  Some common properties and methods for all visualize components\n//\nexport const vizComponent = {\n    props: [\n        'schema',\t    // Schema is a collection of fields to display in the table\n        'datasource',\t// Data source\n        'plugins',      // list of string/objects\n\t],\n\n    render (props, attrs, el) {\n        var self = this,\n            inner = this.select(el).html();\n        //\n        // build\n        return this.getSchema(props.schema, schema => {\n            if (!isObject(schema)) schema = {};\n            return self.build(schema, inner, attrs);\n        });\n    },\n\n    // get the schema from the input schema property\n    getSchema (input, build) {\n        var parent = this.model.visual;\n\n        // allow to specify the schema as an entry of\n        // visuals object in the dashboard schema\n        if (parent && parent !== this.model && isString(input)) {\n            var schema = parent.getVisualSchema(input);\n            if (schema) input = schema;\n        }\n\n        if (isString(input)) {\n            return this.json(input).then(build).catch(err => {\n                warn(`Could not reach ${input}: ${err}`);\n            });\n        }\n        else return build(input);\n    },\n    //\n    // build the visual component has the schema available\n    build () {}\n};\n//\n//  Dashboard Component\n//  ========================\n//\n//  A collection of visual components arranged according\n//  to a custom layout.\n//\n//  * Dashboard visuals are independent of each other but\n//    interact via the data object\n//  * The Dashboard layout is given by the inner HTML elements\n//  * The configuration is obtained via the schema property which\n//    can be either:\n//      1) an object\n//      2) a url\nexport default assign({}, vizComponent, {\n\n    build (schema, inner, attrs) {\n        var model = this.model,\n            sel = this.createElement('div'),\n            root = model.root;\n        if (attrs.class) sel.attr('class', attrs.class);\n        if (!schema.visuals) schema.visuals = {};\n        model.visual = new VisualContainer(sel.node(), schema, model.visual);\n        if (!root.visualDashboard) root.visualDashboard = model.visual;\n        return this.mountInner(sel, inner);\n    }\n});\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\n\nimport {vizComponent} from './dashboard';\nimport Visual from '../core/visual';\n\n\n//\n//  Visual component\n//  ======================\n//\n//  An element containing a visualization\nexport default assign({}, vizComponent, {\n\n    build (schema) {\n        var sel = this.createElement('div'),\n            type = schema.type || 'visual',\n            model = this.model,\n            options = {},\n            layers;\n\n        if (type === 'visual') {\n            layers = pop(schema, 'layers');\n            options = schema;\n        }\n        else\n            options.visual = pop(schema, 'visual') || {};\n\n        model.visual = new Visual(sel.node(), options, model.visual);\n        if (type !== 'visual') model.visual.addVisual(schema);\n        else if (layers) {\n            layers.forEach(layer => model.visual.addVisual(layer));\n        }\n        return sel;\n    },\n\n    // once the element is mounted in the dom, draw the visual\n    mounted () {\n        this.model.visual.redraw();\n    }\n});\n","import {isoParse} from 'd3-time-format';\n\nimport locale from './locale';\n\n\nexport const parsers = {\n    date: isoParse,\n\n    string (value) {\n        return ''+value;\n    }\n};\n\n// formatters\nexport const formatters = {\n\n    number (value) {\n        return value;\n    },\n\n    date (value) {\n        return locale.formatDate(value);\n    },\n\n    boolean (value) {\n        return value;\n    }\n};\n","import {isObject, isArray} from 'd3-let';\n\nimport {formatters, parsers} from '../data/formatters';\n\n\n//\n// Create table columns from schema\nexport default function (schema) {\n    var columns = [];\n    let col;\n\n\tif (!schema) return columns;\n\n    if (isArray(schema))\n        schema = {properties: schema};\n\n    if (isObject(schema.properties)) {\n        for (let key in schema.properties) {\n            col = schema.properties[key];\n            if (isObject(col)) {\n                if (!col.name) col.name = key;\n                columns.push(col);\n            }\n        }\n    } else\n        Array.prototype.push.apply(columns, schema.properties);\n\n    return columns.map((col) => {\n        if (!isObject(col)) col = {name: col};\n        if (!col.label) col.label = col.name;\n        if (!col.hidden) col.hidden = false;\n        if (!col.$parse) col.$parse = parsers[col.type] || parsers.string;\n        if (!col.$html) col.$html = formatters[col.type] || $html;\n        return col;\n    });\n}\n\n\nfunction $html (value) {\n    return value;\n}\n","// import {timeout} from 'd3-timer';\nimport assign from 'object-assign';\nimport {isString, isArray, isPromise} from 'd3-let';\n\nimport warn from '../utils/warn';\nimport createColumns from '../utils/columns';\nimport tablePlugins from '../plugins/index';\nimport {vizComponent} from './dashboard';\n\n\nconst tableTpl = `<table d3-class=\"[style.tableClass, loadingData ? 'loading' : null]\">\n<thead d3-class=\"style.headerClass\">\n<tr d3-class=\"style.headerRowClass\">\n  <th d3-for=\"col in columns\"\n        d3-html=\"col.label\"\n        d3-if=\"!col.hidden\">\n  </th>\n</tr>\n<tr d3-if=\"loadingData\" d3-class=\"style.loadingClass\">\n    <td d3-attr-colspan=\"columns.length\">\n        <p d3-class=\"style.loadingTextClass\">loading data</p>\n    </td>\n</tr>\n</thead>\n<tbody></tbody>\n</table>`;\n\n\nexport default assign({}, vizComponent, {\n\n\tmodel () {\n        return {\n            header: true,            // show header\n            columns: [],             // table columns\n            loadingData: false,\n            style: {\n                tableClass: null,\n                headerClass: null,\n                headerRowClass: null,\n                loadingClass: 'loading',\n                loadingTextClass: null\n            }\n        };\n\t},\n\n\tbuild (schema) {\n\t\tvar self = this,\n            model = this.model,\n            plugins = schema.plugins || [];\n        // model.allData = crossfilter([]);\n        this.records = {};\n        this.data = [];\n        this.template = tableTpl;\n\n\t\tmodel.columns = createColumns(schema);\n\t\t// if (data.dataurl) model.dataLoader = new DataLoader(data.dataurl);\n\n        if (!isArray(plugins)) {\n            warn('plugins should be an array');\n        } else {\n            var promises = [];\n            let promise;\n            plugins.forEach(plugin => {\n                if (isString(plugin)) plugin = {name: plugin};\n                if (!tablePlugins[plugin.name])\n                    warn(`Unknown table plugin ${plugin.name}`);\n                else {\n                    promise = tablePlugins[plugin.name](self, plugin);\n                    if (isPromise(promise)) promises.push(promise);\n                }\n            });\n            if (promises.length)\n                 return Promise.all(promises).then(() => self.viewElement(self.template));\n        }\n\n\t\treturn this.viewElement(this.template);\n\t},\n\n\tmounted () {\n        var vm = this,\n            model = this.model;\n\t\tif (model.dataLoader) {\n\t\t\tvar p = model.dataLoader.load(model.columns);\n            if (p) {\n                model.loadingData = true;\n                p.then((data) => {\n                    // var allData = model.allData;\n                    model.loadingData = false;\n                    addData(vm, data);\n                }, (err) => {\n                    model.loadingData = false;\n                    return err;\n                });\n            }\n        }\n\t}\n});\n\n// new data to include in the table\nfunction addData (vm, newData) {\n    var records = vm.records,\n        data = vm.data,\n        model = vm.model,\n        delayData = newData;\n\n    let record, value;\n\n    newData = delayData.splice(0, 100);\n\n    newData.forEach((d) => {\n        if (d.id) {\n            record = d.id ? records[d.id] : null;\n            if (record)\n                d = assign(record, d);\n            else {\n                data.push(d);\n                records[d.id] = d;\n            }\n        } else\n            data.push(d);\n        model.columns.forEach((col) => {\n            d[col.name] = col.$parse(d[col.name]);\n        });\n    });\n\n    //if (delayData.length)\n    //    timeout(() => addData(vm, delayData));\n\n    var rows = vm.sel.select('tbody')\n                .selectAll('tr').data(data);\n\n    rows\n        .enter()\n            .append('tr')\n            .attr('scope', 'row')\n            .selectAll('td')\n            .data(model.columns)\n            .enter()\n                .append('td')\n                .style('display', (col) => {\n                    return col.hidden ? 'none' : null;\n                })\n                .html(function (col) {\n                    record = this.parentNode.__data__;\n                    value = record[col.name];\n                    return col.$html(value === undefined ? '' : value);\n                });\n}\n","//\n//  d3-view components\n//  ======================\n//\n//  d3-view plugin for visualization components\n//\nimport tabularPlugins from '../plugins/index';\nimport dashboard from './dashboard';\nimport visual from './visual';\nimport tabular from './tabular';\n\n\n// Visual components plugin\nexport default {\n    tabularPlugins,\n\n    install (vm) {\n        vm.addComponent('dashboard', dashboard);\n        vm.addComponent('visual', visual);\n        vm.addComponent('tabular', tabular);\n    }\n\n};\n","export default function (x) {\n    return function constant() {\n        return x;\n    };\n}\n","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function (d) {\n    return d;\n}\n","import constant from \"../utils/constant\";\nimport descending from \"../utils/descending\";\nimport identity from \"../utils/identity\";\n\n//\n//  Pyramid Shape generator\n//  ============================\nexport default function () {\n    var value = identity,\n        pad = constant(0),\n        height = 1,\n        base = 1;\n\n    function pyramid (data) {\n        let i, j, k, points, fraction,\n            hi, x, y, v0, ph, pj;\n        var n = data.length,\n            r = 0.5*base/height,\n            polygons = new Array(n),\n            index = new Array(n);\n\n        for (i=0; i<n; ++i) {\n            polygons[index[i] = i] = +value(data[i], i, data);\n        }\n\n        // Sort the polygons\n        index.sort((i, j) => {return descending(polygons[i], polygons[j]);});\n\n        // Compute the polygons! They are stored in the original data's order.\n        v0 = polygons[index[0]];\n        hi = null;\n\n        for (i=n-1; i>=0; --i) {\n            points = [];\n            if (hi === null)\n                points.push([0, 0]);\n            else {\n                y = hi + ph;\n                x = y*r;\n                points.push([x, y]);\n                points.push([-x, y]);\n            }\n            j = index[i];\n            k = n - i - 1;\n            fraction = polygons[j]/v0;\n            pj = Math.sqrt(fraction);\n            hi = height*pj;\n            ph = i ? pad(pj, k) : 0;\n            y = hi - ph;\n            x = y*r;\n            points.push([-x, y]);\n            points.push([x, y]);\n            polygons[j] = {\n                index: k,\n                value: polygons[j],\n                fraction: fraction,\n                points: points,\n                data: data[j]\n            };\n        }\n        return polygons;\n    }\n\n    pyramid.value = function(_) {\n        return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pyramid) : value;\n    };\n\n    pyramid.base = function (_) {\n        return arguments.length ? (base = _, pyramid) : base;\n    };\n\n    pyramid.height = function (_) {\n        return arguments.length ? (height = _, pyramid) : height;\n    };\n\n    pyramid.pad = function(_) {\n        return arguments.length ? (pad = typeof _ === \"function\" ? _ : constant(+_), pyramid) : pad;\n    };\n\n    return pyramid;\n}\n","import * as d3_shape from 'd3-shape';\nimport {extent} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport warn from '../utils/warn';\nimport accessor from '../utils/accessor';\nimport camelFunction from '../utils/camelfunction';\n\n\nexport const lineDrawing = {\n\n    // get information about\n    //  * data []\n    //  * range {x: [min, max], y: [min, max]}\n    //  * meta []\n    //      * index\n    //      * label\n    //      * range\n    //\n    getDataInfo (frame) {\n        var model = this.getModel(),\n            range = this.newRange(),\n            nseries = frame.series.size(),\n            data = nseries ? frame.series.values() : [frame.data],\n            keys = nseries ? frame.series.keys() : [model.y],\n            x = accessor(model.x),\n            y = accessor(model.y),\n            self = this;\n        return {\n            data: data,\n            range: range,\n            meta: keys.map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            })\n        };\n    },\n\n    fill (data) {\n        var colors = this.colors(data.length);\n\n        function fill (d, index) {\n            return colors[index];\n        }\n\n        fill.colors = colors;\n\n        return fill;\n    },\n\n    curve (name) {\n        var obj = camelFunction(d3_shape, 'curve', name, true);\n        if (!obj) {\n            warn(`Could not locate curve type \"${name}\"`);\n            obj = camelFunction(d3_shape, 'curve', 'cardinalOpen', true);\n        }\n        return obj;\n    },\n\n    range (data, x, y, agg) {\n        var range = {\n            x: extent(data, x),\n            y: extent(data, y)\n        };\n        if (agg) {\n            Array.prototype.push.apply(agg.x, range.x);\n            Array.prototype.push.apply(agg.y, range.y);\n        }\n    },\n\n    newRange () {\n        return {\n            x: [],\n            y: []\n        };\n    },\n\n    x (box, ranges) {\n        var model = this.getModel(),\n            scale = this.getScale(model.scaleX)\n                .domain(extent(ranges))\n                .range([0, box.innerWidth]);\n        return function (d) {\n            return scale(d[model.x]);\n        };\n    },\n\n    y (box, ranges, value) {\n        var model = this.getModel(),\n            scale = this.getScale(model.scaleY)\n                .domain(extent(ranges))\n                .range([box.innerHeight, 0]);\n        if (arguments.length === 2) value = d => d[model.y];\n        return function (d) {\n            return scale(value(d));\n        };\n    }\n};\n\n//\n//  Line Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('linechart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'cardinalOpen',\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear'\n    },\n\n    doDraw (frame) {\n        var self = this,\n            range = this.newRange(),\n            model = this.getModel(),\n            color = this.getModel('color'),\n            x = accessor(model.x),\n            y = accessor(model.y),\n            data = frame.series.values(),\n            meta = frame.series.keys().map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            }),\n            box = this.boundingBox(),\n            paper = this.paper(),\n            lines = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.line').data(data),\n            strokeColor = this.fill(meta),\n            //merge = paper.transition('update'),\n            line = d3_shape.line()\n                .x(this.x(box, range.x))\n                .y(this.y(box, range.y))\n                .curve(this.curve(model.curve));\n\n        lines\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', model.lineWidth)\n            .merge(lines)\n                //.transition(merge)\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', line);\n\n        lines\n            .exit()\n            .remove();\n    }\n});\n","import {stack} from 'd3-shape';\nimport {max} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport {lineDrawing} from './line';\n//\n//  Bar Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('barchart', lineDrawing, {\n\n    options: {\n        orientation: 'vertical',\n        // stack multiple y series?\n        sortby: null, // specify \"x\" or \"y\"\n        stack: true,\n        normalize: false,\n        scale: 'linear',\n        padding: 0.1,\n        x: 'x',\n        y: 'y',\n        groupby: null,  // group data by a field for staked or grouped bar chart\n        //\n        // legend & tooltip\n        valueformat: '.1f',\n        legendType: 'color',\n        legendLabel: 'label'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            data = frame.data,\n            box = this.boundingBox(),\n            paper = this.paper().size(box),\n            bars = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.group'),\n            x = model.x,\n            y = model.y,\n            groupby = model.groupby,\n            sx = this.getScale('band'),\n            sy = this.getScale(model.scale),\n            sz = this.getScale('ordinal'),\n            stacked = false,\n            width = null,\n            height = null,\n            xrect = x0,\n            yrect = y0,\n            yi = 1,\n            groups,\n            axis;\n\n        if (model.orientation === 'vertical') {\n            sx.rangeRound([0, box.innerWidth]).paddingInner(model.padding);\n            sy.rangeRound([box.innerHeight, 0]);\n            width = sx.bandwidth;\n            height = bardim;\n        } else {\n            sx.rangeRound([0, box.innerHeight]).paddingInner(model.padding);\n            sy.rangeRound([0, box.innerWidth]);\n            yi = 0;\n            width = bardim;\n            height = sx.bandwidth;\n            xrect = y0;\n            yrect = x0;\n        }\n\n        if (groupby) {\n            groups = frame.dimension(groupby).group().top(Infinity).map(g => g['key']);\n            if (groups.length <= 1) groups = null;\n        }\n\n        if (groups) {\n            frame = frame.pivot(x, groupby, y);\n            if (model.sortby === 'y') frame = frame.sortby('total');\n            data = frame.data;\n            sz.domain(groups).range(this.colors(groups.length));\n            if (model.stack) {\n                if (model.normalize)\n                    this.normalize(frame.data);\n                stacked = true;\n            }\n        }\n\n        // set domain for the labels\n        sx.domain(data.map(d => d[x]));\n\n        if (stacked) {\n            sy.domain([0, max(data, d => d.total)]).nice();\n            data = stack().keys(groups)(data);\n            var rects = bars.data(data)\n                            .enter()\n                                .append('g')\n                                .classed('group', true)\n                                .attr('fill', d => sz(d.key))\n                            .merge(bars)\n                                .attr('fill', d => sz(d.key))\n                                .attr('stroke', color.stroke)\n                                .attr('stroke-opacity', color.strokeOpacity)\n                                .attr('fill-opacity', color.fillOpacity)\n                                .selectAll('rect')\n                                .data(d => d);\n            rects.enter()\n                .append('rect')\n                .merge(rects)\n                    .transition()\n                    .attr('x', xrect)\n                    .attr('y', yrect)\n                    .attr('height', height)\n                    .attr('width', width);\n\n        } else {\n            var x1 = self.getScale('band').padding(0.5*model.padding);\n            return x1;\n        }\n\n        if (model.orientation === 'vertical') {\n            axis = this.axis('bottom', sx).tickSizeOuter(0);\n            paper.group('axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top+box.innerHeight))\n                .call(axis);\n        } else {\n            axis = this.axis('left', sx).tickSizeOuter(0);\n            paper.group('axis')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .call(axis);\n        }\n\n        if (model.legendType && groups) {\n            this.legend({scale: sz}, box);\n        }\n\n        function bardim (d) {\n            return sy(d[1-yi]) - sy(d[yi]);\n        }\n\n        function x0 (d) {\n            return sx(d.data[x]);\n        }\n\n        function y0 (d) {\n            return sy(d[yi]);\n        }\n    }\n});\n","import {ascending, range, extent, quantile} from 'd3-array';\nimport {scaleLinear} from 'd3-scale';\n\nimport createChart from '../core/chart';\nimport accessor from '../utils/accessor';\nimport constant from '../utils/constant';\nimport {lineDrawing} from './line';\n\n//\n//  Box Chart\n//  =============\n//\n//  A box-and-whisker plot uses simple glyphs that summarize a quantitative\n//  distribution with five standard statistics: the smallest value, lower\n//  quartile, median, upper quartile, and largest value.\n//  This summary approach allows the viewer to easily recognize\n//  differences between distributions.\n//\nexport default createChart('boxchart', lineDrawing, {\n\n    options: {\n        orientation: 'vertical',\n        lineWidth: 1,\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear',\n        // area with vertical gradient to zero opacity\n        gradient: true\n    },\n\n    doDraw (frame) {\n        var self = this,\n            model = this.getModel(),\n            //color = this.getModel('color'),\n            info = self.getDataInfo(frame),\n            box = this.boundingBox(),\n            chart = boxplot(),\n            paper = this.paper().size(box),\n            x = accessor(model.x),\n            //y = accessor(model.y),\n            boxes = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.box')\n                .data(info.data),\n            //fill = this.fill(info.meta),\n            groups = frame.groupby(model.x),\n            sx = this.getScale(model.scaleX)\n                .domain(extent(frame.data, x)),\n            //sy = this.getScale(model.scaleY)\n            //    .domain(extent(frame.data, y)),\n            width = box.innerWidth;\n\n        if (model.orientation === 'vertical') {\n            sx.range([0, box.innerWidth]);\n        } else {\n            sx.range([0, box.innerHeight]);\n            width = this.innerHeight;\n        }\n        chart.width(this.dim(model.width, width, width/groups.length - 2));\n\n        boxes\n            .enter()\n                .append('g')\n                    .classed('box', true)\n                    .call(chart);\n    }\n});\n\n\nfunction boxplot () {\n    var width = 1,\n        height = 1,\n        duration = 0,\n        domain = null,\n        value = Number,\n        whiskers = boxWhiskers,\n        quartiles = boxQuartiles,\n        tickFormat = null;\n\n    // For each small multiple\n    function box (g) {\n        g.each((d, i) => {\n            d = d.map(value).sort(ascending);\n\n            const\n                n = d.length,\n                min = d[0],\n                max = d[n - 1],\n                // Compute quartiles. Must return exactly 3 elements.\n                quartileData = d.quartiles = quartiles(d),\n                // Compute whiskers. Must return exactly 2 elements, or null.\n                whiskerIndices = whiskers && whiskers(d),\n                whiskerData = whiskerIndices && whiskerIndices.map(i => d[i]),\n                // Compute outliers. If no whiskers are specified, all data are \"outliers\".\n                // We compute the outliers as indices, so that we can join across transitions!\n                outlierIndices = whiskerIndices\n                    ? range(0, whiskerIndices[0]).concat(range(whiskerIndices[1] + 1, n))\n                    : range(n),\n                // Compute the new x-scale.\n                x1 = scaleLinear()\n                    .domain(domain && domain.call(this, d, i) || [min, max])\n                    .range([height, 0]),\n                // Retrieve the old x-scale, if this is an update.\n                x0 = this.__chart__ || scaleLinear()\n                  .domain([0, Infinity])\n                  .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n            // Note: the box, median, and box tick elements are fixed in number,\n            // so we only have to handle enter and update. In contrast, the outliers\n            // and other elements are variable, so we need to exit them! Variable\n            // elements also fade in and out.\n\n            // Update center line: the vertical line spanning the whiskers.\n            var center = g.selectAll(\"line.center\")\n              .data(whiskerData ? [whiskerData] : []);\n\n            center.enter().insert(\"line\", \"rect\")\n              .attr(\"class\", \"center\")\n              .attr(\"x1\", width / 2)\n              .attr(\"y1\", function(d) { return x0(d[0]); })\n              .attr(\"x2\", width / 2)\n              .attr(\"y2\", function(d) { return x0(d[1]); })\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .style(\"opacity\", 1)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); });\n\n            center.transition()\n              .duration(duration)\n              .style(\"opacity\", 1)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); });\n\n            center.exit().transition()\n              .duration(duration)\n              .style(\"opacity\", 1e-6)\n              .attr(\"y1\", function(d) { return x1(d[0]); })\n              .attr(\"y2\", function(d) { return x1(d[1]); })\n              .remove();\n\n            // Update innerquartile box.\n            var box = g.selectAll(\"rect.box\")\n              .data([quartileData]);\n\n            box.enter().append(\"rect\")\n              .attr(\"class\", \"box\")\n              .attr(\"x\", 0)\n              .attr(\"y\", function(d) { return x0(d[2]); })\n              .attr(\"width\", width)\n              .attr(\"height\", function(d) { return x0(d[0]) - x0(d[2]); })\n            .transition()\n              .duration(duration)\n              .attr(\"y\", function(d) { return x1(d[2]); })\n              .attr(\"height\", function(d) { return x1(d[0]) - x1(d[2]); });\n\n            box.transition()\n              .duration(duration)\n              .attr(\"y\", function(d) { return x1(d[2]); })\n              .attr(\"height\", function(d) { return x1(d[0]) - x1(d[2]); });\n\n            // Update median line.\n            var medianLine = g.selectAll(\"line.median\")\n              .data([quartileData[1]]);\n\n            medianLine.enter().append(\"line\")\n              .attr(\"class\", \"median\")\n              .attr(\"x1\", 0)\n              .attr(\"y1\", x0)\n              .attr(\"x2\", width)\n              .attr(\"y2\", x0)\n            .transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1);\n\n            medianLine.transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1);\n\n            // Update whiskers.\n            var whisker = g.selectAll(\"line.whisker\")\n              .data(whiskerData || []);\n\n            whisker.enter().insert(\"line\", \"circle, text\")\n              .attr(\"class\", \"whisker\")\n              .attr(\"x1\", 0)\n              .attr(\"y1\", x0)\n              .attr(\"x2\", width)\n              .attr(\"y2\", x0)\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1);\n\n            whisker.transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1);\n\n            whisker.exit().transition()\n              .duration(duration)\n              .attr(\"y1\", x1)\n              .attr(\"y2\", x1)\n              .style(\"opacity\", 1e-6)\n              .remove();\n\n            // Update outliers.\n            var outlier = g.selectAll(\"circle.outlier\")\n              .data(outlierIndices, Number);\n\n            outlier.enter().insert(\"circle\", \"text\")\n              .attr(\"class\", \"outlier\")\n              .attr(\"r\", 5)\n              .attr(\"cx\", width / 2)\n              .attr(\"cy\", function(i) { return x0(d[i]); })\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1);\n\n            outlier.transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1);\n\n            outlier.exit().transition()\n              .duration(duration)\n              .attr(\"cy\", function(i) { return x1(d[i]); })\n              .style(\"opacity\", 1e-6)\n              .remove();\n\n            // Compute the tick format.\n            var format = tickFormat || x1.tickFormat(8);\n\n            // Update box ticks.\n            var boxTick = g.selectAll(\"text.box\")\n              .data(quartileData);\n\n            boxTick.enter().append(\"text\")\n              .attr(\"class\", \"box\")\n              .attr(\"dy\", \".3em\")\n              .attr(\"dx\", (d, i) => i & 1 ? 6 : -6)\n              .attr(\"x\", (d, i) => i & 1 ? width : 0)\n              .attr(\"y\", x0)\n              .attr(\"text-anchor\", function(d, i) { return i & 1 ? \"start\" : \"end\"; })\n              .text(format)\n            .transition()\n              .duration(duration)\n              .attr(\"y\", x1);\n\n            boxTick.transition()\n              .duration(duration)\n              .text(format)\n              .attr(\"y\", x1);\n\n            // Update whisker ticks. These are handled separately from the box\n            // ticks because they may or may not exist, and we want don't want\n            // to join box ticks pre-transition with whisker ticks post-.\n            var whiskerTick = g.selectAll(\"text.whisker\")\n              .data(whiskerData || []);\n\n            whiskerTick.enter().append(\"text\")\n              .attr(\"class\", \"whisker\")\n              .attr(\"dy\", \".3em\")\n              .attr(\"dx\", 6)\n              .attr(\"x\", width)\n              .attr(\"y\", x0)\n              .text(format)\n              .style(\"opacity\", 1e-6)\n            .transition()\n              .duration(duration)\n              .attr(\"y\", x1)\n              .style(\"opacity\", 1);\n\n            whiskerTick.transition()\n              .duration(duration)\n              .text(format)\n              .attr(\"y\", x1)\n              .style(\"opacity\", 1);\n\n            whiskerTick\n                .exit()\n                .transition()\n                .duration(duration)\n                .attr(\"y\", x1)\n                .style(\"opacity\", 1e-6)\n                .remove();\n        });\n    }\n\n    box.width = function(x) {\n        if (!arguments.length) return width;\n        width = x;\n        return box;\n    };\n\n    box.height = function(x) {\n        if (!arguments.length) return height;\n        height = x;\n        return box;\n    };\n\n    box.tickFormat = function(x) {\n        if (!arguments.length) return tickFormat;\n        tickFormat = x;\n        return box;\n    };\n\n    box.duration = function(x) {\n        if (!arguments.length) return duration;\n        duration = x;\n        return box;\n    };\n\n    box.domain = function(x) {\n        if (!arguments.length) return domain;\n        domain = x === null ? x : constant(x);\n        return box;\n    };\n\n    box.value = function(x) {\n        if (!arguments.length) return value;\n        value = x;\n        return box;\n    };\n\n    box.whiskers = function(x) {\n        if (!arguments.length) return whiskers;\n        whiskers = x;\n        return box;\n    };\n\n    box.quartiles = function(x) {\n        if (!arguments.length) return quartiles;\n        quartiles = x;\n        return box;\n    };\n\n    return box;\n}\n\n\nfunction boxWhiskers (d) {\n    return [0, d.length - 1];\n}\n\n\nfunction boxQuartiles (d) {\n    return [\n        quantile(d, 0.25),\n        quantile(d, 0.5),\n        quantile(d, 0.75)\n    ];\n}\n","import {area, line} from 'd3-shape';\n\nimport createChart from '../core/chart';\nimport constant from '../utils/constant';\nimport {lineDrawing} from './line';\n\n//\n//  Area Chart\n//  =============\nexport default createChart('areachart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'cardinalOpen',\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear',\n        // area with vertical gradient to zero opacity\n        gradient: true\n    },\n\n    doDraw (frame) {\n        var self = this,\n            model = this.getModel(),\n            color = this.getModel('color'),\n            info = self.getDataInfo(frame),\n            box = this.boundingBox(),\n            paper = this.paper().size(box),\n            areas = paper.group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.area').data(info.data),\n            lines = paper.group('lines')\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.line').data(info.data),\n            fill = this.fill(info.meta),\n            curve = this.curve(model.curve);\n\n        // TODO: fix this hack\n        info.range.y[0] = 0;\n        var line_ = line()\n                .x(this.x(box, info.range.x))\n                .y(this.y(box, info.range.y))\n                .curve(curve),\n            area_ = area()\n                .x(this.x(box, info.range.x))\n                .y1(this.y(box, info.range.y))\n                .y0(this.y(box, info.range.y, constant(0)))\n                .curve(curve);\n\n        lines\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', line_)\n            .merge(lines)\n                .transition()\n                .attr('d', line_)\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('stroke-width', model.lineWidth);\n\n        lines\n            .exit()\n            .remove();\n\n        areas\n            .enter()\n                .append('path')\n                .attr('class', 'area')\n                .attr('fill', fill)\n                .attr('stroke', 'none')\n                .attr('stroke-width', 0)\n                .attr('d', area_)\n            .merge(areas)\n                .transition()\n                .attr('d', area_)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        areas\n            .exit()\n            .remove();\n\n        // var axis = this.axis('bottom', sx);\n    }\n});\n","import {select} from 'd3-selection';\n\n//Text wrapping code adapted from Mike Bostock\nexport default function (text, width) {\n\n    text.each(function() {\n        var text = select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineHeight = 1.2,\n            dy = parseFloat(text.attr(\"dy\")) || 0,\n            tspan = text.text(null)\n                        .append(\"tspan\")\n                        .attr(\"x\", 0)\n                        .attr(\"dy\", dy + \"em\");\n\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\")\n                            .attr(\"x\", 0)\n                            .attr(\"dy\", lineHeight + dy + \"em\").text(word);\n            }\n        }\n    });\n}\n","import {pie, arc} from 'd3-shape';\nimport {scaleOrdinal} from 'd3-scale';\nimport {viewExpression} from 'd3-view';\nimport {format} from 'd3-format';\n\nimport createChart from '../core/chart';\nimport {sizeValue} from '../utils/size';\nimport textWrap from '../utils/text-wrapping';\n\n\nconst pi = Math.PI;\nconst rad = pi/180;\n\n\nexport const proportional = {\n\n    fill (data) {\n        var colors = this.colors(data.length);\n\n        function fill (d, idx) {\n            return colors[idx];\n        }\n\n        fill.colors = colors;\n\n        return fill;\n    },\n\n    proportionalData (frame, field) {\n        return frame.dimension(field).top(Infinity);\n    },\n\n    total (field) {\n        var total = 0;\n\n        function value (d) {\n            total += d[field];\n            return d[field];\n        }\n\n        value.total = () => total;\n        return value;\n    }\n};\n\n//\n//  Pie Chart\n//  =============\n//\nexport default createChart('piechart', proportional, {\n\n    options: {\n        // The data values from this field will be encoded as angular spans.\n        // If omitted, all pie slices will have equal spans\n        field: 'data',\n        label: 'label',\n        startAngle: 0,\n        endAngle: 360,\n        sort: false,\n        innerRadius: 0,\n        padAngle: 0,\n        cornerRadius: 0,\n        lineWidth: 1,\n        //\n        fractionFormat: '.1%',\n        legendType: 'color',\n        legendLabel: \"label + ' - ' + format(fraction)\",\n        //\n        // display information in the center of the pie chart\n        // Should be used with innerRadius greater than 0\n        center: null,\n        centerOpacity: 1,\n        centerFontSize: '7%'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            field = model.field,\n            box = this.boundingBox(),\n            outerRadius = Math.min(box.innerWidth, box.innerHeight)/2,\n            innerRadius = sizeValue(model.innerRadius, outerRadius),\n            total = this.total(field),\n            angles = pie()\n                .padAngle(rad*model.padAngle)\n                .startAngle(rad*model.startAngle)\n                .endAngle(rad*model.endAngle)\n                .value(total),\n            arcs = arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius)\n                .cornerRadius(model.cornerRadius),\n            paper = this.paper().size(box),\n            //update = paper.transition('update'),\n            data = angles(this.proportionalData(frame, field)),\n            fill = this.fill(data),\n            slices = paper.group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                .selectAll('.slice').data(data);\n\n        slices\n            .enter()\n                .append('path')\n                .attr('class', 'slice')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n            .merge(slices)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', arcs)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        slices.exit().transition().remove();\n\n        if (model.center) {\n            var text = this.dataStore.eval(model.center, {total: total.total()});\n            if (text) {\n                var size = this.dim(model.centerFontSize, box.innerWidth),\n                    center = paper.group('center-notation')\n                        .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                        .selectAll('.info').data([text]);\n                center\n                    .enter()\n                        .append('text')\n                        .attr('class', 'info')\n                        .attr(\"text-anchor\", \"middle\")\n                        .attr(\"alignment-baseline\", \"middle\")\n                        .style(\"font-size\", `${size}px`)\n                        .style('fill-opacity', 0)\n                    .merge(center)\n                        .text(text)\n                        .style('fill-opacity', model.centerOpacity)\n                        .call(textWrap, 1.5*(innerRadius || outerRadius));\n\n            }\n        }\n        if (!model.legendType) return;\n        total = total.total();\n        var expr = viewExpression(model.legendLabel),\n            fmt = format(model.fractionFormat),\n            labels = data.map((d, idx) => {\n                return expr.eval({\n                    d: d,\n                    value: d.value,\n                    format: fmt,\n                    total: total,\n                    fraction: d.value/total,\n                    label: d.data[model.label] || idx\n                });\n            });\n        this.legend({\n            scale: scaleOrdinal().domain(labels).range(fill.colors)\n        }, box);\n    }\n});\n","//\n//  Custom Symbol type\n//  =====================\n//\n//  Draw a polygon given an array of points\n//  This can be used as type in a d3-shape symbol\nexport default function (points) {\n\n    return {\n        draw (context) {\n            points.forEach((point, idx) => {\n                if (!idx) context.moveTo(point[0], point[1]);\n                else context.lineTo(point[0], point[1]);\n            });\n            context.closePath();\n        }\n    };\n}\n","import {symbol} from 'd3-shape';\nimport {viewExpression} from 'd3-view';\n\nimport createChart from '../core/chart';\nimport pyramid from '../transforms/pyramid';\nimport polygon from '../utils/polygon';\nimport {proportional} from './pie';\n\n\nexport default createChart('pyramidchart', proportional, {\n\n    options: {\n        field: 'data',\n        label: 'label',\n        pad: 0,\n        lineWidth: 1,\n        inverted: false,\n        legendType: 'color',\n        invereted: false,\n        legendLabel: \"label + ' - ' + format('.1%', fraction)\"\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            field = model.field,\n            color = this.getModel('color'),\n            box = this.boundingBox(),\n            pad = this.dim(model.pad, Math.min(box.innerWidth, box.innerHeight)),\n            polygons = pyramid()\n                .base(box.innerWidth)\n                .height(box.innerHeight)\n                .pad(pad)\n                .value(d => d[field]),\n            data = frame.new(polygons(this.proportionalData(frame, field))).dimension('fraction').bottom(Infinity),\n            marks = symbol().type(d => polygon(d.points)).size(1),\n            fill = this.fill(data),\n            paper = this.paper(),\n            segments = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top))\n                .selectAll('.segment').data(data);\n\n        segments\n            .enter()\n                .append('path')\n                .attr('class', 'segment')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', marks)\n            .merge(segments)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', marks)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        segments.exit().remove();\n\n        if (!model.legendType) return;\n        var expr = viewExpression(model.legendLabel),\n            self = this,\n            labels = data.map((d, idx) => {\n                return expr.eval(self.getContext({\n                    d: d,\n                    value: d.value,\n                    fraction: d.fraction,\n                    label: d.data[model.label] || idx\n                }));\n            });\n        this.legend({\n            scale: this.getScale('ordinal').domain(labels).range(fill.colors)\n        }, box);\n    }\n\n});\n","import createChart from '../core/chart';\n\n//\n//  Treemap\n//  =============\n//\nexport default createChart('treemap', {\n    requires: ['d3-treemap']\n\n});\n","import createChart from '../core/chart';\n\n\nexport default createChart('text', {\n\n    options: {\n        scale: 'linear',\n        field: 'data',\n        label: 'label'\n    },\n\n    doDraw () {\n    }\n});\n","//\nexport {version as visualizeVersion} from './package.json';\n//\nexport {default as randomPath} from './src/utils/randompath';\n//\n// Data layer\nexport {default as DataStore} from './src/data/store';\nexport {default as dataSources} from './src/data/sources';\nexport {default as dataLocale} from './src/data/locale';\n\n//\n//  Core API\nexport {visuals} from './src/core/base';\nexport {default as createChart} from './src/core/chart';\nexport {default as createPaper, Svg} from './src/core/paper';\nexport {default as visualTransforms} from './src/transforms/index';\n//\n//  Components\nexport {default as visualComponents} from './src/components/index';\n\n// utilities\nexport {colorScales} from './src/plugins/color';\nexport {default as pyramid} from './src/transforms/pyramid';\n//\n//  Charts\n//  =========\n//\n//  Last import, important!\nexport {default as Visual} from './src/core/visual';\nexport {default as BarChart} from './src/charts/bar';\nexport {default as BoxChart} from './src/charts/box';\nexport {default as LineChart} from './src/charts/line';\nexport {default as AreaChart} from './src/charts/area';\nexport {default as PieChart} from './src/charts/pie';\nexport {default as PyramidChart} from './src/charts/pyramid';\nexport {default as Treemap} from './src/charts/treemap';\nexport {default as TextChart} from './src/charts/text';\n"],"names":["defaults","size","options","assign","t","range","S","sigma","drift","data","x","y","norm","randomNormal","dx","i","length","config","_data","isArray","isObject","resolvedPromise","asFrame","prefix","msg","logger","warn","schemes","value","isString","indexOf","split","isUrl","url","fetch","viewProviders","self","then","parse","response","ct","headers","get","text","csvParse","json","source","store","frame","Promise","all","map","getData","frames","mergeFrames","expression","viewExpression","model","eval","field","d","DataFrame","serie","defineProperties","dimensions","series","prototype","_inner","cf","crossfilter","name","keepExisting","arguments","current","dispose","accessor","dimension","top","new","Infinity","key","total","group","reduce","pivoter","Object","m","pk","pv","o","record","mapper","transform","schema","jsonValidator","dummyValidator","type","transformFactory","valid","validate","logError","doTransform","expr","index","safeEval","push","a","Array","fill","operations","scalar_operations","agg","v","Math","max","min","count","array","undefined","fields","ops","as","groupby","countAll","fillArray","aggregate","op","forEach","entries","oo","entry","query","dim","q","filterAll","filter","sortby","timeseries","groups","newframe","tmp","filterExact","set","globalOptions","dateFormat","converters","utcParse","parseFloat","converter","mapfields","mappers","each","DEFAULT_METHOD","DEFAULT_PERIOD","DEFAULT_ALPHA","MAXALPHA","method","fieldto","s","period","cumulate","buffer","splice","alpha","minmax","applyTransforms","transforms","ts","dataEvents","dispatch","dataSourcePrototype","transformStore","constructor","DataSource","sources","values","cfg","getConfig","initDataSource","dataSource","dataName","pop","initialise","addTransforms","call","dataSources","add","remote","composite","DataStore","dataCount","create","p","remove","ds","cachedFrame","Error","cache","context","ctx","$child","def","timeFormat","symbol","locales","source1","source2","load","number","locale","time","formatDate","date","formatDateTime","dateTime","n","round","pow","WIDTH","HEIGHT","sizeValue","getSize","element","width","height","getWidth","widthElement","getWidthElement","getHeight","heightElement","getHeightElement","el","getParentElementRect","elementWidth","elementHeight","w","getBoundingClientRect","select","left","padding","style","right","bottom","parent","node","tagName","parentNode","substring","clone","CONTAINERS","visuals","visualPrototype","drawing","event","toString","events","on","redraw","draw","visualType","uid","visualParent","getModel","$new","$update","$on","refSize","minSize","maxSize","container","idx","live","getVisualSchema","viewBase","proto","opts","Visual","viewModel","types","createVisual","append","classed","sel","layers","drawCount","__visual__","fit","clear","visual","err","VisualClass","resize","currentSize","viewDebug","paper","inBrowser","observer","MutationObserver","visualManager","observe","document","documentElement","records","nodes","removedNodes","nodeName","selectAll","destroy","viz","objectOnly","toUpperCase","protos","vizPrototype","chartPrototype","apply","_paper","paperType","render","PaperType","papers","isFunction","xt","yt","camelFunction","d3_scale","doDraw","displayError","createPaper","Paper","paperPrototype","box","attr","cname","enter","Svg","svg","menu","display","insert","refreshMenu","minHeight","maxHeight","formats","specifier","fmt","format","dataContext","cachedFormat","dataStore","getContext","isViz","setupLayer","setupVisual","addSources","layer","$set","resizeDelay","viewDebounce","window","title","menuTitle","maxFontSize","fontSize","minFontSize","html","px","KEYS","LEFTRIGHT","margin","boundingBox","calculate","margins","axisOrientation","axisTop","axisBottom","axisLeft","axisRight","xAxis","axis","orientation","scale","colorScales","color","scaleSequential","interpolateViridis","interpolateInferno","interpolateMagma","interpolatePlasma","interpolateWarm","interpolateCool","interpolateRainbow","interpolateCubehelixDefault","colors","scaleDef","minPoints","scaleMinPoints","offset","scaleOffset","npoints","points","domain","reversed","linearGradient","gid","viewUid","defs","grad","legend","legends","legendColor","legendSize","legendSymbol","vizModel","lgModel","legendType","orient","titleWidth","titleMinWidth","titleMaxWidth","g","bb","locations","location","getBBox","translate","topLeft","topRight","bottomLeft","bottomRight","innerWidth","offsetY","offsetX","table","require","clusterize","Clusterize","cl","tableClass","striped","over","bordered","small","vizComponent","props","attrs","inner","getSchema","build","input","catch","createElement","root","class","VisualContainer","visualDashboard","mountInner","addVisual","parsers","isoParse","formatters","columns","col","properties","label","hidden","$parse","string","$html","tableTpl","plugins","template","createColumns","promises","promise","plugin","tablePlugins","isPromise","viewElement","vm","dataLoader","loadingData","addData","newData","delayData","id","rows","__data__","addComponent","dashboard","tabular","constant","b","NaN","identity","pad","base","pyramid","j","k","fraction","hi","v0","ph","pj","r","polygons","sort","descending","sqrt","_","lineDrawing","newRange","nseries","keys","obj","d3_shape","extent","ranges","getScale","scaleX","scaleY","innerHeight","createChart","meta","lines","strokeColor","curve","lineWidth","merge","strokeOpacity","line","exit","bars","sx","sy","sz","stacked","xrect","x0","yrect","y0","yi","rangeRound","paddingInner","bandwidth","bardim","pivot","stack","normalize","nice","rects","stroke","fillOpacity","transition","x1","tickSizeOuter","getDataInfo","chart","boxplot","info","duration","Number","whiskers","boxWhiskers","quartiles","boxQuartiles","tickFormat","ascending","whiskerData","whiskerIndices","concat","scaleLinear","__chart__","center","quartileData","medianLine","whisker","outlier","outlierIndices","boxTick","whiskerTick","quantile","areas","line_","area_","area","y1","words","reverse","word","lineHeight","dy","tspan","join","getComputedTextLength","pi","PI","rad","proportional","outerRadius","innerRadius","angles","pie","padAngle","startAngle","endAngle","arcs","arc","cornerRadius","proportionalData","slices","centerFontSize","centerOpacity","textWrap","legendLabel","fractionFormat","labels","scaleOrdinal","point","moveTo","lineTo","closePath","marks","polygon","segments"],"mappings":"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"}