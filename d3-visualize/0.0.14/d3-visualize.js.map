{"version":3,"file":"d3-visualize.js","sources":["../src/utils/randompath.js","../src/data/array.js","../src/data/warn.js","../src/utils/isurl.js","../src/data/remote.js","../src/data/composite.js","../src/data/expression.js","../src/utils/accessor.js","../src/data/dataframe.js","../src/utils/warn.js","../src/transforms/filter.js","../src/transforms/timeseries.js","../src/core/options.js","../src/transforms/mapfields.js","../src/transforms/index.js","../src/data/sources.js","../src/data/store.js","../src/data/locale.js","../src/utils/round.js","../src/utils/size.js","../src/core/base.js","../src/core/visual.js","../src/utils/camelfunction.js","../src/core/chart.js","../src/core/paper.js","../src/plugins/menu.js","../src/plugins/data.js","../src/plugins/responsive.js","../src/plugins/title.js","../src/plugins/margin.js","../src/plugins/color.js","../src/plugins/legend.js","../src/plugins/clusterize.js","../src/plugins/paginate.js","../src/plugins/bootstrap.js","../src/plugins/index.js","../src/core/container.js","../src/components/dashboard.js","../src/components/visual.js","../src/data/formatters.js","../src/utils/columns.js","../src/components/tabular.js","../src/components/index.js","../src/utils/constant.js","../src/utils/descending.js","../src/utils/identity.js","../src/transforms/pyramid.js","../src/charts/line.js","../src/charts/bar.js","../src/charts/pie.js","../src/utils/polygon.js","../src/charts/pyramid.js","../src/charts/treemap.js","../index.js"],"sourcesContent":["import assign from 'object-assign';\nimport {range} from 'd3-array';\nimport {randomNormal} from 'd3-random';\n\n\nconst defaults = {\n    sigma: 0.1,\n    drift: 0\n};\n\n\nexport default function (size, options) {\n    options = assign({}, defaults, options);\n    var t = range(0, +size, 1),\n        S = options.sigma,\n        drift = options.drift,\n        data = [{x: 0, y: 0}],\n        norm = randomNormal(0, 1),\n        dx;\n\n    for (var i = 1; i < t.length; i++) {\n        dx = drift + S * norm();\n        data[i] = {\n            x: i,\n            y: data[i - 1].y + dx\n        };\n    }\n\n    return data;\n}\n","import {isArray, isObject} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\n//\n//  Array DataSource\n//  ====================\n//\n//  Data is given in an array, pkain & simple\nexport default {\n\n    initialise (config) {\n        this._data = config.data;\n    },\n\n    getConfig (config) {\n        if (isArray(config)) return {data: config};\n        else if (isObject(config) && isArray(config.data)) return config;\n    },\n\n    getData () {\n        return resolvedPromise(this.asFrame(this._data));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-data-source]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import {isString} from 'd3-let';\n\n\nconst schemes = ['http', 'https', 'ws', 'wss'];\n\n\nexport default function (value) {\n    return isString(value) && schemes.indexOf(value.split('://')[0]) > -1;\n}\n","import {csvParse} from 'd3-dsv';\nimport {isObject} from 'd3-let';\nimport {viewProviders, resolvedPromise} from 'd3-view';\n\nimport warn from './warn';\nimport isUrl from '../utils/isurl';\n\n//\n//  Remote dataSource\n//  ===================\n//\n//  handle Json and csv data\nexport default {\n\n    getConfig (config) {\n        if (isUrl(config)) return {url: config};\n        else if (isObject(config) && config.url)\n            return config;\n    },\n\n    initialise (config) {\n        this.url = config.url;\n    },\n\n    getData () {\n        var fetch = viewProviders.fetch,\n            self = this;\n        if (!fetch) {\n            warn('fetch provider not available, cannot submit');\n            return resolvedPromise([]);\n        }\n        return fetch(this.url).then(parse).then((data) => self.asFrame(data));\n    }\n};\n\n\nfunction parse (response) {\n    var ct = (response.headers.get('content-type') || '').split(';')[0];\n    if (ct === 'text/plain' || ct === 'text/csv')\n        return response.text().then(csvParse);\n    else if (ct === 'application/json')\n        return response.json();\n    else {\n        warn(`Cannot load content type '${ct}'`);\n        return [];\n    }\n}\n","import {isArray, isObject} from 'd3-let';\n//\n//  A composite dataSource\n//  ===================\n//\n//  A composite data source has the source attribute with the name of one\n//  or more data sets to use as the source for this data set.\n//  The source property is useful in combination with a transform pipeline\n//  to derive new data.\n//  If string-valued, indicates the name of the source data set.\n//  If array-valued, specifies a collection of data source names that\n//  should be merged (unioned) together.\nexport default {\n\n    initialise (config) {\n        this.source = config.source;\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.source) {\n            if (!isArray(config.source)) config.source = [config.source];\n            return config;\n        }\n    },\n\n    getData () {\n        var store = this.store,\n            self = this;\n        let frame;\n        return Promise.all(this.source.map(source => {\n             return store.getData(source);\n        })).then(frames => {\n            if (frames.length === 1) frame = frames[0];\n            else frame = self.mergeFrames(frames);\n            return self.asFrame(frame);\n        });\n    },\n\n    // TODO: implement frame merging\n    mergeFrames (frames) {\n        return frames[0];\n    }\n};\n","import {isObject} from 'd3-let';\nimport {viewExpression, resolvedPromise} from 'd3-view';\n\n\nexport default {\n\n    initialise (config) {\n        this.expression = viewExpression(config.expression);\n    },\n\n    getConfig (config) {\n        if (isObject(config) && config.expression)\n            return config;\n    },\n\n    getData () {\n        var self = this,\n            model = this.store.model;\n        return resolvedPromise(this.expression.eval(model)).then((data) => self.asFrame(data));\n    }\n};\n","export default function (field) {\n    return function (d) {\n        return d[field];\n    };\n}\n","import {isArray} from 'd3-let';\nimport {map} from 'd3-collection';\nimport crossfilter from 'crossfilter';\n\nimport accessor from '../utils/accessor';\n\n\nexport default function DataFrame (data, serie, store) {\n    if (isArray(data)) data = {\n        store: store,\n        data: data,\n        dimensions: {},\n        series: map()\n    };\n    Object.defineProperties(this, {\n        _inner: {\n            get () {\n                return data;\n            }\n        },\n        store: {\n            get () {\n                return data.store;\n            }\n        },\n        data: {\n            get () {\n                return data.data;\n            }\n        },\n        dimensions: {\n            get () {\n                return data.dimensions;\n            }\n        },\n        series: {\n            get () {\n                return data.series;\n            }\n        }\n    });\n    this.serie = serie;\n}\n\n\nDataFrame.prototype = {\n\n    size () {\n        return this.data.length;\n    },\n\n    new (serie) {\n        if (isArray(serie)) return new DataFrame(serie, null, this.store);\n        else return new DataFrame(this._inner, serie);\n    },\n\n    cf () {\n        if (!this._inner.cf) this._inner.cf = crossfilter(this.data);\n        return this._inner.cf;\n    },\n\n    //  Create and return a crossfilter dimension\n    //  If value is not specified, keepExisting is by default true, and any\n    //  existing dimension name is recycled.\n    dimension (name, value, keepExisting) {\n        if (arguments.length === 1) keepExisting = true;\n        var current = this.dimensions[name];\n        if (current) {\n            if (keepExisting) return current;\n            current.dispose();\n        }\n        if (!value) value = accessor(name);\n        this.dimensions[name] = this.cf().dimension(value);\n        return this.dimensions[name];\n    },\n\n    //  Sort a dataframe by name and return the top values or all of them if\n    //  top is not defined. The name can be a function.\n    sortby (name, top) {\n        return this.new(this.dimension(name).top(top || Infinity));\n    },\n\n    // return a new dataframe by pivoting values for field name\n    pivot (dimension, key, value, total) {\n        var group = this.dimension(dimension).group();\n        if (!total) total = 'total';\n        return this.new(group.reduce(pivoter(1), pivoter(-1), Object).all().map(d => d.value));\n\n        function pivoter (m) {\n            let pk, pv;\n            return function (o, record) {\n                pk = ''+record[key];\n                pv = m*record[value];\n                o[dimension] = record[dimension];\n                if (pk in o) o[pk] += pv;\n                else o[pk] = pv;\n                if (total in o) o[total] += pv;\n                else o[total] = pv;\n                return o;\n            };\n        }\n    },\n\n    add () {\n        //this._inner.cf.add(data);\n    },\n\n    map (mapper) {\n        return this.new(this.data.map(mapper));\n    }\n};\n","import {viewProviders} from 'd3-view';\n\nconst prefix = '[d3-visualize]';\n\n\nexport default function (msg) {\n    viewProviders.logger.warn(`${prefix} ${msg}`);\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var dimension = config.dimension;\n\n    if (!dimension) warn('Filter transform requires a \"dimenstion\" entry');\n\n    return filter;\n\n    function filter (frame) {\n        if (dimension) {\n            var d = frame.dimension(dimension);\n            return frame.new(d.group());\n        }\n    }\n}\n","import warn from '../utils/warn';\n\n//\n// Create a groupby transform from a config object\nexport default function (config) {\n    var sortby = config.sortby,\n        groupby = config.groupby;\n\n    if (!sortby) warn('timeseries transform requires a \"sortby\" entry');\n\n    return timeseries;\n\n    function timeseries (frame) {\n        if (sortby) {\n            if (groupby) {\n                var dim = frame.dimension(groupby),\n                    groups = dim.group().top(Infinity),\n                    newframe = frame.new([]),\n                    tmp;\n                groups.forEach(group => {\n                    tmp = frame.new(dim.filterExact(group.key).top(Infinity)).dimension(sortby).group().top(Infinity);\n                    newframe.series.set(group.key, frame.new(tmp).dimension('key').top(Infinity));\n                });\n                return newframe;\n            } else {\n                return frame.new(frame.dimension(sortby).top(Infinity));\n            }\n        }\n        return frame;\n    }\n}\n","//\n//  Global options for visuals\n//  ============================\n//\nexport default {\n    // visual data source\n    dataSource: null,\n    //\n    size: {\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%'\n    }\n};\n","//\n//  Map Fields Transform\n//  ========================\n//\n//  Convert a set af fields to a different data type\n//\nimport assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {isString} from 'd3-let';\nimport {utcParse} from 'd3-time-format';\n\nimport warn from '../utils/warn';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.dateFormat = '%d-%b-%y';\n\n\nconst converters = {\n    date (entry) {\n        return utcParse(entry.dateFormat || globalOptions.dateFormat);\n    },\n    number () {\n        return parseFloat;\n    }\n};\n\n\n//\nexport default function (config) {\n    config = assign({}, globalOptions.dateFormat, config);\n    var fields = map(config.fields);\n    let i, converter;\n\n    return mapfields;\n\n    function mapfields (frame) {\n        var mappers = [];\n\n        fields.each((entry, key) => {\n            if (isString(entry)) entry = {type: entry};\n            converter = converters[entry.type];\n            if (!converter) warn(`Cannot convert field ${key} to type ${entry.type}`);\n            else mappers.push([key, converter(entry)]);\n        });\n\n        if (mappers.length)\n            frame = frame.map(d => {\n                for (i=0; i<mappers.length; ++i)\n                    d[mappers[i][0]] = mappers[i][1](d[mappers[i][0]]);\n                return d;\n            });\n\n        return frame;\n    }\n}\n","// Collection of transforms\nimport {map} from 'd3-collection';\n\nimport filter from './filter';\nimport timeseries from './timeseries';\nimport mapfields from './mapfields';\n\n//\n//  transforms Store\nexport default map({\n    filter,\n    mapfields,\n    timeseries\n});\n\n\n// Apply data transforms to a series\nexport function applyTransforms (frame, transforms) {\n    let ts;\n    if (!transforms) return frame;\n    transforms.forEach(transform => {\n        ts = transform(frame);\n        frame = ts ? ts : frame;\n    });\n    return frame;\n}\n","import assign from 'object-assign';\nimport {map} from 'd3-collection';\nimport {dispatch} from 'd3-dispatch';\nimport {pop, isArray} from 'd3-let';\n\nimport DataFrame from './dataframe';\nimport transformStore, {applyTransforms} from '../transforms/index';\nimport warn from '../utils/warn';\n\nconst dataEvents = dispatch('init', 'data');\n\n\n//\n//  DataSource prototype\n//  ======================\nconst dataSourcePrototype = {\n\n    // get the config object-assign// This method is used by the prototype\n    // to check if the config object is a valid one\n    getConfig () {},\n\n    // initialise the data source with a config object\n    initialise () {},\n\n    getData () {},\n\n    //\n    addTransforms (transforms) {\n        var self = this;\n        let t;\n        if (!transforms) return;\n        if (!isArray(transforms)) transforms = [transforms];\n        transforms.forEach(transform => {\n            t = transformStore.get(transform.type);\n            if (!t) warn(`Transform \"${transform.type}\" not known`);\n            else self.transforms.push(t(transform));\n        });\n    },\n    //\n    // given a data object returns a Cross filter object\n    asFrame (data) {\n        if (isArray(data)) {\n            data = data.map(entry => {\n                if (entry.constructor !== Object) entry = {data: entry};\n                return entry;\n            });\n            data = new DataFrame(data, null, this.store);\n        }\n        return applyTransforms(data, this.transforms);\n    }\n};\n\n\n// DataSource container\nexport default assign(map(), {\n    events: dataEvents,\n\n    add (type, source) {\n\n        // DataSource constructor\n        function DataSource (config, store) {\n            initDataSource(this, type, config, store);\n        }\n\n        DataSource.prototype = assign({}, dataSourcePrototype, source);\n\n        this.set(type, DataSource);\n        return DataSource;\n    },\n\n    // Create a new DataSource\n    create (config, store) {\n        var sources = this.values(),\n            cfg;\n        for (var i=0; i<sources.length; ++i) {\n            cfg = sources[i].prototype.getConfig(config);\n            if (cfg) return new sources[i](cfg, store);\n        }\n    }\n});\n\n\nfunction initDataSource(dataSource, type, config, store) {\n\n    var name = store.dataName(pop(config, 'name')),\n        transforms = [];\n\n    // store.natural = cf.dimension(d => d._id);\n\n    Object.defineProperties(dataSource, {\n        name: {\n            get () {\n                return name;\n            }\n        },\n        store: {\n            get () {\n                return store;\n            }\n        },\n        type: {\n            get () {\n                return type;\n            }\n        },\n        // transforms to apply to data\n        transforms: {\n            get () {\n                return transforms;\n            }\n        },\n        config: {\n            get () {\n                return config;\n            }\n        }\n    });\n\n    dataSource.initialise(config);\n    dataSource.addTransforms(pop(config, 'transforms'));\n    store.sources.set(name, dataSource);\n    dataEvents.call('init', undefined, dataSource);\n}\n","import assign from 'object-assign';\n\nimport {map} from 'd3-collection';\nimport {isArray, isString} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport array from './array';\nimport remote from './remote';\nimport composite from './composite';\nimport expression from './expression';\nimport dataSources from './sources';\nimport transformStore from '../transforms/index';\n\n\ndataSources.add('array', array);\ndataSources.add('remote', remote);\ndataSources.add('composite', composite);\ndataSources.add('expression', expression);\n\n//\n//  DataStore\n//  ==============\n//\n//  Map names to datasets\n//  Individual data sets are assumed to contain a collection of records\n//  (or “rows”), which may contain any number of named data\n//  attributes (fields, or “columns”).\n//  Records are modeled using standard JavaScript objects.\nexport default function DataStore(model) {\n    var sources = map();\n\n    Object.defineProperties(this, {\n        sources: {\n            get () {\n                return sources;\n            }\n        }\n    });\n\n    // transforms function\n    this.transforms = assign({}, transformStore);\n    this.dataCount = 0;\n    this.model = model;\n}\n\n\nDataStore.prototype = {\n    size () {\n        return this.sources.size();\n    },\n\n    // Add a new serie from a data source\n    addSources (config) {\n        //\n        // data is a string, it must be already registered with store\n        if (isString(config)) config = {source: config};\n\n        if (isArray(config)) {\n            var self = this;\n            return config.map(cfg => {\n                return dataSources.create(cfg, self);\n            });\n        } else if (config) {\n            return dataSources.create(config, this);\n        }\n    },\n\n    addTransforms (transforms) {\n        assign(this.transforms, transforms);\n    },\n\n    // set, get or remove a data source\n    source (name, source) {\n        if (arguments.length === 1) return this.sources.get(name);\n        if (source === null) {\n            var p = this.sources.get(name);\n            this.sources.remove(name);\n            return p;\n        }\n        this.sources.set(name, source);\n        return this;\n    },\n\n    clearCache () {\n        this.sources.each(ds => {\n            delete ds.cachedFrame;\n        });\n    },\n\n    // get data from a source\n    getData (source) {\n        var ds = this.sources.get(source);\n        if (!ds) throw new Error(`Data source ${source} not available`);\n        if (ds.cachedFrame) return resolvedPromise(ds.cachedFrame);\n        return ds.getData().then(frame => {\n            ds.cachedFrame = frame;\n            return frame;\n        });\n    },\n\n    dataName (name) {\n        this.dataCount++;\n        if (name) return '' + name;\n        var def = this.source('default');\n        if (!def) return 'default';\n        return `source${this.dataCount}`;\n    }\n};\n","// utility to load and set locale\nimport {formatDefaultLocale} from 'd3-format';\nimport {timeFormatDefaultLocale, timeFormat} from 'd3-time-format';\n\nimport dataSources from './sources';\n\n//\n// manage locale\nexport default {\n    formatDate: timeFormat('%d/%m/%Y'),\n\n    formatDateTime: timeFormat('%a %e %b %X %Y'),\n\n    load (symbol) {\n        var locales = this,\n            source1 = dataSources.create(`https://unpkg.com/d3-format/locale/${symbol}.json`),\n            source2 = dataSources.create(`https://unpkg.com/d3-time-format/locale/${symbol}.json`);\n\n        return Promise.all([\n            source1.load().then(\n                locale => {\n                    locales.symbol = symbol;\n                    locales.number = locale;\n                    formatDefaultLocale(locale);\n                }\n            ),\n            source2.load().then(\n                locale => {\n                    locales.time = locale;\n                    locales.formatDate = timeFormat(locale.date);\n                    locales.formatDateTime = timeFormat(locale.dateTime);\n                    timeFormatDefaultLocale(locale);\n                }\n            )\n        ]);\n    }\n};\n","export default function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n}\n","import {select} from 'd3-selection';\n\nimport round from './round';\n\n\nconst WIDTH = 400;\nconst HEIGHT = '75%';\n\n\nexport function sizeValue (value, size) {\n    if (typeof(value) === \"string\" && value.indexOf('%') === value.length-1)\n        return round(0.01*parseFloat(value)*size);\n    return +value;\n}\n\n// Internal function for evaluating paper dom size\nexport function getSize (element, options) {\n    var size = {\n        width: options.width,\n        height: options.height\n    };\n\n    if (!size.width) {\n        size.width = getWidth(element);\n        if (size.width)\n            size.widthElement = getWidthElement(element);\n        else\n            size.width = WIDTH;\n    }\n\n    if (!size.height) {\n        size.height = getHeight(element);\n        if (size.height)\n            size.heightElement = getHeightElement(element);\n        else\n            size.height = HEIGHT;\n    }\n\n    // Allow to specify height as a percentage of width\n    size.height = sizeValue(size.height, size.width);\n    return size;\n}\n\n\nexport function getWidth (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementWidth(el);\n}\n\n\nexport function getHeight (element) {\n    var el = getParentElementRect(element, 'width');\n    if (el) return elementHeight(el);\n}\n\n\nexport function getWidthElement (element) {\n    return getParentElementRect(element, 'width');\n}\n\n\nexport function getHeightElement (element) {\n    return getParentElementRect(element, 'height');\n}\n\n\nfunction elementWidth (el) {\n    var w = el.getBoundingClientRect()['width'],\n        s = select(el),\n        left = padding(s.style('padding-left')),\n        right = padding(s.style('padding-right'));\n    return w - left - right;\n}\n\n\nfunction elementHeight (el) {\n    var w = el.getBoundingClientRect()['height'],\n        s = select(el),\n        top = padding(s.style('padding-top')),\n        bottom = padding(s.style('padding-bottom'));\n    return w - top - bottom;\n}\n\n\nfunction getParentElementRect (element, key) {\n    let parent = element.node ? element.node() : element,\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        v = parent.getBoundingClientRect()[key];\n        if (v)\n            return parent;\n        parent = parent.parentNode;\n    }\n}\n\n\nfunction padding (value) {\n    if (value && value.substring(value.length-2) == 'px')\n        return +value.substring(0, value.length-2);\n    return 0;\n}\n\n\nexport function boundingBox (size) {\n    var w = size.widthElement ? getWidth(size.widthElement) : size.width,\n        h;\n    if (size.heightPercentage)\n        h = round(w*size.heightPercentage, 0);\n    else\n        h = size.heightElement ? getHeight(size.heightElement) : size.height;\n    if (size.minHeight)\n        h = Math.max(h, size.minHeight);\n    return [round(w), round(h)];\n}\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\nimport {dispatch} from 'd3-dispatch';\nimport {select} from 'd3-selection';\nimport {viewBase, viewModel} from 'd3-view';\nimport 'd3-transition';\n\nimport globalOptions from './options';\nimport {sizeValue} from '../utils/size';\n\n\nconst CONTAINERS = ['visual', 'container'];\n\n//\n//  Gloval visuals object\n//  ==========================\n//\n//  Container of\n//  * live visuals\n//  * visual types\n//  * paper types\n//  * visual events\nexport const visuals = {\n    live: [],\n    types: {},\n    papers: {},\n    events: dispatch(\n        'before-init',\n        'after-init',\n        'before-draw',\n        'after-draw'\n    )\n};\n\n//\n//  Visual Interface\n//  ====================\n//\n//  Base prototype object for visuals\n//\nexport const visualPrototype = assign({}, {\n\n    // initialise the visual with options\n    initialise () {\n\n    },\n\n    // draw this visual\n    draw () {},\n\n    select (el) {\n        return select(el);\n    },\n\n    // destroy the visual\n    destroy () {\n\n    },\n\n    // get a reactive model for type\n    getModel (type) {\n        if (!type) type = this.visualType;\n        var model = this.model[type];\n        if (!model && type in globalOptions) {\n            var options = pop(this.options, type),\n                self = this;\n            if (this.visualParent)\n                model = this.visualParent.getModel(type).$child(options);\n            else {\n                model = this.model.$new(globalOptions[type]);\n                model.$update(options);\n            }\n            this.model[type] = model;\n            model.$on(() => self.draw());\n        }\n        return model;\n    },\n\n    dim (size, refSize, minSize, maxSize) {\n        size = Math.max(sizeValue(size, refSize), minSize || 0);\n        if (maxSize) {\n            maxSize = Math.max(maxSize, minSize || 0);\n            size = Math.min(size, maxSize);\n        }\n        return size;\n    },\n\n    pop (container) {\n        if (container) {\n            var idx = container.live.indexOf(this);\n            if (idx > -1) container.live.splice(idx, 1);\n        }\n    }\n}, viewBase);\n\n//\n//  Create a new Visual Constructor\nexport default function (type, proto) {\n    const opts = pop(proto, 'options');\n    if (opts)\n        globalOptions[type] = opts;\n\n    function Visual(element, options, parent, model) {\n        Object.defineProperties(this, {\n            visualType: {\n                get () {\n                    return type;\n                }\n            },\n            isViz: {\n                get () {\n                    return CONTAINERS.indexOf(type) === -1;\n                }\n            }\n        });\n        this.visualParent = parent;\n        this.model = parent ? parent.model.$new() : (model || viewModel());\n        this.options = options || {};\n        visuals.events.call('before-init', undefined, this);\n        this.initialise(element);\n        visuals.events.call('after-init', undefined, this);\n    }\n\n    Visual.prototype = assign({}, visualPrototype, proto);\n    visuals.types[type] = Visual;\n    return Visual;\n}\n","import {pop, inBrowser} from 'd3-let';\nimport {select} from 'd3-selection';\nimport {viewDebug} from 'd3-view';\n\nimport createVisual, {visuals} from './base';\nimport warn from '../utils/warn';\nimport {getSize} from '../utils/size';\n\n//\n//  Visual\n//  =============\n//\n//  A Visual is a a container of visual layers and it is\n//  associated with an HTML element\n//\n//  Usually a Visual contains one layer only, however it is possible to\n//  have more than one by combining several layers together. Importantly,\n//  layers in one visual generate HTMLElements which are children of the visual\n//  element and inherit both the width and height.\n//\n//  A visual register itself with the visuals.live array\n//\nexport default createVisual('visual', {\n\n    options: {\n        render: 'svg',\n        // width set by the parent element\n        width: null,\n        // height set as percentage of width\n        height: '70%',\n        // heightElement - selector for an element from wich to obtain height\n        heightElement: null\n    },\n\n    initialise (element) {\n        if (!element) throw new Error('HTMLElement required by visual group');\n        if (this.visualParent && this.visualParent.visualType !== 'container')\n            throw new Error('Visual parent can be a container only');\n\n        Object.defineProperties(this, {\n            element : {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            size: {\n                get () {\n                    return [this.width, this.height];\n                }\n            }\n        });\n\n        this.sel.classed('d3-visual', true);\n        // list of layers which define the visual\n        this.layers = [];\n        this.drawCount = 0;\n        visuals.live.push(this);\n        element.__visual__ = this;\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    toString () {\n        return `visual ${this.model.uid}`;\n    },\n\n    // Draw the visual\n    draw() {\n        if (!this.drawCount) {\n            this.drawCount = 1;\n            this.fit();\n        } else {\n            this.drawCount++;\n            this.clear();\n        }\n        visuals.events.call('before-draw', undefined, this);\n        this.layers.forEach(visual => {\n            visual.draw();\n        });\n        visuals.events.call('after-draw', undefined, this);\n    },\n\n    clear () {},\n\n    // Add a new visual to this group\n    addVisual (options) {\n        var type = pop(options, 'type');\n        var VisualClass = visuals.types[type];\n        if (!VisualClass)\n            warn(`Cannot add visual ${options.type}`);\n        else\n            return new VisualClass(this.element, options, this);\n    },\n    //\n    // Fit the root element to the size of the parent element\n    fit () {\n        var size = getSize(this.element.parentNode, this.getModel());\n        this.width = size.width;\n        this.height = size.height;\n        this.sel.style('width', this.width + 'px').style('height', this.height + 'px');\n    },\n\n    resize (size) {\n        if (!size) size = getSize(this.element.parentNode, this.getModel());\n        var currentSize = this.size;\n\n        if (currentSize[0] !== size.width || currentSize[1] !== size.height) {\n            viewDebug(`Resizing \"${this.toString()}\"`);\n            this.width = size.width;\n            this.height = size.height;\n            this.sel.style('width', this.width + 'px').style('height', this.height + 'px');\n            this.draw();\n        }\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n        this.pop(visuals);\n    }\n});\n\n\nif (inBrowser) {\n    // DOM observer\n    // Check for changes in the DOM that leads to visual actions\n    const observer = new MutationObserver(visualManager);\n    observer.observe(document.documentElement, {\n        childList: true,\n        subtree: true\n    });\n}\n\n//\n//  Clears visualisation going out of scope\nfunction visualManager (records) {\n    records.forEach(record => {\n        var nodes = record.removedNodes;\n        if (!nodes || !nodes.length) return;  // phantomJs hack\n        nodes.forEach(node => {\n            if (node.nodeName !== '#text') {\n                if (!node.__visual__)\n                    select(node).selectAll('.d3-visual').each(destroy);\n                else\n                    destroy.call(node);\n            }\n        });\n    });\n}\n\n\nfunction destroy () {\n    var viz = this.__visual__;\n    if (viz) {\n        viz.destroy();\n        viewDebug(`Removed \"${viz.toString()}\" from DOM, ${visuals.live.length} live visuals left`);\n    }\n    else warn('d3-visual without __visual__ object');\n}\n","export default function (o, prefix, name) {\n    if (name.substring(0, prefix.length) !== prefix)\n        name = `${prefix}${name[0].toUpperCase()}${name.substring(1)}`;\n    return o[name]();\n}\n","import assign from 'object-assign';\nimport {isFunction} from 'd3-let';\nimport * as d3_scale from 'd3-scale';\n\nimport createVisual, {visuals} from './base';\nimport Visual from './visual';\nimport camelFunction from '../utils/camelfunction';\n\n//\n//  crateChart\n//\n//  A chart is a drawing of series data in two dimensional\nexport default function (type) {\n    var protos = [{}, vizPrototype, chartPrototype];\n    for (var i=1; i<arguments.length; ++i) protos.push(arguments[i]);\n    return createVisual(type, assign.apply(undefined, protos));\n}\n\n\n//  Viz Prototype\n//  =================\nexport const vizPrototype = {\n\n    initialise (element) {\n        // No visual parent, create the visual\n        var visual = this.visualParent;\n        if (!visual) {\n            this.visualParent = visual = new Visual(element, this.options, null, this.model);\n            this.model = visual.model.$new();\n            this.options = {};\n        } else if (visual.visualType !== 'visual')\n            throw new Error(`visual parent of ${this.visualType} can only be \"visual\"`);\n        visual.layers.push(this);\n    },\n\n    //\n    // paper object for this visualisation\n    paper () {\n        var visual = this.getModel('visual'),\n            paper = this._paper;\n        if (paper && paper.paperType === visual.render) return paper;\n        var PaperType = visuals.papers[visual.render];\n        if (!PaperType) throw new Error(`Unknown paper ${visual.render}`);\n        paper = new PaperType(this);\n        this._paper = paper;\n        return paper;\n    },\n\n    translate (x, y) {\n        if (isFunction(x)) {\n            return function (d) {\n                var xt = x(d) || 0,\n                    yt = y(d) || 0;\n                return `translate(${xt}, ${yt})`;\n            };\n        } else return `translate(${x}, ${y})`;\n    },\n\n    getScale (name) {\n        return camelFunction(d3_scale, 'scale', name);\n    }\n};\n\n\nexport const chartPrototype = {\n\n    //  override draw method\n    draw () {\n        visuals.events.call('before-draw', undefined, this);\n\n        this.getData().then(frame => {\n            if (frame) {\n                this.doDraw(frame);\n                visuals.events.call('after-draw', undefined, this);\n            }\n        });\n    }\n};\n","import assign from 'object-assign';\nimport {select} from 'd3-selection';\n\nimport {visuals} from './base';\n\n\nexport default function createPaper (type, proto) {\n\n    function Paper (viz) {\n        var element = this.initialise(viz);\n        Object.defineProperties(this, {\n            element: {\n                get () {\n                    return element;\n                }\n            },\n            sel: {\n                get () {\n                    return select(element);\n                }\n            },\n            paperType: {\n                get () {\n                    return type;\n                }\n            }\n        });\n    }\n\n    Paper.prototype = assign({}, paperPrototype, proto);\n\n    visuals.papers[type] = Paper;\n    return Paper;\n}\n\n\nconst paperPrototype = {\n\n    initialise () {},\n    transition () {},\n    size (box) {\n        this.sel\n            .attr('width', box.width)\n            .attr('height', box.height);\n        return this;\n    },\n\n    group (cname) {\n        if (!cname) cname = 'main';\n        var sel = this.sel;\n        sel\n            .selectAll(`.${cname}`)\n            .data([0]).enter()\n            .append('g').classed(cname, true);\n        return sel.select(`.${cname}`);\n    },\n\n    dim (value) {\n        return value;\n    }\n};\n\n\nexport const Svg = createPaper('svg', {\n\n    initialise (viz) {\n        var svg = viz.visualParent.sel.append('svg')\n            .attr('id', viz.model.uid)\n            .classed(viz.visualType, true);\n        return svg.node();\n    }\n});\n","//\n//  Add a menu buttom to a visual\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\n\n\nglobalOptions.menu = {\n    display: false,\n    height: '8%',\n    maxHeight: 50,\n    minHeight: 20\n};\n\n\nvisuals.events.on('after-init.menu', viz => {\n    if (viz.visualType === 'visual') {\n        var menu = viz.getModel('menu');\n        if (menu.display) {\n            viz.menu = viz.sel.append('nav').classed('d3-nav', true);\n            viz.menu.append('h4').classed('title', true);\n        }\n    }\n});\n\nvisuals.events.on('before-draw.menu', viz => {\n    if (viz && viz.menu) {\n        refreshMenu(viz);\n    }\n});\n\n\nfunction refreshMenu(viz) {\n    var menu = viz.getModel('menu'),\n        height = viz.dim(menu.height, viz.height, viz.minHeight, viz.maxHeight);\n    viz.menu.style('height', `${height}px`);\n}\n","//\n//  dataStore integration with visuals\nimport {isString, pop} from 'd3-let';\nimport {resolvedPromise} from 'd3-view';\n\nimport {visuals} from '../core/base';\nimport DataStore from '../data/store';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\n//  getData method\n//  =====================\n//\n//  Inject a method for easily retrieving data from the datastore\nvizPrototype.getData = function () {\n    var name = this.model.data;\n    if (!name) {\n        warn('Visual without data name, cannot get data');\n        return resolvedPromise();\n    }\n    return this.dataStore.getData(name);\n};\n\n\nvisuals.events.on('before-init.data', viz => {\n    if (!viz.isViz) return;\n    // remove data from options\n    viz.data = pop(viz.options, 'data');\n});\n\n\nvisuals.events.on('after-init.data', viz => {\n    Object.defineProperties(viz, {\n        dataStore : {\n            get () {\n                if (viz.visualParent) return viz.visualParent.dataStore;\n                return viz.model.dataStore;\n            }\n        },\n    });\n    if (viz.isViz) setupLayer(viz);\n    else setupVisual(viz);\n});\n\n\nfunction setupVisual (visual) {\n    var store = visual.dataStore,\n        data = pop(visual.options, 'data');\n    //\n    if (!store) {\n        store = new DataStore(visual.model);\n        visual.model.dataStore = store;\n    }\n    store.addSources(data);\n}\n\n\nfunction setupLayer (layer) {\n    var store = layer.dataStore,\n        data = pop(layer, 'data');\n    if (!data) return;\n    if (isString(data)) data = {source: data};\n    if (!data.name) data.name = layer.model.uid;\n    data = store.addSources(data);\n    if (data)\n        layer.model.$set('data', data.name);\n    else\n        warn(`Could not create data source ${data.name}`);\n}\n","import {inBrowser} from 'd3-let';\nimport {viewDebounce} from 'd3-view';\nimport {select} from 'd3-selection';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nif (!globalOptions.resizeDelay)\n    globalOptions.resizeDelay = 200;\n\n\nif (inBrowser) {\n    var resize = viewDebounce(() => {\n        visuals.live.forEach(p => p.resize());\n    }, globalOptions.resizeDelay);\n\n    select(window).on('resize.visuals', resize);\n}\n","// Title plot annotation\nimport {isString} from 'd3-let';\n\nimport {visuals} from '../core/base';\nimport globalOptions from '../core/options';\n\n\nglobalOptions.title = {\n    text: null,\n    fontSize: '5%',\n    minFontSize: 15\n};\n\n\nvisuals.events.on('before-init.title', viz => {\n    var title = viz.options.title;\n    if (isString(title)) viz.options.title = {text: title};\n});\n\n\nvisuals.events.on('before-draw.title', viz => {\n    var title = viz.getModel('title');\n    if (!title.text) return;\n    if (viz.visualType === 'visual' && viz.menu) menuTitle(viz, title);\n});\n\n\nfunction menuTitle(viz, title) {\n    var height = number(viz.menu.style('height')),\n        size = viz.dim(title.fontSize, viz.height, title.minFontSize, height-4);\n    viz.menu.select('.title')\n        .html(title.text)\n        .style('font-size', `${size}px`)\n        .style('line-height', `${height}px`);\n}\n\n\nfunction number (px) {\n    return +px.substring(0, px.length-2);\n}\n","import {isObject} from 'd3-let';\n\nimport globalOptions from '../core/options';\nimport {visuals} from '../core/base';\nimport {vizPrototype} from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst KEYS = ['top', 'bottom', 'left', 'right'];\nconst LEFTRIGHT = ['left', 'right'];\n\n\n// margin for visual marks\nglobalOptions.margin = {\n    top: 20,\n    bottom: 20,\n    left: 20,\n    right: 20\n};\n// padding for the visual paper\nglobalOptions.padding = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n};\n\n\n//\n//  Bounding box for a viz\n//  ==========================\nvizPrototype.boundingBox = function () {\n    var width = this.visualParent.width,\n        height = this.visualParent.height,\n        margin = calculate(this.getModel('margin'), width, height),\n        padding = calculate(this.getModel('padding'), width, height),\n        total = KEYS.reduce((o, key) => {\n            o[key] = margin[key] + padding[key];\n            return o;\n        }, {});\n    return {\n        width: width,\n        height: height,\n        margin: margin,\n        padding: margin,\n        total: total,\n        innerWidth: width - total.left - total.right,\n        innerHeight: height - total.top - total.bottom\n    };\n};\n\n\nvisuals.events.on('after-init.margin', viz => {\n    viz.margin = margins('margin', viz);\n    viz.padding = margins('padding', viz);\n});\n\n\nfunction margins (name, viz) {\n    var value = viz.options[name];\n\n    if (value !== undefined && !isObject(value)) {\n        var v = value || 0;\n        viz.options[name] = {\n            left: v,\n            right: v,\n            top: v,\n            bottom: v\n        };\n    }\n}\n\n\nfunction calculate (model, width, height) {\n    return KEYS.reduce((o, key) => {\n        o[key] = sizeValue(model[key], LEFTRIGHT.indexOf(key) > -1 ? width : height);\n        return o;\n    }, {});\n}\n","import {map} from 'd3-collection';\nimport {range} from 'd3-array';\nimport {\n    scaleSequential,\n    interpolateViridis, interpolateInferno, interpolateMagma,\n    interpolatePlasma, interpolateWarm, interpolateCool,\n    interpolateRainbow, interpolateCubehelixDefault\n} from 'd3-scale';\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\n\nexport const colorScales = map();\n\n\nglobalOptions.color = {\n    scale: 'cool',\n    stroke: '#333',\n    strokeOpacity: 1,\n    fillOpacity: 1\n};\n\ncolorScales.set('viridis', () =>  scaleSequential(interpolateViridis));\ncolorScales.set('inferno', () =>  scaleSequential(interpolateInferno));\ncolorScales.set('magma', () =>  scaleSequential(interpolateMagma));\ncolorScales.set('plasma', () =>  scaleSequential(interpolatePlasma));\ncolorScales.set('warm', () =>  scaleSequential(interpolateWarm));\ncolorScales.set('cool', () =>  scaleSequential(interpolateCool));\ncolorScales.set('rainbow', () =>  scaleSequential(interpolateRainbow));\ncolorScales.set('cubehelix', () =>  scaleSequential(interpolateCubehelixDefault));\n\n//\n//  Color scale method\n//  ==========================\nvizPrototype.colorScale = function () {\n    var color = this.getModel('color'),\n        scale = colorScales.get(color.scale);\n    if (!scale) throw new Error(`Unknown scale ${color.scale}`);\n    return scale();\n};\n\n\nvizPrototype.colors = function (n) {\n    var scale = this.colorScale().domain([0, n+1]);\n    return range(1, n+1).map(v => scale(v));\n};\n","import {legendColor, legendSize, legendSymbol} from 'd3-svg-legend';\nimport {map} from 'd3-collection';\n\nimport globalOptions from '../core/options';\nimport {vizPrototype} from '../core/chart';\nimport warn from '../utils/warn';\n\n\nglobalOptions.legend = {\n    location: \"top-right\",\n    orient: \"vertical\",\n    offsetX: 10,\n    offsetY: 10\n};\n\n\nconst legends = {\n    color: legendColor,\n    size: legendSize,\n    symbol: legendSymbol\n};\n\n\n//\n//  Legend method\n//  ==========================\nvizPrototype.legend = function (cfg, box) {\n    var vizModel = this.getModel(),\n        lgModel = this.getModel('legend'),\n        name = vizModel.legendType;\n    if (!name) return;\n    var legend = legends[name];\n    if (!legend) return warn(`Could not load legend ${name}`);\n    legend = legend().orient(lgModel.orient);\n    for (let key in cfg) legend[key](cfg[key]);\n    var g = this.paper()\n            .group('legend')\n            .call(legend),\n        bb = locations.get(lgModel.location)(g.node().getBBox(), box, lgModel);\n    g.attr('transform', this.translate(bb.x, bb.y));\n};\n\n\nconst locations = map({\n    top,\n    bottom,\n    right,\n    left,\n    'top-left': topLeft,\n    'top-right': topRight,\n    'bottom-left': bottomLeft,\n    'bottom-right': bottomRight\n});\n\n\nfunction top (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottom (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction right (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: options.offsetY\n    };\n}\n\n\nfunction left (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: options.offsetY\n    };\n}\n\n\nfunction topRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: options.offsetY\n    };\n}\n\n\nfunction bottomLeft (bb, box, options) {\n    return {\n        x: box.total.left + (box.innerWidth - bb.width)/2,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n\n\nfunction bottomRight (bb, box, options) {\n    return {\n        x: box.width - bb.width - options.offsetX,\n        y: box.height - bb.height - options.offsetY\n    };\n}\n","//\n// Use clusterize.js to render the table\nexport default function (table, options) {\n    return table.require('clusterize.js@0.17.6').then(Clusterize => clusterize(Clusterize, table, options));\n}\n\n\nfunction clusterize(Clusterize) {\n    var cl = new Clusterize();\n    return cl;\n}\n","export default function (table) {\n    return table;\n}\n","//\n//  bootstrap styling for tabular component\n//  ==========================================\n//\nimport assign from 'object-assign';\n\n\nconst defaults = {\n    over: true,\n    small: true,\n    bordered: true,\n    loadingClass: 'table-info',\n    loadingTextClass: 'text-center'\n};\n\n\nexport default function (table, options) {\n    var style = table.model.style;\n    style.$update(assign({}, defaults, options));\n\n    style.tableClass = 'table table-responsive';\n    if (style.striped) style.tableClass += ' table-striped';\n    if (style.over) style.tableClass += ' table-hover';\n    if (style.bordered) style.tableClass += ' table-bordered';\n    if (style.small) style.tableClass += ' table-sm';\n}\n","//\n//  Plugins for visuals and tabular\n//\n// visual plugins\nimport './menu';\nimport './data';\nimport './responsive';\nimport './title';\nimport './margin';\nimport './color';\nimport './legend';\n//\n//  This module depends on core but not on components\nimport clusterize from './clusterize';\nimport paginate from './paginate';\nimport bootstrap from './bootstrap';\n\n// plugins add functionalities to a d3 table\n// A plugin is a function accepting two parameters:\n//  * the table component\n//  * object with configuration parameters\nexport default {\n    bootstrap,\n    clusterize,\n    paginate\n};\n","import createVisual, {visuals} from './base';\n\n\nexport default createVisual('container', {\n\n    initialise () {\n        this.live = [];\n        if (this.visualParent) this.visualParent.live.push(this);\n    },\n\n    draw() {\n        visuals.events.call('before-draw', undefined, this);\n        this.live.forEach(visual => {\n            visual.draw();\n        });\n        visuals.events.call('after-draw', undefined, this);\n    },\n\n    destroy () {\n        this.pop(this.visualParent);\n    }\n});\n","import assign from 'object-assign';\nimport {isString, isObject} from 'd3-let';\n\nimport VisualContainer from '../core/container';\n\n//\n//  vizComponent base prototype\n//  =============================\n//\n//  Some common properties and methods for all visualize components\n//\nexport const vizComponent = {\n    props: [\n        'schema',\t    // Schema is a collection of fields to display in the table\n        'datasource',\t// Data source\n        'plugins',      // list of string/objects\n\t],\n\n    render (props, attrs, el) {\n        var self = this,\n            inner = this.select(el).html();\n        //\n        // build\n        return this.getSchema(props.schema, schema => {\n            if (!isObject(schema)) schema = {};\n            return self.build(schema, inner, attrs);\n        });\n    },\n\n    // get the schema from the input schema property\n    getSchema (input, build) {\n        var parent = this.model.visual;\n\n        // allow to specify the schema as an entry of\n        // visuals object in the dashboard schema\n        if (parent && parent !== this.model && isString(input)) {\n            var schema = parent.options.visuals[input];\n            if (schema) input = schema;\n        }\n\n        if (isString(input)) {\n            return this.json(input).then(build);\n        }\n        else return build(input);\n    },\n    //\n    // build the visual component has the schema available\n    build () {}\n};\n//\n//  Dashboard Component\n//  ========================\n//\n//  A collection of visual components arranged according\n//  to a custom layout.\n//\n//  * Dashboard visuals are independent of each other but\n//    interact via the data object\n//  * The Dashboard layout is given by the inner HTML elements\n//  * The configuration is obtained via the schema property which\n//    can be either:\n//      1) an object\n//      2) a url\nexport default assign({}, vizComponent, {\n\n    build (schema, inner, attrs) {\n        var model = this.model,\n            sel = this.createElement('div'),\n            root = model.root;\n        if (attrs.class) sel.attr('class', attrs.class);\n        if (!schema.visuals) schema.visuals = {};\n        model.visual = new VisualContainer(sel.node(), schema, model.visual);\n        if (!root.visualDashboard) root.visualDashboard = model.visual;\n        return this.mountInner(sel, inner);\n    }\n});\n","import assign from 'object-assign';\nimport {pop} from 'd3-let';\n\nimport {vizComponent} from './dashboard';\nimport Visual from '../core/visual';\n\n\n//\n//  Visual component\n//  ======================\n//\n//  An element containing a visualization\nexport default assign({}, vizComponent, {\n\n    build (schema) {\n        var sel = this.createElement('div'),\n            type = schema.type || 'visual',\n            model = this.model,\n            options = {};\n\n        if (type === 'visual')\n            options = schema;\n        else\n            options.visual = pop(schema, 'visual') || {};\n\n        model.visual = new Visual(sel.node(), options, model.visual);\n        if (type !== 'visual') model.visual.addVisual(schema);\n        return sel;\n    },\n\n    // once the element is mounted in the dom, draw the visual\n    mounted () {\n        this.model.visual.draw();\n    }\n});\n","import {isoParse} from 'd3-time-format';\n\nimport locale from './locale';\n\n\nexport const parsers = {\n    date: isoParse,\n\n    string (value) {\n        return ''+value;\n    }\n};\n\n// formatters\nexport const formatters = {\n\n    number (value) {\n        return value;\n    },\n\n    date (value) {\n        return locale.formatDate(value);\n    },\n\n    boolean (value) {\n        return value;\n    }\n};\n","import {isObject, isArray} from 'd3-let';\n\nimport {formatters, parsers} from '../data/formatters';\n\n\n//\n// Create table columns from schema\nexport default function (schema) {\n    var columns = [];\n    let col;\n\n\tif (!schema) return columns;\n\n    if (isArray(schema))\n        schema = {properties: schema};\n\n    if (isObject(schema.properties)) {\n        for (let key in schema.properties) {\n            col = schema.properties[key];\n            if (isObject(col)) {\n                if (!col.name) col.name = key;\n                columns.push(col);\n            }\n        }\n    } else\n        Array.prototype.push.apply(columns, schema.properties);\n\n    return columns.map((col) => {\n        if (!isObject(col)) col = {name: col};\n        if (!col.label) col.label = col.name;\n        if (!col.hidden) col.hidden = false;\n        if (!col.$parse) col.$parse = parsers[col.type] || parsers.string;\n        if (!col.$html) col.$html = formatters[col.type] || $html;\n        return col;\n    });\n}\n\n\nfunction $html (value) {\n    return value;\n}\n","// import {timeout} from 'd3-timer';\nimport assign from 'object-assign';\nimport {isString, isArray, isPromise} from 'd3-let';\n\nimport warn from '../utils/warn';\nimport createColumns from '../utils/columns';\nimport tablePlugins from '../plugins/index';\nimport {vizComponent} from './dashboard';\n\n\nconst tableTpl = `<table d3-class=\"[style.tableClass, loadingData ? 'loading' : null]\">\n<thead d3-class=\"style.headerClass\">\n<tr d3-class=\"style.headerRowClass\">\n  <th d3-for=\"col in columns\"\n        d3-html=\"col.label\"\n        d3-if=\"!col.hidden\">\n  </th>\n</tr>\n<tr d3-if=\"loadingData\" d3-class=\"style.loadingClass\">\n    <td d3-attr-colspan=\"columns.length\">\n        <p d3-class=\"style.loadingTextClass\">loading data</p>\n    </td>\n</tr>\n</thead>\n<tbody></tbody>\n</table>`;\n\n\nexport default assign({}, vizComponent, {\n\n\tmodel () {\n        return {\n            header: true,            // show header\n            columns: [],             // table columns\n            loadingData: false,\n            style: {\n                tableClass: null,\n                headerClass: null,\n                headerRowClass: null,\n                loadingClass: 'loading',\n                loadingTextClass: null\n            }\n        };\n\t},\n\n\tbuild (schema) {\n\t\tvar self = this,\n            model = this.model,\n            plugins = schema.plugins || [];\n        // model.allData = crossfilter([]);\n        this.records = {};\n        this.data = [];\n        this.template = tableTpl;\n\n\t\tmodel.columns = createColumns(schema);\n\t\t// if (data.dataurl) model.dataLoader = new DataLoader(data.dataurl);\n\n        if (!isArray(plugins)) {\n            warn('plugins should be an array');\n        } else {\n            var promises = [];\n            let promise;\n            plugins.forEach(plugin => {\n                if (isString(plugin)) plugin = {name: plugin};\n                if (!tablePlugins[plugin.name])\n                    warn(`Unknown table plugin ${plugin.name}`);\n                else {\n                    promise = tablePlugins[plugin.name](self, plugin);\n                    if (isPromise(promise)) promises.push(promise);\n                }\n            });\n            if (promises.length)\n                 return Promise.all(promises).then(() => self.viewElement(self.template));\n        }\n\n\t\treturn this.viewElement(this.template);\n\t},\n\n\tmounted () {\n        var vm = this,\n            model = this.model;\n\t\tif (model.dataLoader) {\n\t\t\tvar p = model.dataLoader.load(model.columns);\n            if (p) {\n                model.loadingData = true;\n                p.then((data) => {\n                    // var allData = model.allData;\n                    model.loadingData = false;\n                    addData(vm, data);\n                }, (err) => {\n                    model.loadingData = false;\n                    return err;\n                });\n            }\n        }\n\t}\n});\n\n// new data to include in the table\nfunction addData (vm, newData) {\n    var records = vm.records,\n        data = vm.data,\n        model = vm.model,\n        delayData = newData;\n\n    let record, value;\n\n    newData = delayData.splice(0, 100);\n\n    newData.forEach((d) => {\n        if (d.id) {\n            record = d.id ? records[d.id] : null;\n            if (record)\n                d = assign(record, d);\n            else {\n                data.push(d);\n                records[d.id] = d;\n            }\n        } else\n            data.push(d);\n        model.columns.forEach((col) => {\n            d[col.name] = col.$parse(d[col.name]);\n        });\n    });\n\n    //if (delayData.length)\n    //    timeout(() => addData(vm, delayData));\n\n    var rows = vm.sel.select('tbody')\n                .selectAll('tr').data(data);\n\n    rows\n        .enter()\n            .append('tr')\n            .attr('scope', 'row')\n            .selectAll('td')\n            .data(model.columns)\n            .enter()\n                .append('td')\n                .style('display', (col) => {\n                    return col.hidden ? 'none' : null;\n                })\n                .html(function (col) {\n                    record = this.parentNode.__data__;\n                    value = record[col.name];\n                    return col.$html(value === undefined ? '' : value);\n                });\n}\n","//\n//  d3-view components\n//  ======================\n//\n//  d3-view plugin for visualization components\n//\nimport tabularPlugins from '../plugins/index';\nimport dashboard from './dashboard';\nimport visual from './visual';\nimport tabular from './tabular';\n\n\n// Visual components plugin\nexport default {\n    tabularPlugins,\n\n    install (vm) {\n        vm.addComponent('dashboard', dashboard);\n        vm.addComponent('visual', visual);\n        vm.addComponent('tabular', tabular);\n    }\n\n};\n","export default function (x) {\n    return function constant() {\n        return x;\n    };\n}\n","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function (d) {\n    return d;\n}\n","import constant from \"../utils/constant\";\nimport descending from \"../utils/descending\";\nimport identity from \"../utils/identity\";\n\n//\n//  Pyramid Shape generator\n//  ============================\nexport default function () {\n    var value = identity,\n        pad = constant(0),\n        height = 1,\n        base = 1;\n\n    function pyramid (data) {\n        let i, j, k, points, fraction,\n            hi, x, y, v0, ph, pj;\n        var n = data.length,\n            r = 0.5*base/height,\n            polygons = new Array(n),\n            index = new Array(n);\n\n        for (i=0; i<n; ++i) {\n            polygons[index[i] = i] = +value(data[i], i, data);\n        }\n\n        // Sort the polygons\n        index.sort((i, j) => {return descending(polygons[i], polygons[j]);});\n\n        // Compute the polygons! They are stored in the original data's order.\n        v0 = polygons[index[0]];\n        hi = null;\n\n        for (i=n-1; i>=0; --i) {\n            points = [];\n            if (hi === null)\n                points.push([0, 0]);\n            else {\n                y = hi + ph;\n                x = y*r;\n                points.push([-x, y]);\n                points.push([x, y]);\n            }\n            j = index[i];\n            k = n - i - 1;\n            fraction = polygons[j]/v0;\n            pj = Math.sqrt(fraction);\n            hi = height*pj;\n            ph = i ? pad(pj, k) : 0;\n            y = hi - ph;\n            x = y*r;\n            points.push([x, y]);\n            points.push([-x, y]);\n            polygons[j] = {\n                index: k,\n                value: polygons[j],\n                fraction: fraction,\n                points: points\n            };\n        }\n        return polygons;\n    }\n\n    pyramid.value = function(_) {\n        return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pyramid) : value;\n    };\n\n    pyramid.base = function (_) {\n        return arguments.length ? (base = _, pyramid) : base;\n    };\n\n    pyramid.height = function (_) {\n        return arguments.length ? (height = _, pyramid) : height;\n    };\n\n    pyramid.pad = function(_) {\n        return arguments.length ? (pad = typeof _ === \"function\" ? _ : constant(+_), pyramid) : pad;\n    };\n\n    return pyramid;\n}\n","import * as d3_shape from 'd3-shape';\nimport {extent} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport warn from '../utils/warn';\nimport accessor from '../utils/accessor';\nimport camelFunction from '../utils/camelfunction';\n\n\nexport const lineDrawing = {\n\n    fill (meta) {\n        var cscale = this.colorScale().domain([0, meta.length-1]);\n\n        function fill (d, index) {\n            return cscale(index);\n        }\n\n        fill.scale = cscale;\n\n        return fill;\n    },\n\n    curve (name) {\n        var obj = camelFunction(d3_shape, 'curve', name);\n        if (!obj) {\n            warn(`Could not locate curve type \"${name}\"`);\n            obj = camelFunction(d3_shape, 'curve', 'cardinalOpen');\n        }\n        return obj;\n    },\n\n    range (data, x, y, agg) {\n        var range = {\n            x: extent(data, x),\n            y: extent(data, y)\n        };\n        if (agg) {\n            Array.prototype.push.apply(agg.x, range.x);\n            Array.prototype.push.apply(agg.y, range.y);\n        }\n    },\n\n    newRange () {\n        return {\n            x: [],\n            y: []\n        };\n    }\n};\n\n//\n//  Line Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('linechart', lineDrawing, {\n\n    options: {\n        lineWidth: 1,\n        curve: 'cardinalOpen',\n        x: 'x',\n        y: 'y',\n        scaleX: 'linear',\n        scaleY: 'linear'\n    },\n\n    doDraw (frame) {\n        var self = this,\n            range = this.newRange(),\n            model = this.getModel(),\n            color = this.getModel('color'),\n            x = accessor(model.x),\n            y = accessor(model.y),\n            data = frame.series.values(),\n            meta = frame.series.keys().map((label, index) => {\n                return {\n                    index: index,\n                    label: label,\n                    range: self.range(data[index], x, y, range)\n                };\n            }),\n            box = this.boundingBox(),\n            paper = this.paper(),\n            lines = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.line').data(data),\n            strokeColor = this.fill(meta),\n            //merge = paper.transition('update'),\n            line = d3_shape.line()\n                .x(this.x(box, range.x))\n                .y(this.y(box, range.y))\n                .curve(this.curve(model.curve));\n\n        lines\n            .enter()\n                .append('path')\n                .attr('class', 'line')\n                .attr('fill', 'none')\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', 0)\n                .attr('stroke-width', model.lineWidth)\n            .merge(lines)\n                //.transition(merge)\n                .attr('stroke', strokeColor)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('stroke-width', model.lineWidth)\n                .attr('d', line);\n\n        lines\n            .exit()\n            .remove();\n    },\n\n    x (box, ranges) {\n        var model = this.getModel(),\n            scale = self.getScale(model.scaleX)\n                .domain(extent(ranges))\n                .range([0, box.innerWidth]);\n        return function (d) {\n            return scale(d[model.x]);\n        };\n    },\n\n    y (box, ranges) {\n        var model = this.getModel(),\n            scale = self.getScale(model.scaleY)\n                .domain(extent(ranges))\n                .range([box.innerHeight, 0]);\n        return function (d) {\n            return scale(d[model.y]);\n        };\n    }\n});\n","import {stack} from 'd3-shape';\nimport {max} from 'd3-array';\n\nimport createChart from '../core/chart';\nimport {lineDrawing} from './line';\n//\n//  Bar Chart\n//  =============\n//\n//  The barchart is one of the most flexible visuals.\n//  It can be used to display label data as well as\n//  timeserie data. It can display absulte values as\n//  proportional data via vertical staking and normalization\nexport default createChart('barchart', lineDrawing, {\n\n    options: {\n        orientation: 'vertical',\n        // stack multiple y series?\n        sortby: null, // specify \"x\" or \"y\"\n        stack: true,\n        normalize: false,\n        scale: 'linear',\n        padding: 0.1,\n        x: 'x',\n        y: 'y',\n        groupby: null,  // group data by a field for staked or grouped bar chart\n        //\n        // legend & tooltip\n        valueformat: '.1f',\n        legendType: 'color',\n        legendLabel: 'label'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            // color = this.getModel('color'),\n            data = frame.data,\n            box = this.boundingBox(),\n            paper = this.paper(),\n            bars = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left, box.total.top))\n                .selectAll('.group'),\n            x = model.x,\n            y = model.y,\n            groupby = model.groupby,\n            sx = this.getScale('band'),\n            sy = this.getScale(model.scale),\n            sz = this.getScale('ordinal'),\n            stacked = false,\n            width = null,\n            height = null,\n            xrect = x0,\n            yrect = y0,\n            yi = 1,\n            groups;\n\n        if (model.orientation === 'vertical') {\n            sx.rangeRound([0, box.innerWidth]).paddingInner(model.padding);\n            sy.rangeRound([box.innerHeight, 0]);\n            width = sx.bandwidth;\n            height = bardim;\n        } else {\n            sx.rangeRound([0, box.innerHeight]).paddingInner(model.padding);\n            sy.rangeRound([0, box.innerWidth]);\n            yi = 0;\n            width = bardim;\n            height = sx.bandwidth;\n            xrect = y0;\n            yrect = x0;\n        }\n\n        if (groupby) {\n            groups = frame.dimension(groupby).group().top(Infinity).map(g => g['key']);\n            if (groups.length <= 1) groups = null;\n        }\n\n        if (groups) {\n            frame = frame.pivot(x, groupby, y);\n            if (model.sortby === 'y') frame = frame.sortby('total');\n            data = frame.data;\n            sz.domain(groups).range(this.colors(data.length));\n            if (model.stack) {\n                if (model.normalize)\n                    this.normalize(frame.data);\n                stacked = true;\n            }\n        }\n\n        // set domain for the labels\n        sx.domain(data.map(d => d[x]));\n\n        if (stacked) {\n            sy.domain([0, max(data, d => d.total)]).nice();\n            data = stack().keys(groups)(data);\n            var rects = bars.data(data)\n                            .enter()\n                            .append('g')\n                                .classed('group', true)\n                                .attr('fill', d => sz(d.key))\n                            .merge(bars)\n                                .selectAll('rect')\n                                .data(d => d);\n            rects.enter()\n                .append('rect')\n                .merge(rects)\n                    .attr('x', xrect)\n                    .attr('y', yrect)\n                    .attr('height', height)\n                    .attr('width', width);\n        } else {\n            var x1 = self.getScale('band').padding(0.5*model.padding);\n            return x1;\n        }\n\n        if (model.legendType && groups) {\n            this.legend({scale: sz}, box);\n        }\n\n        function bardim (d) {\n            return sy(d[1-yi]) - sy(d[yi]);\n        }\n\n        function x0 (d) {\n            return sx(d.data[x]);\n        }\n\n        function y0 (d) {\n            return sy(d[yi]);\n        }\n    }\n});\n","import {pie, arc} from 'd3-shape';\nimport {scaleOrdinal} from 'd3-scale';\nimport {viewExpression} from 'd3-view';\nimport {format} from 'd3-format';\n\nimport createChart from '../core/chart';\nimport {sizeValue} from '../utils/size';\n\n\nconst pi = Math.PI;\nconst rad = pi/180;\n\n\nexport const proportional = {\n\n    fill (data) {\n        var cscale = this.colorScale().domain([0, data.length-1]),\n            colors = data.map(d => cscale(d.index));\n\n        function fill (d) {\n            return colors[d.index];\n        }\n\n        fill.scale = cscale;\n        fill.colors = colors;\n\n        return fill;\n    },\n\n    proportionalData (frame, field) {\n        return frame.dimension(field).top(Infinity);\n    },\n\n    total (field) {\n        var total = 0;\n\n        function value (d) {\n            total += d[field];\n            return d[field];\n        }\n\n        value.total = () => total;\n        return value;\n    }\n};\n\n//\n//  Pie Chart\n//  =============\n//\nexport default createChart('piechart', proportional, {\n\n    options: {\n        // The data values from this field will be encoded as angular spans.\n        // If omitted, all pie slices will have equal spans\n        field: 'data',\n        label: 'label',\n        startAngle: 0,\n        endAngle: 360,\n        sort: false,\n        innerRadius: 0,\n        padAngle: 0,\n        cornerRadius: 0,\n        lineWidth: 1,\n        //\n        fractionFormat: '.1%',\n        legendType: 'color',\n        legendLabel: \"label + ' - ' + format(fraction)\"\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            color = this.getModel('color'),\n            field = model.field,\n            box = this.boundingBox(),\n            outerRadius = Math.min(box.innerWidth, box.innerHeight)/2,\n            innerRadius = sizeValue(model.innerRadius, outerRadius),\n            total = this.total(field),\n            angles = pie()\n                .padAngle(rad*model.padAngle)\n                .startAngle(rad*model.startAngle)\n                .endAngle(rad*model.endAngle)\n                .value(total),\n            arcs = arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius)\n                .cornerRadius(model.cornerRadius),\n            paper = this.paper(),\n            //update = paper.transition('update'),\n            data = angles(this.proportionalData(frame, field)),\n            fill = this.fill(data),\n            slices = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top+box.innerHeight/2))\n                .selectAll('.slice').data(data);\n\n        slices\n            .enter()\n                .append('path')\n                .attr('class', 'slice')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n            .merge(slices)\n                .transition()\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', arcs)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        slices.exit().remove();\n\n        if (!model.legendType) return;\n        total = total.total();\n        var expr = viewExpression(model.legendLabel),\n            fmt = format(model.fractionFormat),\n            labels = data.map((d, idx) => {\n                return expr.eval({\n                    d: d,\n                    value: d.value,\n                    format: fmt,\n                    total: total,\n                    fraction: d.value/total,\n                    label: d.data[model.label] || idx\n                });\n            });\n        this.legend({\n            scale: scaleOrdinal().domain(labels).range(fill.colors)\n        }, box);\n    }\n});\n","//\n//  Custom Symbol type\n//  =====================\n//\n//  Draw a polygon given an array of points\n//  This can be used as type in a d3-shape symbol\nexport default function (points) {\n\n    return {\n        draw (context) {\n            points.forEach((point, idx) => {\n                if (!idx) context.moveTo(point[0], point[1]);\n                else context.lineTo(point[0], point[1]);\n            });\n            context.closePath();\n        }\n    };\n}\n","import {symbol} from 'd3-shape';\nimport {scaleOrdinal} from 'd3-scale';\n\nimport createChart from '../core/chart';\nimport pyramid from '../transforms/pyramid';\nimport polygon from '../utils/polygon';\nimport {proportional} from './pie';\nimport {sizeValue} from '../utils/size';\n\n\nexport default createChart('pyramidchart', proportional, {\n\n    options: {\n        field: 'data',\n        pad: 0,\n        lineWidth: 1,\n        legendType: 'color'\n    },\n\n    doDraw (frame) {\n        var model = this.getModel(),\n            field = model.field,\n            color = this.getModel('color'),\n            box = this.boundingBox(),\n            pad = sizeValue(model.pad, Math.min(box.innerWidth, box.innerHeight)),\n            polygons = pyramid()\n                .base(box.innerWidth)\n                .height(box.innerHeight)\n                .pad(pad)\n                .value(d => d[field]),\n            data = polygons(this.proportionalData(frame, field)),\n            marks = symbol().type(d => polygon(d.points)).size(1),\n            fill = this.fill(data),\n            paper = this.paper(),\n            segments = paper.size(box).group()\n                .attr(\"transform\", this.translate(box.total.left+box.innerWidth/2, box.total.top))\n                .selectAll('.segment').data(data);\n\n        segments\n            .enter()\n                .append('path')\n                .attr('class', 'segment')\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', 0)\n                .attr('fill-opacity', 0)\n                .attr('fill', fill)\n                .attr('stroke-width', model.lineWidth)\n            .merge(segments)\n                //.transition(update)\n                .attr('stroke', color.stroke)\n                .attr('stroke-opacity', color.strokeOpacity)\n                .attr('d', marks)\n                .attr('fill', fill)\n                .attr('fill-opacity', color.fillOpacity);\n\n        segments.exit().remove();\n        this.legend({\n            scale: scaleOrdinal().domain(['a', 'b', 'c', 'd', 'e', 'f']).range(fill.colors)\n        }, box);\n    }\n\n});\n","import createChart from '../core/chart';\n\n//\n//  Treemap\n//  =============\n//\nexport default createChart('treemap', {\n    requires: ['d3-treemap']\n\n});\n","//\nexport {version as visualizeVersion} from './package.json';\n//\nexport {default as randomPath} from './src/utils/randompath';\n//\n// Data layer\nexport {default as DataStore} from './src/data/store';\nexport {default as dataSources} from './src/data/sources';\nexport {default as dataLocale} from './src/data/locale';\n\n//\n//  Core API\nexport {visuals} from './src/core/base';\nexport {default as crateChart} from './src/core/chart';\nexport {default as cratePaper, Svg} from './src/core/paper';\n//\n//  Components\nexport {default as visualComponents} from './src/components/index';\n\n// utilities\nexport {colorScales} from './src/plugins/color';\nexport {default as pyramid} from './src/transforms/pyramid';\n//\n//  Charts\n//  =========\n//\n//  Last import, important!\nexport {default as Visual} from './src/core/visual';\nexport {default as BarChart} from './src/charts/bar';\nexport {default as LineChart} from './src/charts/line';\nexport {default as PieChart} from './src/charts/pie';\nexport {default as PyramidChart} from './src/charts/pyramid';\nexport {default as Treemap} from './src/charts/treemap';\n"],"names":["defaults","size","options","assign","t","range","S","sigma","drift","data","x","y","norm","randomNormal","dx","i","length","config","_data","isArray","isObject","resolvedPromise","asFrame","prefix","msg","logger","warn","schemes","value","isString","indexOf","split","isUrl","url","fetch","viewProviders","self","then","parse","response","ct","headers","get","text","csvParse","json","source","store","frame","Promise","all","map","getData","frames","mergeFrames","expression","viewExpression","model","eval","field","d","DataFrame","serie","defineProperties","dimensions","series","prototype","_inner","cf","crossfilter","name","keepExisting","arguments","current","dispose","accessor","dimension","top","new","Infinity","key","total","group","reduce","pivoter","Object","m","pk","pv","o","record","mapper","filter","sortby","groupby","timeseries","dim","groups","newframe","tmp","forEach","filterExact","set","globalOptions","dateFormat","converters","entry","utcParse","parseFloat","fields","converter","mapfields","mappers","each","type","push","applyTransforms","transforms","ts","transform","dataEvents","dispatch","dataSourcePrototype","transformStore","constructor","DataSource","sources","values","cfg","getConfig","initDataSource","dataSource","dataName","pop","initialise","addTransforms","call","undefined","dataSources","add","array","remote","composite","DataStore","dataCount","create","p","remove","ds","cachedFrame","Error","def","timeFormat","symbol","locales","source1","source2","load","number","locale","time","formatDate","date","formatDateTime","dateTime","n","Math","round","pow","WIDTH","HEIGHT","sizeValue","getSize","element","width","height","getWidth","widthElement","getWidthElement","getHeight","heightElement","getHeightElement","el","getParentElementRect","elementWidth","elementHeight","w","getBoundingClientRect","s","select","left","padding","style","right","bottom","parent","node","v","tagName","parentNode","substring","CONTAINERS","visuals","visualPrototype","visualType","visualParent","getModel","$child","$new","$update","$on","draw","refSize","minSize","maxSize","max","min","container","idx","live","splice","viewBase","proto","opts","Visual","viewModel","events","types","createVisual","sel","classed","layers","drawCount","__visual__","uid","fit","clear","VisualClass","currentSize","toString","inBrowser","observer","MutationObserver","visualManager","observe","document","documentElement","records","nodes","removedNodes","nodeName","selectAll","destroy","viz","toUpperCase","protos","vizPrototype","chartPrototype","apply","visual","paper","_paper","paperType","render","PaperType","papers","isFunction","xt","yt","camelFunction","d3_scale","doDraw","createPaper","Paper","paperPrototype","box","attr","cname","enter","append","Svg","svg","menu","on","display","refreshMenu","minHeight","maxHeight","dataStore","isViz","setupLayer","setupVisual","addSources","layer","$set","resizeDelay","resize","viewDebounce","window","title","menuTitle","fontSize","minFontSize","html","px","KEYS","LEFTRIGHT","margin","boundingBox","calculate","margins","colorScales","color","scaleSequential","interpolateViridis","interpolateInferno","interpolateMagma","interpolatePlasma","interpolateWarm","interpolateCool","interpolateRainbow","interpolateCubehelixDefault","colorScale","scale","colors","domain","legend","legends","legendColor","legendSize","legendSymbol","vizModel","lgModel","legendType","orient","g","bb","locations","location","getBBox","translate","topLeft","topRight","bottomLeft","bottomRight","innerWidth","offsetY","offsetX","table","require","clusterize","Clusterize","cl","tableClass","striped","over","bordered","small","vizComponent","props","attrs","inner","getSchema","schema","build","input","createElement","root","class","VisualContainer","visualDashboard","mountInner","addVisual","parsers","isoParse","formatters","columns","col","properties","Array","label","hidden","$parse","string","$html","tableTpl","plugins","template","createColumns","promises","promise","plugin","tablePlugins","isPromise","viewElement","vm","dataLoader","loadingData","err","addData","newData","delayData","id","rows","__data__","addComponent","dashboard","tabular","constant","a","b","NaN","identity","pad","base","pyramid","j","k","points","fraction","hi","v0","ph","pj","r","polygons","index","sort","descending","sqrt","_","lineDrawing","meta","cscale","fill","obj","d3_shape","agg","extent","createChart","newRange","keys","lines","strokeColor","curve","lineWidth","merge","strokeOpacity","line","exit","ranges","getScale","scaleX","scaleY","innerHeight","bars","sx","sy","sz","stacked","xrect","x0","yrect","y0","yi","orientation","rangeRound","paddingInner","bandwidth","bardim","pivot","stack","normalize","nice","rects","x1","pi","PI","rad","proportional","outerRadius","innerRadius","angles","pie","padAngle","startAngle","endAngle","arcs","arc","cornerRadius","proportionalData","slices","stroke","transition","fillOpacity","expr","legendLabel","fmt","format","fractionFormat","labels","scaleOrdinal","context","point","moveTo","lineTo","closePath","marks","polygon","segments"],"mappings":"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"}